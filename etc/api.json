{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.25.0",
    "schemaVersion": 1006,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@event",
          "syntaxKind": "block"
        },
        {
          "tagName": "@since",
          "syntaxKind": "block"
        },
        {
          "tagName": "@category",
          "syntaxKind": "block"
        }
      ],
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "mongodb!",
  "docComment": "",
  "name": "mongodb",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "mongodb!",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "mongodb!AbstractCursor:class",
          "docComment": "/**\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `AbstractCursor` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractCursor<TSchema = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", CursorEvents extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractCursorEvents",
              "canonicalReference": "mongodb!AbstractCursorEvents:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "AbstractCursorEvents",
              "canonicalReference": "mongodb!AbstractCursorEvents:type"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "TypedEventEmitter",
              "canonicalReference": "mongodb!TypedEventEmitter:class"
            },
            {
              "kind": "Content",
              "text": "<CursorEvents> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "typeParameterName": "CursorEvents",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "name": "AbstractCursor",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#[Symbol.asyncIterator]:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.asyncIterator",
                  "canonicalReference": "!SymbolConstructor#asyncIterator"
                },
                {
                  "kind": "Content",
                  "text": "](): "
                },
                {
                  "kind": "Reference",
                  "text": "AsyncIterator",
                  "canonicalReference": "!AsyncIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema, void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "[Symbol.asyncIterator]"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#addCursorFlag:member(1)",
              "docComment": "/**\n * Add a cursor flag to the cursor\n *\n * @param flag - The flag to set, must be one of following ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'partial' -.\n *\n * @param value - The flag boolean value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addCursorFlag(flag: "
                },
                {
                  "kind": "Reference",
                  "text": "CursorFlag",
                  "canonicalReference": "mongodb!CursorFlag:type"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "flag",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addCursorFlag"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#batchSize:member(1)",
              "docComment": "/**\n * Set the batch size for the cursor.\n *\n * @param value - The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/find/ | find command documentation}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "batchSize(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "batchSize"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#bufferedCount:member(1)",
              "docComment": "/**\n * Returns current buffered documents length\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bufferedCount(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "bufferedCount"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#clone:member(1)",
              "docComment": "/**\n * Returns a new uninitialized copy of this cursor, with options matching those that have been set on the current instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractCursor",
                  "canonicalReference": "mongodb!AbstractCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#close:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "close(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "close"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#close:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "close(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "close"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#close:member(3)",
              "docComment": "/**\n * @deprecated\n *\n * options argument is deprecated\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "close(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CursorCloseOptions",
                  "canonicalReference": "mongodb!CursorCloseOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "close"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#close:member(4)",
              "docComment": "/**\n * @deprecated\n *\n * options argument is deprecated\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "close(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CursorCloseOptions",
                  "canonicalReference": "mongodb!CursorCloseOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "close"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!AbstractCursor.CLOSE:member",
              "docComment": "/**\n * @event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CLOSE: "
                },
                {
                  "kind": "Content",
                  "text": "\"close\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CLOSE",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!AbstractCursor#closed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get closed(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "closed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#forEach:member(1)",
              "docComment": "/**\n * Iterates over all the documents for this cursor using the iterator, callback pattern.\n *\n * @param iterator - The iteration callback.\n *\n * @param callback - The end callback.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forEach(iterator: "
                },
                {
                  "kind": "Content",
                  "text": "(doc: TSchema) => boolean | void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "iterator",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "forEach"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#forEach:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forEach(iterator: "
                },
                {
                  "kind": "Content",
                  "text": "(doc: TSchema) => boolean | void"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "iterator",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "forEach"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#hasNext:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasNext(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "hasNext"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#hasNext:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasNext(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "hasNext"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!AbstractCursor#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get id(): "
                },
                {
                  "kind": "Reference",
                  "text": "Long",
                  "canonicalReference": "bson!Long:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!AbstractCursor#killed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get killed(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "killed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!AbstractCursor#loadBalanced:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get loadBalanced(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "loadBalanced",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#map:member(1)",
              "docComment": "/**\n * Map all documents using the provided function If there is a transform set on the cursor, that will be called first and the result passed to this function's transform.\n *\n * @remarks\n *\n * **Note for Typescript Users:** adding a transform changes the return type of the iteration of this cursor, it **does not** return a new instance of a cursor. This means when calling map, you should always assign the result to a new variable in order to get a correctly typed cursor variable. Take note of the following example:\n *\n * @param transform - The mapping transformation method.\n *\n * @example\n * ```typescript\n * const cursor: FindCursor<Document> = coll.find();\n * const mappedCursor: FindCursor<number> = cursor.map(doc => Object.keys(doc).length);\n * const keyCounts: number[] = await mappedCursor.toArray(); // cursor.toArray() still returns Document[]\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "map<T = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(transform: "
                },
                {
                  "kind": "Content",
                  "text": "(doc: TSchema) => T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractCursor",
                  "canonicalReference": "mongodb!AbstractCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "transform",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "map"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#maxTimeMS:member(1)",
              "docComment": "/**\n * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)\n *\n * @param value - Number of milliseconds to wait before aborting the query.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxTimeMS(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "maxTimeMS"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!AbstractCursor#namespace:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get namespace(): "
                },
                {
                  "kind": "Reference",
                  "text": "MongoDBNamespace",
                  "canonicalReference": "mongodb!MongoDBNamespace:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "namespace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#next:member(1)",
              "docComment": "/**\n * Get the next available document from the cursor, returns null if no more documents are available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "next(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema | null>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "next"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#next:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "next(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema | null>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "next"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#next:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "next(callback?: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema | null>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema | null> | void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "next"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#readBufferedDocuments:member(1)",
              "docComment": "/**\n * Returns current buffered documents\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readBufferedDocuments(number?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TSchema[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "number",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "readBufferedDocuments"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!AbstractCursor#readConcern:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get readConcern(): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadConcern",
                  "canonicalReference": "mongodb!ReadConcern:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!AbstractCursor#readPreference:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get readPreference(): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readPreference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#rewind:member(1)",
              "docComment": "/**\n * Rewind this cursor to its uninitialized state. Any options that are present on the cursor will remain in effect. Iterating this cursor will cause new queries to be sent to the server, even if the resultant data has already been retrieved by this cursor.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rewind(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "rewind"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#stream:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stream(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "CursorStreamOptions",
                  "canonicalReference": "mongodb!CursorStreamOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Readable",
                  "canonicalReference": "!internal.Readable:class"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "AsyncIterable",
                  "canonicalReference": "!AsyncIterable:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "stream"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#toArray:member(1)",
              "docComment": "/**\n * Returns an array of documents. The caller is responsible for making sure that there is enough memory to store the results. Note that the array only contains partial results when this cursor had been previously accessed. In that case, cursor.rewind() can be used to reset the cursor.\n *\n * @param callback - The result callback.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toArray(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "toArray"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#toArray:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toArray(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema[]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "toArray"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#tryNext:member(1)",
              "docComment": "/**\n * Try to get the next available document from the cursor or `null` if an empty batch is returned\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tryNext(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema | null>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "tryNext"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#tryNext:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tryNext(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema | null>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "tryNext"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#withReadConcern:member(1)",
              "docComment": "/**\n * Set the ReadPreference for the cursor.\n *\n * @param readPreference - The new read preference for the cursor.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withReadConcern(readConcern: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadConcernLike",
                  "canonicalReference": "mongodb!ReadConcernLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "readConcern",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "withReadConcern"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AbstractCursor#withReadPreference:member(1)",
              "docComment": "/**\n * Set the ReadPreference for the cursor.\n *\n * @param readPreference - The new read preference for the cursor.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withReadPreference(readPreference: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreferenceLike",
                  "canonicalReference": "mongodb!ReadPreferenceLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "readPreference",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "withReadPreference"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!AbstractCursorEvents:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AbstractCursorEvents = "
            },
            {
              "kind": "Content",
              "text": "{\n    ["
            },
            {
              "kind": "Reference",
              "text": "AbstractCursor.CLOSE",
              "canonicalReference": "mongodb!AbstractCursor.CLOSE"
            },
            {
              "kind": "Content",
              "text": "](): void;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AbstractCursorEvents",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!AbstractCursorOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AbstractCursorOptions extends "
            },
            {
              "kind": "Reference",
              "text": "BSONSerializeOptions",
              "canonicalReference": "mongodb!BSONSerializeOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AbstractCursorOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AbstractCursorOptions#awaitData:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "awaitData?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "awaitData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AbstractCursorOptions#batchSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "batchSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "batchSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AbstractCursorOptions#comment:member",
              "docComment": "/**\n * Comment to apply to the operation.\n *\n * In server versions pre-4.4, 'comment' must be string. A server error will be thrown if any other type is provided.\n *\n * In server versions 4.4 and above, 'comment' can be any valid BSON type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "comment?: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "comment",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AbstractCursorOptions#maxTimeMS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxTimeMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxTimeMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AbstractCursorOptions#noCursorTimeout:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "noCursorTimeout?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "noCursorTimeout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AbstractCursorOptions#readConcern:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readConcern?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadConcernLike",
                  "canonicalReference": "mongodb!ReadConcernLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AbstractCursorOptions#readPreference:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readPreference?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreferenceLike",
                  "canonicalReference": "mongodb!ReadPreferenceLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readPreference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AbstractCursorOptions#session:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "session?: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientSession",
                  "canonicalReference": "mongodb!ClientSession:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "session",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AbstractCursorOptions#tailable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tailable?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tailable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!AcceptedFields:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AcceptedFields<TSchema, FieldType, AssignableType> = "
            },
            {
              "kind": "Content",
              "text": "{\n    readonly [key in "
            },
            {
              "kind": "Reference",
              "text": "KeysOfAType",
              "canonicalReference": "mongodb!KeysOfAType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, FieldType>]?: AssignableType;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AcceptedFields",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "FieldType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "AssignableType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!AddToSetOperators:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AddToSetOperators<Type> = "
            },
            {
              "kind": "Content",
              "text": "{\n    $each?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Flatten",
              "canonicalReference": "mongodb!Flatten:type"
            },
            {
              "kind": "Content",
              "text": "<Type>>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AddToSetOperators",
          "typeParameters": [
            {
              "typeParameterName": "Type",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!AddUserOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AddUserOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AddUserOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AddUserOptions#customData:member",
              "docComment": "/**\n * Custom data associated with the user (only Mongodb 2.6 or higher)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "customData?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "customData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AddUserOptions#digestPassword:member",
              "docComment": "/**\n * @deprecated\n *\n * Please use db.command('createUser', ...) instead for this option\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "digestPassword?: "
                },
                {
                  "kind": "Content",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "digestPassword",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AddUserOptions#roles:member",
              "docComment": "/**\n * Roles associated with the created user\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "roles?: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[] | "
                },
                {
                  "kind": "Reference",
                  "text": "RoleSpecification",
                  "canonicalReference": "mongodb!RoleSpecification:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "RoleSpecification",
                  "canonicalReference": "mongodb!RoleSpecification:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "roles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!Admin:class",
          "docComment": "/**\n * The **Admin** class is an internal class that allows convenient access to the admin functionality and commands for MongoDB.\n *\n * **ADMIN Cannot directly be instantiated**\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `Admin` class.\n *\n * @example\n * ```js\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n *\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Use the admin database for the operation\n *   const adminDb = client.db(dbName).admin();\n *\n *   // List all the available databases\n *   adminDb.listDatabases(function(err, dbs) {\n *     expect(err).to.not.exist;\n *     test.ok(dbs.databases.length > 0);\n *     client.close();\n *   });\n * });\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Admin "
            }
          ],
          "releaseTag": "Public",
          "name": "Admin",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#addUser:member(1)",
              "docComment": "/**\n * Add a user to the database\n *\n * @param username - The username for the new user\n *\n * @param password - An optional password for the new user\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#addUser:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#addUser:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", password: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "password",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#addUser:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", password: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "password",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#addUser:member(5)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "AddUserOptions",
                  "canonicalReference": "mongodb!AddUserOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 5,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#addUser:member(6)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "AddUserOptions",
                  "canonicalReference": "mongodb!AddUserOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 6,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#addUser:member(7)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", password: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "AddUserOptions",
                  "canonicalReference": "mongodb!AddUserOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 7,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "password",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#addUser:member(8)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", password: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "AddUserOptions",
                  "canonicalReference": "mongodb!AddUserOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 8,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "password",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#buildInfo:member(1)",
              "docComment": "/**\n * Retrieve the server build information\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buildInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "buildInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#buildInfo:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buildInfo(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "buildInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#buildInfo:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buildInfo(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CommandOperationOptions",
                  "canonicalReference": "mongodb!CommandOperationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "buildInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#buildInfo:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buildInfo(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CommandOperationOptions",
                  "canonicalReference": "mongodb!CommandOperationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "buildInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#command:member(1)",
              "docComment": "/**\n * Execute a command\n *\n * @param command - The command to execute\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "command(command: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "command",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "command"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#command:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "command(command: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "command",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "command"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#command:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "command(command: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "RunCommandOptions",
                  "canonicalReference": "mongodb!RunCommandOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "command",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "command"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#command:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "command(command: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "RunCommandOptions",
                  "canonicalReference": "mongodb!RunCommandOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "command",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "command"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#listDatabases:member(1)",
              "docComment": "/**\n * List the available databases\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listDatabases(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ListDatabasesResult",
                  "canonicalReference": "mongodb!ListDatabasesResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "listDatabases"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#listDatabases:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listDatabases(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ListDatabasesResult",
                  "canonicalReference": "mongodb!ListDatabasesResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "listDatabases"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#listDatabases:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listDatabases(options: "
                },
                {
                  "kind": "Reference",
                  "text": "ListDatabasesOptions",
                  "canonicalReference": "mongodb!ListDatabasesOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ListDatabasesResult",
                  "canonicalReference": "mongodb!ListDatabasesResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "listDatabases"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#listDatabases:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listDatabases(options: "
                },
                {
                  "kind": "Reference",
                  "text": "ListDatabasesOptions",
                  "canonicalReference": "mongodb!ListDatabasesOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ListDatabasesResult",
                  "canonicalReference": "mongodb!ListDatabasesResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "listDatabases"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#ping:member(1)",
              "docComment": "/**\n * Ping the MongoDB server and retrieve results\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ping(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "ping"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#ping:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ping(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "ping"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#ping:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ping(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CommandOperationOptions",
                  "canonicalReference": "mongodb!CommandOperationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "ping"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#ping:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ping(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CommandOperationOptions",
                  "canonicalReference": "mongodb!CommandOperationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "ping"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#removeUser:member(1)",
              "docComment": "/**\n * Remove a user from a database\n *\n * @param username - The username to remove\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "removeUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#removeUser:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "removeUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#removeUser:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "RemoveUserOptions",
                  "canonicalReference": "mongodb!RemoveUserOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "removeUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#removeUser:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "RemoveUserOptions",
                  "canonicalReference": "mongodb!RemoveUserOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "removeUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#replSetGetStatus:member(1)",
              "docComment": "/**\n * Get ReplicaSet status\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replSetGetStatus(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "replSetGetStatus"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#replSetGetStatus:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replSetGetStatus(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "replSetGetStatus"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#replSetGetStatus:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replSetGetStatus(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CommandOperationOptions",
                  "canonicalReference": "mongodb!CommandOperationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "replSetGetStatus"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#replSetGetStatus:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replSetGetStatus(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CommandOperationOptions",
                  "canonicalReference": "mongodb!CommandOperationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "replSetGetStatus"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#serverInfo:member(1)",
              "docComment": "/**\n * Retrieve the server build information\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "serverInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#serverInfo:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverInfo(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "serverInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#serverInfo:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverInfo(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CommandOperationOptions",
                  "canonicalReference": "mongodb!CommandOperationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "serverInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#serverInfo:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverInfo(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CommandOperationOptions",
                  "canonicalReference": "mongodb!CommandOperationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "serverInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#serverStatus:member(1)",
              "docComment": "/**\n * Retrieve this db's server status.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverStatus(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "serverStatus"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#serverStatus:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverStatus(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "serverStatus"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#serverStatus:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverStatus(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CommandOperationOptions",
                  "canonicalReference": "mongodb!CommandOperationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "serverStatus"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#serverStatus:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverStatus(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CommandOperationOptions",
                  "canonicalReference": "mongodb!CommandOperationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "serverStatus"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#validateCollection:member(1)",
              "docComment": "/**\n * Validate an existing collection\n *\n * @param collectionName - The name of the collection to validate.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "validateCollection(collectionName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collectionName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "validateCollection"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#validateCollection:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "validateCollection(collectionName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "collectionName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "validateCollection"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#validateCollection:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "validateCollection(collectionName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "ValidateCollectionOptions",
                  "canonicalReference": "mongodb!ValidateCollectionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "collectionName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "validateCollection"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Admin#validateCollection:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "validateCollection(collectionName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "ValidateCollectionOptions",
                  "canonicalReference": "mongodb!ValidateCollectionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "collectionName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "validateCollection"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!AggregateOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AggregateOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AggregateOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AggregateOptions#allowDiskUse:member",
              "docComment": "/**\n * allowDiskUse lets the server know if it can use disk to store temporary results for the aggregation (requires mongodb 2.6 \\>).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "allowDiskUse?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "allowDiskUse",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AggregateOptions#batchSize:member",
              "docComment": "/**\n * The number of documents to return per batch. See [aggregation documentation](https://docs.mongodb.com/manual/reference/command/aggregate).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "batchSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "batchSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AggregateOptions#bypassDocumentValidation:member",
              "docComment": "/**\n * Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bypassDocumentValidation?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bypassDocumentValidation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AggregateOptions#collation:member",
              "docComment": "/**\n * Specify collation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collation?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollationOptions",
                  "canonicalReference": "mongodb!CollationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AggregateOptions#cursor:member",
              "docComment": "/**\n * Return the query as cursor, on 2.6 \\> it returns as a real cursor on pre 2.6 it returns as an emulated cursor.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cursor?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "cursor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AggregateOptions#hint:member",
              "docComment": "/**\n * Add an index selection hint to an aggregation command\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hint?: "
                },
                {
                  "kind": "Reference",
                  "text": "Hint",
                  "canonicalReference": "mongodb!Hint:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AggregateOptions#let:member",
              "docComment": "/**\n * Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "let?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "let",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AggregateOptions#maxAwaitTimeMS:member",
              "docComment": "/**\n * The maximum amount of time for the server to wait on new documents to satisfy a tailable cursor query.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxAwaitTimeMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxAwaitTimeMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AggregateOptions#maxTimeMS:member",
              "docComment": "/**\n * specifies a cumulative time limit in milliseconds for processing operations on the cursor. MongoDB interrupts the operation at the earliest following interrupt point.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxTimeMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxTimeMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AggregateOptions#out:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "out?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "out",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!AggregationCursor:class",
          "docComment": "/**\n * The **AggregationCursor** class is an internal class that embodies an aggregation cursor on MongoDB allowing for iteration over the results returned from the underlying query. It supports one by one document iteration, conversion to an array or can be iterated as a Node 4.X or higher stream\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `AggregationCursor` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class AggregationCursor<TSchema = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractCursor",
              "canonicalReference": "mongodb!AbstractCursor:class"
            },
            {
              "kind": "Content",
              "text": "<TSchema> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "AggregationCursor",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AggregationCursor#clone:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "AggregationCursor",
                  "canonicalReference": "mongodb!AggregationCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AggregationCursor#explain:member(1)",
              "docComment": "/**\n * Execute the explain for the cursor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "explain(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "explain"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AggregationCursor#explain:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "explain(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "explain"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AggregationCursor#explain:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "explain(verbosity: "
                },
                {
                  "kind": "Reference",
                  "text": "ExplainVerbosityLike",
                  "canonicalReference": "mongodb!ExplainVerbosityLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "verbosity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "explain"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AggregationCursor#geoNear:member(1)",
              "docComment": "/**\n * @deprecated\n *\n * Add a geoNear stage to the aggregation pipeline\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "geoNear($geoNear: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "$geoNear",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "geoNear"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AggregationCursor#group:member(1)",
              "docComment": "/**\n * Add a group stage to the aggregation pipeline\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "group<T = "
                },
                {
                  "kind": "Content",
                  "text": "TSchema"
                },
                {
                  "kind": "Content",
                  "text": ">($group: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AggregationCursor",
                  "canonicalReference": "mongodb!AggregationCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "$group",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "group"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AggregationCursor#limit:member(1)",
              "docComment": "/**\n * Add a limit stage to the aggregation pipeline\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "limit($limit: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "$limit",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "limit"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AggregationCursor#lookup:member(1)",
              "docComment": "/**\n * Add a lookup stage to the aggregation pipeline\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lookup($lookup: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "$lookup",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "lookup"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AggregationCursor#map:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "map<T>(transform: "
                },
                {
                  "kind": "Content",
                  "text": "(doc: TSchema) => T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AggregationCursor",
                  "canonicalReference": "mongodb!AggregationCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "transform",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "map"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AggregationCursor#match:member(1)",
              "docComment": "/**\n * Add a match stage to the aggregation pipeline\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "match($match: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "$match",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "match"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AggregationCursor#out:member(1)",
              "docComment": "/**\n * Add an out stage to the aggregation pipeline\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "out($out: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        db: string;\n        coll: string;\n    } | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "$out",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "out"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!AggregationCursor#pipeline:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get pipeline(): "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pipeline",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AggregationCursor#project:member(1)",
              "docComment": "/**\n * Add a project stage to the aggregation pipeline\n *\n * @remarks\n *\n * In order to strictly type this function you must provide an interface that represents the effect of your projection on the result documents.\n *\n * **Note for Typescript Users:** adding a transform changes the return type of the iteration of this cursor, it **does not** return a new instance of a cursor. This means when calling project, you should always assign the result to a new variable in order to get a correctly typed cursor variable. Take note of the following example:\n *\n * @example\n * ```typescript\n * // Best way\n * const docs: AggregationCursor<{ a: number }> = cursor.project<{ a: number }>({ _id: 0, a: true });\n * // Flexible way\n * const docs: AggregationCursor<Document> = cursor.project({ _id: 0, a: true });\n * ```\n *\n * @example\n * ```typescript\n * const cursor: AggregationCursor<{ a: number; b: string }> = coll.aggregate([]);\n * const projectCursor = cursor.project<{ a: number }>({ _id: 0, a: true });\n * const aPropOnlyArray: {a: number}[] = await projectCursor.toArray();\n *\n * // or always use chaining and save the final cursor\n *\n * const cursor = coll.aggregate().project<{ a: string }>({\n *   _id: 0,\n *   a: { $convert: { input: '$a', to: 'string' }\n * }});\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "project<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">($project: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AggregationCursor",
                  "canonicalReference": "mongodb!AggregationCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "$project",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "project"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AggregationCursor#redact:member(1)",
              "docComment": "/**\n * Add a redact stage to the aggregation pipeline\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "redact($redact: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "$redact",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "redact"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AggregationCursor#skip:member(1)",
              "docComment": "/**\n * Add a skip stage to the aggregation pipeline\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "skip($skip: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "$skip",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "skip"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AggregationCursor#sort:member(1)",
              "docComment": "/**\n * Add a sort stage to the aggregation pipeline\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sort($sort: "
                },
                {
                  "kind": "Reference",
                  "text": "Sort",
                  "canonicalReference": "mongodb!Sort:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "$sort",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "sort"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!AggregationCursor#unwind:member(1)",
              "docComment": "/**\n * Add a unwind stage to the aggregation pipeline\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unwind($unwind: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "$unwind",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "unwind"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!AggregationCursorOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AggregationCursorOptions extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractCursorOptions",
              "canonicalReference": "mongodb!AbstractCursorOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "AggregateOptions",
              "canonicalReference": "mongodb!AggregateOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AggregationCursorOptions",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!AlternativeType:type",
          "docComment": "/**\n * It is possible to search using alternative types in mongodb e.g. string types can be searched using a regex in mongo array types can be searched using their element type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AlternativeType<T> = "
            },
            {
              "kind": "Content",
              "text": "T extends "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U> ? T | "
            },
            {
              "kind": "Reference",
              "text": "RegExpOrString",
              "canonicalReference": "mongodb!RegExpOrString:type"
            },
            {
              "kind": "Content",
              "text": "<U> : "
            },
            {
              "kind": "Reference",
              "text": "RegExpOrString",
              "canonicalReference": "mongodb!RegExpOrString:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AlternativeType",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!AnyBulkWriteOperation:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AnyBulkWriteOperation<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    insertOne: "
            },
            {
              "kind": "Reference",
              "text": "InsertOneModel",
              "canonicalReference": "mongodb!InsertOneModel:interface"
            },
            {
              "kind": "Content",
              "text": "<TSchema>;\n} | {\n    replaceOne: "
            },
            {
              "kind": "Reference",
              "text": "ReplaceOneModel",
              "canonicalReference": "mongodb!ReplaceOneModel:interface"
            },
            {
              "kind": "Content",
              "text": "<TSchema>;\n} | {\n    updateOne: "
            },
            {
              "kind": "Reference",
              "text": "UpdateOneModel",
              "canonicalReference": "mongodb!UpdateOneModel:interface"
            },
            {
              "kind": "Content",
              "text": "<TSchema>;\n} | {\n    updateMany: "
            },
            {
              "kind": "Reference",
              "text": "UpdateManyModel",
              "canonicalReference": "mongodb!UpdateManyModel:interface"
            },
            {
              "kind": "Content",
              "text": "<TSchema>;\n} | {\n    deleteOne: "
            },
            {
              "kind": "Reference",
              "text": "DeleteOneModel",
              "canonicalReference": "mongodb!DeleteOneModel:interface"
            },
            {
              "kind": "Content",
              "text": "<TSchema>;\n} | {\n    deleteMany: "
            },
            {
              "kind": "Reference",
              "text": "DeleteManyModel",
              "canonicalReference": "mongodb!DeleteManyModel:interface"
            },
            {
              "kind": "Content",
              "text": "<TSchema>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AnyBulkWriteOperation",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 6,
            "endIndex": 19
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!AnyError:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AnyError = "
            },
            {
              "kind": "Reference",
              "text": "MongoError",
              "canonicalReference": "mongodb!MongoError:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AnyError",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ArrayElement:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ArrayElement<Type> = "
            },
            {
              "kind": "Content",
              "text": "Type extends "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<infer Item> ? Item : never"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ArrayElement",
          "typeParameters": [
            {
              "typeParameterName": "Type",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ArrayOperator:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ArrayOperator<Type> = "
            },
            {
              "kind": "Content",
              "text": "{\n    $each?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Flatten",
              "canonicalReference": "mongodb!Flatten:type"
            },
            {
              "kind": "Content",
              "text": "<Type>>;\n    $slice?: number;\n    $position?: number;\n    $sort?: "
            },
            {
              "kind": "Reference",
              "text": "Sort",
              "canonicalReference": "mongodb!Sort:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ArrayOperator",
          "typeParameters": [
            {
              "typeParameterName": "Type",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!Auth:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Auth "
            }
          ],
          "releaseTag": "Public",
          "name": "Auth",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!Auth#password:member",
              "docComment": "/**\n * The password for auth\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "password?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "password",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!Auth#username:member",
              "docComment": "/**\n * The username for auth\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "username?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "username",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!AuthMechanism:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AuthMechanism = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "AuthMechanism",
              "canonicalReference": "mongodb!AuthMechanism:var"
            },
            {
              "kind": "Content",
              "text": "[keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "AuthMechanism",
              "canonicalReference": "mongodb!AuthMechanism:var"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AuthMechanism",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!AuthMechanism:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "AuthMechanism: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    readonly MONGODB_AWS: \"MONGODB-AWS\";\n    readonly MONGODB_CR: \"MONGODB-CR\";\n    readonly MONGODB_DEFAULT: \"DEFAULT\";\n    readonly MONGODB_GSSAPI: \"GSSAPI\";\n    readonly MONGODB_PLAIN: \"PLAIN\";\n    readonly MONGODB_SCRAM_SHA1: \"SCRAM-SHA-1\";\n    readonly MONGODB_SCRAM_SHA256: \"SCRAM-SHA-256\";\n    readonly MONGODB_X509: \"MONGODB-X509\";\n}>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "AuthMechanism",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!AuthMechanismProperties:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AuthMechanismProperties extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AuthMechanismProperties",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AuthMechanismProperties#AWS_SESSION_TOKEN:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AWS_SESSION_TOKEN?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "AWS_SESSION_TOKEN",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AuthMechanismProperties#CANONICALIZE_HOST_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CANONICALIZE_HOST_NAME?: "
                },
                {
                  "kind": "Reference",
                  "text": "GSSAPICanonicalizationValue",
                  "canonicalReference": "mongodb!GSSAPICanonicalizationValue:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "CANONICALIZE_HOST_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AuthMechanismProperties#SERVICE_HOST:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SERVICE_HOST?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "SERVICE_HOST",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AuthMechanismProperties#SERVICE_NAME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SERVICE_NAME?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "SERVICE_NAME",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AuthMechanismProperties#SERVICE_REALM:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SERVICE_REALM?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "SERVICE_REALM",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!AutoEncrypter:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AutoEncrypter "
            }
          ],
          "releaseTag": "Public",
          "name": "AutoEncrypter",
          "members": [
            {
              "kind": "ConstructSignature",
              "canonicalReference": "mongodb!AutoEncrypter:new(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "new (client: "
                },
                {
                  "kind": "Reference",
                  "text": "MongoClient",
                  "canonicalReference": "mongodb!MongoClient:class"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "AutoEncryptionOptions",
                  "canonicalReference": "mongodb!AutoEncryptionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AutoEncrypter",
                  "canonicalReference": "mongodb!AutoEncrypter:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "client",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AutoEncrypter#cryptSharedLibVersionInfo:member",
              "docComment": "/**\n * @experimental\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly cryptSharedLibVersionInfo: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        version: bigint;\n        versionStr: string;\n    } | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cryptSharedLibVersionInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!AutoEncrypter#decrypt:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "decrypt(cmd: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "cmd",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "name": "decrypt"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!AutoEncrypter#encrypt:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "encrypt(ns: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", cmd: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ns",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "cmd",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "name": "encrypt"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!AutoEncrypter#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "init(cb: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "cb",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "init"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!AutoEncrypter#teardown:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "teardown(force: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "force",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "teardown"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!AutoEncryptionLoggerLevel:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AutoEncryptionLoggerLevel = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "AutoEncryptionLoggerLevel",
              "canonicalReference": "mongodb!AutoEncryptionLoggerLevel:var"
            },
            {
              "kind": "Content",
              "text": "[keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "AutoEncryptionLoggerLevel",
              "canonicalReference": "mongodb!AutoEncryptionLoggerLevel:var"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AutoEncryptionLoggerLevel",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!AutoEncryptionLoggerLevel:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "AutoEncryptionLoggerLevel: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    readonly FatalError: 0;\n    readonly Error: 1;\n    readonly Warning: 2;\n    readonly Info: 3;\n    readonly Trace: 4;\n}>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "AutoEncryptionLoggerLevel",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!AutoEncryptionOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AutoEncryptionOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "AutoEncryptionOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AutoEncryptionOptions#bypassAutoEncryption:member",
              "docComment": "/**\n * Allows the user to bypass auto encryption, maintaining implicit decryption\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bypassAutoEncryption?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bypassAutoEncryption",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AutoEncryptionOptions#bypassQueryAnalysis:member",
              "docComment": "/**\n * @experimental\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bypassQueryAnalysis?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bypassQueryAnalysis",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AutoEncryptionOptions#encryptedFieldsMap:member",
              "docComment": "/**\n * @experimental\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "encryptedFieldsMap?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "encryptedFieldsMap",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AutoEncryptionOptions#extraOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extraOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        mongocryptdURI?: string;\n        mongocryptdBypassSpawn?: boolean;\n        mongocryptdSpawnPath?: string;\n        mongocryptdSpawnArgs?: string[];\n        cryptSharedLibPath?: string;\n        cryptSharedLibRequired?: boolean;\n        cryptSharedLibSearchPaths?: string[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "extraOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AutoEncryptionOptions#keyVaultClient:member",
              "docComment": "/**\n * A `MongoClient` used to fetch keys from a key vault\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keyVaultClient?: "
                },
                {
                  "kind": "Reference",
                  "text": "MongoClient",
                  "canonicalReference": "mongodb!MongoClient:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "keyVaultClient",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AutoEncryptionOptions#keyVaultNamespace:member",
              "docComment": "/**\n * The namespace where keys are stored in the key vault\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keyVaultNamespace?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "keyVaultNamespace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AutoEncryptionOptions#kmsProviders:member",
              "docComment": "/**\n * Configuration options that are used by specific KMS providers during key generation, encryption, and decryption.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "kmsProviders?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        aws?: {\n            accessKeyId: string;\n            secretAccessKey: string;\n            sessionToken?: string;\n        };\n        local?: {\n            key: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        };\n        azure?: {\n            tenantId: string;\n            clientId: string;\n            clientSecret: string;\n            identityPlatformEndpoint?: string | undefined;\n        };\n        gcp?: {\n            email: string;\n            privateKey: string | "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n            endpoint?: string | undefined;\n        };\n        kmip?: {\n            endpoint?: string;\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "kmsProviders",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AutoEncryptionOptions#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        logger?: (level: "
                },
                {
                  "kind": "Reference",
                  "text": "AutoEncryptionLoggerLevel",
                  "canonicalReference": "mongodb!AutoEncryptionLoggerLevel:type"
                },
                {
                  "kind": "Content",
                  "text": ", message: string) => void;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AutoEncryptionOptions#proxyOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "proxyOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "ProxyOptions",
                  "canonicalReference": "mongodb!ProxyOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "proxyOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AutoEncryptionOptions#schemaMap:member",
              "docComment": "/**\n * A map of namespaces to a local JSON schema for encryption\n *\n * **NOTE**: Supplying options.schemaMap provides more security than relying on JSON Schemas obtained from the server. It protects against a malicious server advertising a false JSON Schema, which could trick the client into sending decrypted data that should be encrypted. Schemas supplied in the schemaMap only apply to configuring automatic encryption for client side encryption. Other validation rules in the JSON schema will not be enforced by the driver and will result in an error.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "schemaMap?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "schemaMap",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AutoEncryptionOptions#tlsOptions:member",
              "docComment": "/**\n * The TLS options to use connecting to the KMS provider\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tlsOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        aws?: "
                },
                {
                  "kind": "Reference",
                  "text": "AutoEncryptionTlsOptions",
                  "canonicalReference": "mongodb!AutoEncryptionTlsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        local?: "
                },
                {
                  "kind": "Reference",
                  "text": "AutoEncryptionTlsOptions",
                  "canonicalReference": "mongodb!AutoEncryptionTlsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        azure?: "
                },
                {
                  "kind": "Reference",
                  "text": "AutoEncryptionTlsOptions",
                  "canonicalReference": "mongodb!AutoEncryptionTlsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        gcp?: "
                },
                {
                  "kind": "Reference",
                  "text": "AutoEncryptionTlsOptions",
                  "canonicalReference": "mongodb!AutoEncryptionTlsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        kmip?: "
                },
                {
                  "kind": "Reference",
                  "text": "AutoEncryptionTlsOptions",
                  "canonicalReference": "mongodb!AutoEncryptionTlsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tlsOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 12
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!AutoEncryptionTlsOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AutoEncryptionTlsOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "AutoEncryptionTlsOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AutoEncryptionTlsOptions#tlsCAFile:member",
              "docComment": "/**\n * Specifies the location of a local .pem file that contains the root certificate chain from the Certificate Authority. This file is used to validate the certificate presented by the KMS provider.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tlsCAFile?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tlsCAFile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AutoEncryptionTlsOptions#tlsCertificateKeyFile:member",
              "docComment": "/**\n * Specifies the location of a local .pem file that contains either the client's TLS/SSL certificate and key or only the client's TLS/SSL key when tlsCertificateFile is used to provide the certificate.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tlsCertificateKeyFile?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tlsCertificateKeyFile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!AutoEncryptionTlsOptions#tlsCertificateKeyFilePassword:member",
              "docComment": "/**\n * Specifies the password to de-crypt the tlsCertificateKeyFile.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tlsCertificateKeyFilePassword?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tlsCertificateKeyFilePassword",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!Batch:class",
          "docComment": "/**\n * Keeps the state of a unordered batch so we can rewrite the results correctly after command execution\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Batch<T = "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "Batch",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!Batch:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Batch` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(batchType: "
                },
                {
                  "kind": "Reference",
                  "text": "BatchType",
                  "canonicalReference": "mongodb!BatchType:type"
                },
                {
                  "kind": "Content",
                  "text": ", originalZeroIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "batchType",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "originalZeroIndex",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Batch#batchType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "batchType: "
                },
                {
                  "kind": "Reference",
                  "text": "BatchType",
                  "canonicalReference": "mongodb!BatchType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "batchType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Batch#currentIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Batch#operations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operations: "
                },
                {
                  "kind": "Content",
                  "text": "T[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Batch#originalIndexes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "originalIndexes: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "originalIndexes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Batch#originalZeroIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "originalZeroIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "originalZeroIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Batch#size:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "size: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Batch#sizeBytes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sizeBytes: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sizeBytes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!BatchType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type BatchType = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "BatchType",
              "canonicalReference": "mongodb!BatchType:var"
            },
            {
              "kind": "Content",
              "text": "[keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "BatchType",
              "canonicalReference": "mongodb!BatchType:var"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "BatchType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!BatchType:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "BatchType: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    readonly INSERT: 1;\n    readonly UPDATE: 2;\n    readonly DELETE: 3;\n}>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "BatchType",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!BitwiseFilter:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type BitwiseFilter = "
            },
            {
              "kind": "Content",
              "text": "number /** numeric bit mask */ | "
            },
            {
              "kind": "Reference",
              "text": "Binary",
              "canonicalReference": "bson!Binary:class"
            },
            {
              "kind": "Content",
              "text": " /** BinData bit mask */ | "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<number>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "BitwiseFilter",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!BSONSerializeOptions:interface",
          "docComment": "/**\n * BSON Serialization options.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface BSONSerializeOptions extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SerializeOptions",
              "canonicalReference": "bson!SerializeOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", 'index'>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DeserializeOptions",
              "canonicalReference": "bson!DeserializeOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", 'evalFunctions' | 'cacheFunctions' | 'cacheFunctionsCrc32' | 'allowObjectSmallerThanBufferSize' | 'index' | 'validation'> "
            }
          ],
          "releaseTag": "Public",
          "name": "BSONSerializeOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BSONSerializeOptions#enableUtf8Validation:member",
              "docComment": "/**\n * Enable utf8 validation when deserializing BSON documents. Defaults to true.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enableUtf8Validation?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "enableUtf8Validation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BSONSerializeOptions#raw:member",
              "docComment": "/**\n * Return BSON filled buffers from operations\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "raw?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "raw",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!BSONType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type BSONType = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "BSONType",
              "canonicalReference": "mongodb!BSONType:var"
            },
            {
              "kind": "Content",
              "text": "[keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "BSONType",
              "canonicalReference": "mongodb!BSONType:var"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "BSONType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!BSONType:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "BSONType: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    readonly double: 1;\n    readonly string: 2;\n    readonly object: 3;\n    readonly array: 4;\n    readonly binData: 5;\n    readonly undefined: 6;\n    readonly objectId: 7;\n    readonly bool: 8;\n    readonly date: 9;\n    readonly null: 10;\n    readonly regex: 11;\n    readonly dbPointer: 12;\n    readonly javascript: 13;\n    readonly symbol: 14;\n    readonly javascriptWithScope: 15;\n    readonly int: 16;\n    readonly timestamp: 17;\n    readonly long: 18;\n    readonly decimal: 19;\n    readonly minKey: -1;\n    readonly maxKey: 127;\n}>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "BSONType",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!BSONTypeAlias:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type BSONTypeAlias = "
            },
            {
              "kind": "Content",
              "text": "keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "BSONType",
              "canonicalReference": "mongodb!BSONType:var"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "BSONTypeAlias",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!BulkOperationBase:class",
          "docComment": "/**\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `BulkOperationBase` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class BulkOperationBase "
            }
          ],
          "releaseTag": "Public",
          "name": "BulkOperationBase",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkOperationBase#addToOperationsList:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract addToOperationsList(batchType: "
                },
                {
                  "kind": "Reference",
                  "text": "BatchType",
                  "canonicalReference": "mongodb!BatchType:type"
                },
                {
                  "kind": "Content",
                  "text": ", document: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateStatement",
                  "canonicalReference": "mongodb!UpdateStatement:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "DeleteStatement",
                  "canonicalReference": "mongodb!DeleteStatement:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "batchType",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "document",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addToOperationsList"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkOperationBase#batches:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get batches(): "
                },
                {
                  "kind": "Reference",
                  "text": "Batch",
                  "canonicalReference": "mongodb!Batch:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "batches",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkOperationBase#bsonOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get bsonOptions(): "
                },
                {
                  "kind": "Reference",
                  "text": "BSONSerializeOptions",
                  "canonicalReference": "mongodb!BSONSerializeOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bsonOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkOperationBase#execute:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "execute(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteOptions",
                  "canonicalReference": "mongodb!BulkWriteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteResult",
                  "canonicalReference": "mongodb!BulkWriteResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "execute"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkOperationBase#execute:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "execute(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteResult",
                  "canonicalReference": "mongodb!BulkWriteResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "execute"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkOperationBase#execute:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "execute(options: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteOptions",
                  "canonicalReference": "mongodb!BulkWriteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteResult",
                  "canonicalReference": "mongodb!BulkWriteResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "execute"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkOperationBase#execute:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "execute(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteOptions",
                  "canonicalReference": "mongodb!BulkWriteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteResult",
                  "canonicalReference": "mongodb!BulkWriteResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", callback?: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteResult",
                  "canonicalReference": "mongodb!BulkWriteResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteResult",
                  "canonicalReference": "mongodb!BulkWriteResult:class"
                },
                {
                  "kind": "Content",
                  "text": "> | void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 12
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "execute"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkOperationBase#find:member(1)",
              "docComment": "/**\n * Builds a find operation for an update/updateOne/delete/deleteOne/replaceOne. Returns a builder object used to complete the definition of the operation.\n *\n * @example\n * ```js\n * const bulkOp = collection.initializeOrderedBulkOp();\n *\n * // Add an updateOne to the bulkOp\n * bulkOp.find({ a: 1 }).updateOne({ $set: { b: 2 } });\n *\n * // Add an updateMany to the bulkOp\n * bulkOp.find({ c: 3 }).update({ $set: { d: 4 } });\n *\n * // Add an upsert\n * bulkOp.find({ e: 5 }).upsert().updateOne({ $set: { f: 6 } });\n *\n * // Add a deletion\n * bulkOp.find({ g: 7 }).deleteOne();\n *\n * // Add a multi deletion\n * bulkOp.find({ h: 8 }).delete();\n *\n * // Add a replaceOne\n * bulkOp.find({ i: 9 }).replaceOne({writeConcern: { j: 10 }});\n *\n * // Update using a pipeline (requires Mongodb 4.2 or higher)\n * bulk.find({ k: 11, y: { $exists: true }, z: { $exists: true } }).updateOne([\n *   { $set: { total: { $sum: [ '$y', '$z' ] } } }\n * ]);\n *\n * // All of the ops will now be executed\n * await bulkOp.execute();\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "find(selector: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "FindOperators",
                  "canonicalReference": "mongodb!FindOperators:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "selector",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "find"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkOperationBase#insert:member(1)",
              "docComment": "/**\n * Add a single insert document to the bulk operation\n *\n * @example\n * ```js\n * const bulkOp = collection.initializeOrderedBulkOp();\n *\n * // Adds three inserts to the bulkOp.\n * bulkOp\n *   .insert({ a: 1 })\n *   .insert({ b: 2 })\n *   .insert({ c: 3 });\n * await bulkOp.execute();\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insert(document: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "BulkOperationBase",
                  "canonicalReference": "mongodb!BulkOperationBase:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "document",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "insert"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkOperationBase#isOrdered:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isOrdered: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isOrdered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkOperationBase#operationId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationId?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "operationId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkOperationBase#raw:member(1)",
              "docComment": "/**\n * Specifies a raw operation to perform in the bulk write.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "raw(op: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyBulkWriteOperation",
                  "canonicalReference": "mongodb!AnyBulkWriteOperation:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "op",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "raw"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkOperationBase#writeConcern:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get writeConcern(): "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcern",
                  "canonicalReference": "mongodb!WriteConcern:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "writeConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!BulkResult:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface BulkResult "
            }
          ],
          "releaseTag": "Public",
          "name": "BulkResult",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkResult#insertedIds:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertedIds: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "insertedIds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkResult#nInserted:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nInserted: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nInserted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkResult#nMatched:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nMatched: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nMatched",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkResult#nModified:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nModified: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nModified",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkResult#nRemoved:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nRemoved: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nRemoved",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkResult#nUpserted:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nUpserted: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nUpserted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkResult#ok:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ok: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ok",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkResult#opTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "opTime?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "opTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkResult#upserted:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "upserted: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "upserted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkResult#writeConcernErrors:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "writeConcernErrors: "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcernError",
                  "canonicalReference": "mongodb!WriteConcernError:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "writeConcernErrors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkResult#writeErrors:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "writeErrors: "
                },
                {
                  "kind": "Reference",
                  "text": "WriteError",
                  "canonicalReference": "mongodb!WriteError:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "writeErrors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!BulkWriteOperationError:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface BulkWriteOperationError "
            }
          ],
          "releaseTag": "Public",
          "name": "BulkWriteOperationError",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkWriteOperationError#code:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "code: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "code",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkWriteOperationError#errInfo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkWriteOperationError#errmsg:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errmsg: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errmsg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkWriteOperationError#index:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "index",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkWriteOperationError#op:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "op: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateStatement",
                  "canonicalReference": "mongodb!UpdateStatement:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "DeleteStatement",
                  "canonicalReference": "mongodb!DeleteStatement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "op",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!BulkWriteOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface BulkWriteOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "BulkWriteOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkWriteOptions#bypassDocumentValidation:member",
              "docComment": "/**\n * Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bypassDocumentValidation?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bypassDocumentValidation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkWriteOptions#forceServerObjectId:member",
              "docComment": "/**\n * Force server to assign _id values instead of driver.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forceServerObjectId?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "forceServerObjectId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkWriteOptions#keepGoing:member",
              "docComment": "/**\n * @deprecated\n *\n * use `ordered` instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keepGoing?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "keepGoing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkWriteOptions#let:member",
              "docComment": "/**\n * Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "let?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "let",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!BulkWriteOptions#ordered:member",
              "docComment": "/**\n * If true, when an insert fails, don't execute the remaining writes. If false, continue with remaining inserts when one fails.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ordered?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "ordered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!BulkWriteResult:class",
          "docComment": "/**\n * The result of a bulk write.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `BulkWriteResult` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BulkWriteResult "
            }
          ],
          "releaseTag": "Public",
          "name": "BulkWriteResult",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkWriteResult#deletedCount:member",
              "docComment": "/**\n * Number of documents deleted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get deletedCount(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "deletedCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkWriteResult#getInsertedIds:member(1)",
              "docComment": "/**\n * Returns an array of all inserted ids\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getInsertedIds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getInsertedIds"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkWriteResult#getLastOp:member(1)",
              "docComment": "/**\n * Retrieve lastOp if available\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLastOp(): "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getLastOp"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkWriteResult#getRawResponse:member(1)",
              "docComment": "/**\n * Returns raw internal result\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRawResponse(): "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getRawResponse"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkWriteResult#getUpsertedIdAt:member(1)",
              "docComment": "/**\n * Returns the upserted id at the given index\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getUpsertedIdAt(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getUpsertedIdAt"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkWriteResult#getUpsertedIds:member(1)",
              "docComment": "/**\n * Returns an array of all upserted ids\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getUpsertedIds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getUpsertedIds"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkWriteResult#getWriteConcernError:member(1)",
              "docComment": "/**\n * Retrieve the write concern error if one exists\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getWriteConcernError(): "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcernError",
                  "canonicalReference": "mongodb!WriteConcernError:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getWriteConcernError"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkWriteResult#getWriteErrorAt:member(1)",
              "docComment": "/**\n * Returns a specific write error object\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getWriteErrorAt(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "WriteError",
                  "canonicalReference": "mongodb!WriteError:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "getWriteErrorAt"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkWriteResult#getWriteErrorCount:member(1)",
              "docComment": "/**\n * Returns the number of write errors off the bulk operation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getWriteErrorCount(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getWriteErrorCount"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkWriteResult#getWriteErrors:member(1)",
              "docComment": "/**\n * Retrieve all write errors\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getWriteErrors(): "
                },
                {
                  "kind": "Reference",
                  "text": "WriteError",
                  "canonicalReference": "mongodb!WriteError:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getWriteErrors"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkWriteResult#hasWriteErrors:member(1)",
              "docComment": "/**\n * Returns true if the bulk operation contains a write error\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasWriteErrors(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "hasWriteErrors"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkWriteResult#insertedCount:member",
              "docComment": "/**\n * Number of documents inserted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get insertedCount(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "insertedCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkWriteResult#insertedIds:member",
              "docComment": "/**\n * Inserted document generated Id's, hash key is the index of the originating operation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get insertedIds(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: number]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "insertedIds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkWriteResult#isOk:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isOk(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "isOk"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkWriteResult#matchedCount:member",
              "docComment": "/**\n * Number of documents matched for update.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get matchedCount(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "matchedCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkWriteResult#modifiedCount:member",
              "docComment": "/**\n * Number of documents modified.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get modifiedCount(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "modifiedCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkWriteResult#nInserted:member",
              "docComment": "/**\n * The number of inserted documents\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get nInserted(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nInserted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkWriteResult#nMatched:member",
              "docComment": "/**\n * Number of matched documents\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get nMatched(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nMatched",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkWriteResult#nModified:member",
              "docComment": "/**\n * Number of documents updated physically on disk\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get nModified(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nModified",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkWriteResult#nRemoved:member",
              "docComment": "/**\n * Number of removed documents\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get nRemoved(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nRemoved",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkWriteResult#nUpserted:member",
              "docComment": "/**\n * Number of upserted documents\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get nUpserted(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nUpserted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkWriteResult#ok:member",
              "docComment": "/**\n * Evaluates to true if the bulk operation correctly executes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get ok(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ok",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkWriteResult#result:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "result: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkResult",
                  "canonicalReference": "mongodb!BulkResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "result",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkWriteResult#toJSON:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSON(): "
                },
                {
                  "kind": "Reference",
                  "text": "BulkResult",
                  "canonicalReference": "mongodb!BulkResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "toJSON"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!BulkWriteResult#toString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "toString"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkWriteResult#upsertedCount:member",
              "docComment": "/**\n * Number of documents upserted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get upsertedCount(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "upsertedCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!BulkWriteResult#upsertedIds:member",
              "docComment": "/**\n * Upserted document generated Id's, hash key is the index of the originating operation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get upsertedIds(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: number]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "upsertedIds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!Callback:type",
          "docComment": "/**\n * MongoDB Driver style callback\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Callback<T = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(error?: "
            },
            {
              "kind": "Reference",
              "text": "AnyError",
              "canonicalReference": "mongodb!AnyError:type"
            },
            {
              "kind": "Content",
              "text": ", result?: T) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Callback",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!CancellationToken:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CancellationToken extends "
            },
            {
              "kind": "Reference",
              "text": "TypedEventEmitter",
              "canonicalReference": "mongodb!TypedEventEmitter:class"
            },
            {
              "kind": "Content",
              "text": "<{\n    cancel(): void;\n}> "
            }
          ],
          "releaseTag": "Public",
          "name": "CancellationToken",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!CancellationToken#cancel:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cancel(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "cancel"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ChangeStream:class",
          "docComment": "/**\n * Creates a new Change Stream instance. Normally created using {@link Collection#watch | Collection.watch()}.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ChangeStream` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ChangeStream<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": ", TChange extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocument",
              "canonicalReference": "mongodb!ChangeStreamDocument:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "TypedEventEmitter",
              "canonicalReference": "mongodb!TypedEventEmitter:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamEvents",
              "canonicalReference": "mongodb!ChangeStreamEvents:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, TChange>> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "typeParameterName": "TChange",
              "constraintTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              }
            }
          ],
          "name": "ChangeStream",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ChangeStream.CHANGE:member",
              "docComment": "/**\n * Fired for each new matching change in the specified namespace. Attaching a `change` event listener to a Change Stream will switch the stream into flowing mode. Data will then be passed as soon as it is available.\n *\n * @event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CHANGE: "
                },
                {
                  "kind": "Content",
                  "text": "\"change\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CHANGE",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ChangeStream#close:member(1)",
              "docComment": "/**\n * Close the Change Stream\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "close(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "close"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ChangeStream#close:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "close(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "close"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ChangeStream.CLOSE:member",
              "docComment": "/**\n * @event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CLOSE: "
                },
                {
                  "kind": "Content",
                  "text": "\"close\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CLOSE",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ChangeStream#closed:member",
              "docComment": "/**\n * Is the cursor closed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get closed(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "closed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ChangeStream.END:member",
              "docComment": "/**\n * @event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly END: "
                },
                {
                  "kind": "Content",
                  "text": "\"end\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "END",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ChangeStream.ERROR:member",
              "docComment": "/**\n * @event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly ERROR: "
                },
                {
                  "kind": "Content",
                  "text": "\"error\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ERROR",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ChangeStream#hasNext:member(1)",
              "docComment": "/**\n * Check if there is any document still available in the Change Stream\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasNext(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "hasNext"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ChangeStream#hasNext:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasNext(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "hasNext"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ChangeStream.INIT:member",
              "docComment": "/**\n * @event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly INIT: "
                },
                {
                  "kind": "Content",
                  "text": "\"init\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "INIT",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ChangeStream.MORE:member",
              "docComment": "/**\n * @event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly MORE: "
                },
                {
                  "kind": "Content",
                  "text": "\"more\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MORE",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ChangeStream#namespace:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "namespace: "
                },
                {
                  "kind": "Reference",
                  "text": "MongoDBNamespace",
                  "canonicalReference": "mongodb!MongoDBNamespace:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "namespace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ChangeStream#next:member(1)",
              "docComment": "/**\n * Get the next available document from the Change Stream.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "next(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TChange>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "next"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ChangeStream#next:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "next(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<TChange>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "next"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ChangeStream#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options: "
                },
                {
                  "kind": "Reference",
                  "text": "ChangeStreamOptions",
                  "canonicalReference": "mongodb!ChangeStreamOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ChangeStream#parent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parent: "
                },
                {
                  "kind": "Reference",
                  "text": "MongoClient",
                  "canonicalReference": "mongodb!MongoClient:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Db",
                  "canonicalReference": "mongodb!Db:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ChangeStream#pipeline:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pipeline: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pipeline",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ChangeStream.RESPONSE:member",
              "docComment": "/**\n * @event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly RESPONSE: "
                },
                {
                  "kind": "Content",
                  "text": "\"response\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "RESPONSE",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ChangeStream.RESUME_TOKEN_CHANGED:member",
              "docComment": "/**\n * Emitted each time the change stream stores a new resume token.\n *\n * @event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly RESUME_TOKEN_CHANGED: "
                },
                {
                  "kind": "Content",
                  "text": "\"resumeTokenChanged\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "RESUME_TOKEN_CHANGED",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ChangeStream#resumeToken:member",
              "docComment": "/**\n * The cached resume token that is used to resume after the most recently returned change.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get resumeToken(): "
                },
                {
                  "kind": "Reference",
                  "text": "ResumeToken",
                  "canonicalReference": "mongodb!ResumeToken:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "resumeToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ChangeStream#stream:member(1)",
              "docComment": "/**\n * Return a modified Readable stream including a possible transform method.\n *\n * NOTE: When using a Stream to process change stream events, the stream will NOT automatically resume in the case a resumable error is encountered.\n *\n * @throws\n *\n * MongoChangeStreamError if the underlying cursor or the change stream is closed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stream(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "CursorStreamOptions",
                  "canonicalReference": "mongodb!CursorStreamOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Readable",
                  "canonicalReference": "!internal.Readable:class"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "AsyncIterable",
                  "canonicalReference": "!AsyncIterable:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TChange>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "stream"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ChangeStream#streamOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "streamOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "CursorStreamOptions",
                  "canonicalReference": "mongodb!CursorStreamOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "streamOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ChangeStream#tryNext:member(1)",
              "docComment": "/**\n * Try to get the next available document from the Change Stream's cursor or `null` if an empty batch is returned\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tryNext(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "tryNext"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ChangeStream#tryNext:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tryNext(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "tryNext"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ChangeStream#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "symbol"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 12,
            "endIndex": 15
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamCollModDocument:interface",
          "docComment": "/**\n * Only present when the `showExpandedEvents` flag is enabled.\n *\n * @see\n *\n * https://www.mongodb.com/docs/manual/reference/change-events/\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamCollModDocument extends "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCommon",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCollectionUUID",
              "canonicalReference": "mongodb!ChangeStreamDocumentCollectionUUID:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ChangeStreamCollModDocument",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamCollModDocument#operationType:member",
              "docComment": "/**\n * Describes the type of operation represented in this change notification\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationType: "
                },
                {
                  "kind": "Content",
                  "text": "'modify'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operationType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamCreateDocument:interface",
          "docComment": "/**\n * @see\n *\n * https://www.mongodb.com/docs/manual/reference/change-events/\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamCreateDocument extends "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCommon",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCollectionUUID",
              "canonicalReference": "mongodb!ChangeStreamDocumentCollectionUUID:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ChangeStreamCreateDocument",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamCreateDocument#operationType:member",
              "docComment": "/**\n * Describes the type of operation represented in this change notification\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationType: "
                },
                {
                  "kind": "Content",
                  "text": "'create'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operationType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamCreateIndexDocument:interface",
          "docComment": "/**\n * Only present when the `showExpandedEvents` flag is enabled.\n *\n * @see\n *\n * https://www.mongodb.com/docs/manual/reference/change-events/\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamCreateIndexDocument extends "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCommon",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCollectionUUID",
              "canonicalReference": "mongodb!ChangeStreamDocumentCollectionUUID:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentOperationDescription",
              "canonicalReference": "mongodb!ChangeStreamDocumentOperationDescription:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ChangeStreamCreateIndexDocument",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamCreateIndexDocument#operationType:member",
              "docComment": "/**\n * Describes the type of operation represented in this change notification\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationType: "
                },
                {
                  "kind": "Content",
                  "text": "'createIndexes'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operationType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            },
            {
              "startIndex": 5,
              "endIndex": 6
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamDeleteDocument:interface",
          "docComment": "/**\n * @see\n *\n * https://www.mongodb.com/docs/manual/reference/change-events/#delete-event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamDeleteDocument<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCommon",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentKey",
              "canonicalReference": "mongodb!ChangeStreamDocumentKey:interface"
            },
            {
              "kind": "Content",
              "text": "<TSchema>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCollectionUUID",
              "canonicalReference": "mongodb!ChangeStreamDocumentCollectionUUID:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "ChangeStreamDeleteDocument",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamDeleteDocument#fullDocumentBeforeChange:member",
              "docComment": "/**\n * Contains the pre-image of the modified or deleted document if the pre-image is available for the change event and either 'required' or 'whenAvailable' was specified for the 'fullDocumentBeforeChange' option when creating the change stream. If 'whenAvailable' was specified but the pre-image is unavailable, this will be explicitly set to null.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fullDocumentBeforeChange?: "
                },
                {
                  "kind": "Content",
                  "text": "TSchema"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fullDocumentBeforeChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamDeleteDocument#ns:member",
              "docComment": "/**\n * Namespace the delete event occured on\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ns: "
                },
                {
                  "kind": "Reference",
                  "text": "ChangeStreamNameSpace",
                  "canonicalReference": "mongodb!ChangeStreamNameSpace:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamDeleteDocument#operationType:member",
              "docComment": "/**\n * Describes the type of operation represented in this change notification\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationType: "
                },
                {
                  "kind": "Content",
                  "text": "'delete'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operationType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 10
            },
            {
              "startIndex": 11,
              "endIndex": 12
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ChangeStreamDocument:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ChangeStreamDocument<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamInsertDocument",
              "canonicalReference": "mongodb!ChangeStreamInsertDocument:interface"
            },
            {
              "kind": "Content",
              "text": "<TSchema> | "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamUpdateDocument",
              "canonicalReference": "mongodb!ChangeStreamUpdateDocument:interface"
            },
            {
              "kind": "Content",
              "text": "<TSchema> | "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamReplaceDocument",
              "canonicalReference": "mongodb!ChangeStreamReplaceDocument:interface"
            },
            {
              "kind": "Content",
              "text": "<TSchema> | "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDeleteDocument",
              "canonicalReference": "mongodb!ChangeStreamDeleteDocument:interface"
            },
            {
              "kind": "Content",
              "text": "<TSchema> | "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDropDocument",
              "canonicalReference": "mongodb!ChangeStreamDropDocument:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamRenameDocument",
              "canonicalReference": "mongodb!ChangeStreamRenameDocument:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDropDatabaseDocument",
              "canonicalReference": "mongodb!ChangeStreamDropDatabaseDocument:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamInvalidateDocument",
              "canonicalReference": "mongodb!ChangeStreamInvalidateDocument:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamCreateIndexDocument",
              "canonicalReference": "mongodb!ChangeStreamCreateIndexDocument:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamCreateDocument",
              "canonicalReference": "mongodb!ChangeStreamCreateDocument:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamCollModDocument",
              "canonicalReference": "mongodb!ChangeStreamCollModDocument:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDropIndexDocument",
              "canonicalReference": "mongodb!ChangeStreamDropIndexDocument:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamShardCollectionDocument",
              "canonicalReference": "mongodb!ChangeStreamShardCollectionDocument:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamReshardCollectionDocument",
              "canonicalReference": "mongodb!ChangeStreamReshardCollectionDocument:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamRefineCollectionShardKeyDocument",
              "canonicalReference": "mongodb!ChangeStreamRefineCollectionShardKeyDocument:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ChangeStreamDocument",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 6,
            "endIndex": 35
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamDocumentCollectionUUID:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamDocumentCollectionUUID "
            }
          ],
          "releaseTag": "Public",
          "name": "ChangeStreamDocumentCollectionUUID",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamDocumentCollectionUUID#collectionUUID:member",
              "docComment": "/**\n * The UUID (Binary subtype 4) of the collection that the operation was performed on.\n *\n * Only present when the `showExpandedEvents` flag is enabled.\n *\n * **NOTE:** collectionUUID will be converted to a NodeJS Buffer if the promoteBuffers flag is enabled.\n *\n * @since\n *\n * 6.1.0\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collectionUUID: "
                },
                {
                  "kind": "Reference",
                  "text": "Binary",
                  "canonicalReference": "bson!Binary:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "collectionUUID",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamDocumentCommon:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamDocumentCommon "
            }
          ],
          "releaseTag": "Public",
          "name": "ChangeStreamDocumentCommon",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon#_id:member",
              "docComment": "/**\n * The id functions as an opaque token for use when resuming an interrupted change stream.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_id: "
                },
                {
                  "kind": "Reference",
                  "text": "ResumeToken",
                  "canonicalReference": "mongodb!ResumeToken:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon#clusterTime:member",
              "docComment": "/**\n * The timestamp from the oplog entry associated with the event. For events that happened as part of a multi-document transaction, the associated change stream notifications will have the same clusterTime value, namely the time when the transaction was committed. On a sharded cluster, events that occur on different shards can have the same clusterTime but be associated with different transactions or even not be associated with any transaction. To identify events for a single transaction, you can use the combination of lsid and txnNumber in the change stream event document.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clusterTime?: "
                },
                {
                  "kind": "Reference",
                  "text": "Timestamp",
                  "canonicalReference": "bson!Timestamp:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "clusterTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon#lsid:member",
              "docComment": "/**\n * The identifier for the session associated with the transaction. Only present if the operation is part of a multi-document transaction.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lsid?: "
                },
                {
                  "kind": "Reference",
                  "text": "ServerSessionId",
                  "canonicalReference": "mongodb!ServerSessionId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "lsid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon#txnNumber:member",
              "docComment": "/**\n * The transaction number. Only present if the operation is part of a multi-document transaction.\n *\n * **NOTE:** txnNumber can be a Long if promoteLongs is set to false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnNumber?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "txnNumber",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamDocumentKey:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamDocumentKey<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "ChangeStreamDocumentKey",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamDocumentKey#documentKey:member",
              "docComment": "/**\n * For unsharded collections this contains a single field `_id`. For sharded collections, this will contain all the components of the shard key\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "documentKey: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        _id: "
                },
                {
                  "kind": "Reference",
                  "text": "InferIdType",
                  "canonicalReference": "mongodb!InferIdType:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>;\n        [shardKey: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "documentKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamDocumentOperationDescription:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamDocumentOperationDescription "
            }
          ],
          "releaseTag": "Public",
          "name": "ChangeStreamDocumentOperationDescription",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamDocumentOperationDescription#operationDescription:member",
              "docComment": "/**\n * An description of the operation.\n *\n * Only present when the `showExpandedEvents` flag is enabled.\n *\n * @since\n *\n * 6.1.0\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationDescription?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "operationDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamDropDatabaseDocument:interface",
          "docComment": "/**\n * @see\n *\n * https://www.mongodb.com/docs/manual/reference/change-events/#dropdatabase-event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamDropDatabaseDocument extends "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCommon",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ChangeStreamDropDatabaseDocument",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamDropDatabaseDocument#ns:member",
              "docComment": "/**\n * The database dropped\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ns: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        db: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamDropDatabaseDocument#operationType:member",
              "docComment": "/**\n * Describes the type of operation represented in this change notification\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationType: "
                },
                {
                  "kind": "Content",
                  "text": "'dropDatabase'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operationType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamDropDocument:interface",
          "docComment": "/**\n * @see\n *\n * https://www.mongodb.com/docs/manual/reference/change-events/#drop-event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamDropDocument extends "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCommon",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCollectionUUID",
              "canonicalReference": "mongodb!ChangeStreamDocumentCollectionUUID:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ChangeStreamDropDocument",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamDropDocument#ns:member",
              "docComment": "/**\n * Namespace the drop event occured on\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ns: "
                },
                {
                  "kind": "Reference",
                  "text": "ChangeStreamNameSpace",
                  "canonicalReference": "mongodb!ChangeStreamNameSpace:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamDropDocument#operationType:member",
              "docComment": "/**\n * Describes the type of operation represented in this change notification\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationType: "
                },
                {
                  "kind": "Content",
                  "text": "'drop'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operationType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamDropIndexDocument:interface",
          "docComment": "/**\n * Only present when the `showExpandedEvents` flag is enabled.\n *\n * @see\n *\n * https://www.mongodb.com/docs/manual/reference/change-events/\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamDropIndexDocument extends "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCommon",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCollectionUUID",
              "canonicalReference": "mongodb!ChangeStreamDocumentCollectionUUID:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentOperationDescription",
              "canonicalReference": "mongodb!ChangeStreamDocumentOperationDescription:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ChangeStreamDropIndexDocument",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamDropIndexDocument#operationType:member",
              "docComment": "/**\n * Describes the type of operation represented in this change notification\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationType: "
                },
                {
                  "kind": "Content",
                  "text": "'dropIndexes'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operationType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            },
            {
              "startIndex": 5,
              "endIndex": 6
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ChangeStreamEvents:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ChangeStreamEvents<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": ", TChange extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocument",
              "canonicalReference": "mongodb!ChangeStreamDocument:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    resumeTokenChanged(token: "
            },
            {
              "kind": "Reference",
              "text": "ResumeToken",
              "canonicalReference": "mongodb!ResumeToken:type"
            },
            {
              "kind": "Content",
              "text": "): void;\n    init(response: any): void;\n    more(response?: any): void;\n    response(): void;\n    end(): void;\n    error(error: "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": "): void;\n    change(change: TChange): void;\n} & "
            },
            {
              "kind": "Reference",
              "text": "AbstractCursorEvents",
              "canonicalReference": "mongodb!AbstractCursorEvents:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ChangeStreamEvents",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "typeParameterName": "TChange",
              "constraintTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 12,
            "endIndex": 18
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamInsertDocument:interface",
          "docComment": "/**\n * @see\n *\n * https://www.mongodb.com/docs/manual/reference/change-events/#insert-event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamInsertDocument<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCommon",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentKey",
              "canonicalReference": "mongodb!ChangeStreamDocumentKey:interface"
            },
            {
              "kind": "Content",
              "text": "<TSchema>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCollectionUUID",
              "canonicalReference": "mongodb!ChangeStreamDocumentCollectionUUID:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "ChangeStreamInsertDocument",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamInsertDocument#fullDocument:member",
              "docComment": "/**\n * This key will contain the document being inserted\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fullDocument: "
                },
                {
                  "kind": "Content",
                  "text": "TSchema"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "fullDocument",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamInsertDocument#ns:member",
              "docComment": "/**\n * Namespace the insert event occured on\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ns: "
                },
                {
                  "kind": "Reference",
                  "text": "ChangeStreamNameSpace",
                  "canonicalReference": "mongodb!ChangeStreamNameSpace:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamInsertDocument#operationType:member",
              "docComment": "/**\n * Describes the type of operation represented in this change notification\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationType: "
                },
                {
                  "kind": "Content",
                  "text": "'insert'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operationType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 10
            },
            {
              "startIndex": 11,
              "endIndex": 12
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamInvalidateDocument:interface",
          "docComment": "/**\n * @see\n *\n * https://www.mongodb.com/docs/manual/reference/change-events/#invalidate-event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamInvalidateDocument extends "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCommon",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ChangeStreamInvalidateDocument",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamInvalidateDocument#operationType:member",
              "docComment": "/**\n * Describes the type of operation represented in this change notification\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationType: "
                },
                {
                  "kind": "Content",
                  "text": "'invalidate'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operationType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamNameSpace:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamNameSpace "
            }
          ],
          "releaseTag": "Public",
          "name": "ChangeStreamNameSpace",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamNameSpace#coll:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "coll: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "coll",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamNameSpace#db:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "db: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "db",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamOptions:interface",
          "docComment": "/**\n * Options that can be passed to a ChangeStream. Note that startAfter, resumeAfter, and startAtOperationTime are all mutually exclusive, and the server will error if more than one is specified.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamOptions extends "
            },
            {
              "kind": "Reference",
              "text": "AggregateOptions",
              "canonicalReference": "mongodb!AggregateOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ChangeStreamOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamOptions#batchSize:member",
              "docComment": "/**\n * The number of documents to return per batch.\n *\n * @see\n *\n * https://docs.mongodb.com/manual/reference/command/aggregate\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "batchSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "batchSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamOptions#fullDocument:member",
              "docComment": "/**\n * Allowed values: 'updateLookup', 'whenAvailable', 'required'.\n *\n * When set to 'updateLookup', the change notification for partial updates will include both a delta describing the changes to the document as well as a copy of the entire document that was changed from some time after the change occurred.\n *\n * When set to 'whenAvailable', configures the change stream to return the post-image of the modified document for replace and update change events if the post-image for this event is available.\n *\n * When set to 'required', the same behavior as 'whenAvailable' except that an error is raised if the post-image is not available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fullDocument?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fullDocument",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamOptions#fullDocumentBeforeChange:member",
              "docComment": "/**\n * Allowed values: 'whenAvailable', 'required', 'off'.\n *\n * The default is to not send a value, which is equivalent to 'off'.\n *\n * When set to 'whenAvailable', configures the change stream to return the pre-image of the modified document for replace, update, and delete change events if it is available.\n *\n * When set to 'required', the same behavior as 'whenAvailable' except that an error is raised if the pre-image is not available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fullDocumentBeforeChange?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fullDocumentBeforeChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamOptions#maxAwaitTimeMS:member",
              "docComment": "/**\n * The maximum amount of time for the server to wait on new documents to satisfy a change stream query.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxAwaitTimeMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxAwaitTimeMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamOptions#resumeAfter:member",
              "docComment": "/**\n * Allows you to start a changeStream after a specified event.\n *\n * @see\n *\n * https://docs.mongodb.com/manual/changeStreams/#resumeafter-for-change-streams\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resumeAfter?: "
                },
                {
                  "kind": "Reference",
                  "text": "ResumeToken",
                  "canonicalReference": "mongodb!ResumeToken:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "resumeAfter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamOptions#showExpandedEvents:member",
              "docComment": "/**\n * When enabled, configures the change stream to include extra change events.\n *\n * - createIndexes - dropIndexes - modify - create - shardCollection - reshardCollection - refineCollectionShardKey\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showExpandedEvents?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showExpandedEvents",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamOptions#startAfter:member",
              "docComment": "/**\n * Similar to resumeAfter, but will allow you to start after an invalidated event.\n *\n * @see\n *\n * https://docs.mongodb.com/manual/changeStreams/#startafter-for-change-streams\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "startAfter?: "
                },
                {
                  "kind": "Reference",
                  "text": "ResumeToken",
                  "canonicalReference": "mongodb!ResumeToken:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "startAfter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamOptions#startAtOperationTime:member",
              "docComment": "/**\n * Will start the changeStream after the specified operationTime.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "startAtOperationTime?: "
                },
                {
                  "kind": "Reference",
                  "text": "OperationTime",
                  "canonicalReference": "mongodb!OperationTime:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "startAtOperationTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamRefineCollectionShardKeyDocument:interface",
          "docComment": "/**\n * @see\n *\n * https://www.mongodb.com/docs/manual/reference/change-events/\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamRefineCollectionShardKeyDocument extends "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCommon",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCollectionUUID",
              "canonicalReference": "mongodb!ChangeStreamDocumentCollectionUUID:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentOperationDescription",
              "canonicalReference": "mongodb!ChangeStreamDocumentOperationDescription:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ChangeStreamRefineCollectionShardKeyDocument",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamRefineCollectionShardKeyDocument#operationType:member",
              "docComment": "/**\n * Describes the type of operation represented in this change notification\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationType: "
                },
                {
                  "kind": "Content",
                  "text": "'refineCollectionShardKey'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operationType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            },
            {
              "startIndex": 5,
              "endIndex": 6
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamRenameDocument:interface",
          "docComment": "/**\n * @see\n *\n * https://www.mongodb.com/docs/manual/reference/change-events/#rename-event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamRenameDocument extends "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCommon",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCollectionUUID",
              "canonicalReference": "mongodb!ChangeStreamDocumentCollectionUUID:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ChangeStreamRenameDocument",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamRenameDocument#ns:member",
              "docComment": "/**\n * The \"from\" namespace that the rename occured on\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ns: "
                },
                {
                  "kind": "Reference",
                  "text": "ChangeStreamNameSpace",
                  "canonicalReference": "mongodb!ChangeStreamNameSpace:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamRenameDocument#operationType:member",
              "docComment": "/**\n * Describes the type of operation represented in this change notification\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationType: "
                },
                {
                  "kind": "Content",
                  "text": "'rename'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operationType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamRenameDocument#to:member",
              "docComment": "/**\n * The new name for the `ns.coll` collection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "to: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        db: string;\n        coll: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "to",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamReplaceDocument:interface",
          "docComment": "/**\n * @see\n *\n * https://www.mongodb.com/docs/manual/reference/change-events/#replace-event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamReplaceDocument<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCommon",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentKey",
              "canonicalReference": "mongodb!ChangeStreamDocumentKey:interface"
            },
            {
              "kind": "Content",
              "text": "<TSchema> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "ChangeStreamReplaceDocument",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamReplaceDocument#fullDocument:member",
              "docComment": "/**\n * The fullDocument of a replace event represents the document after the insert of the replacement document\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fullDocument: "
                },
                {
                  "kind": "Content",
                  "text": "TSchema"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "fullDocument",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamReplaceDocument#fullDocumentBeforeChange:member",
              "docComment": "/**\n * Contains the pre-image of the modified or deleted document if the pre-image is available for the change event and either 'required' or 'whenAvailable' was specified for the 'fullDocumentBeforeChange' option when creating the change stream. If 'whenAvailable' was specified but the pre-image is unavailable, this will be explicitly set to null.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fullDocumentBeforeChange?: "
                },
                {
                  "kind": "Content",
                  "text": "TSchema"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fullDocumentBeforeChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamReplaceDocument#ns:member",
              "docComment": "/**\n * Namespace the replace event occured on\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ns: "
                },
                {
                  "kind": "Reference",
                  "text": "ChangeStreamNameSpace",
                  "canonicalReference": "mongodb!ChangeStreamNameSpace:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamReplaceDocument#operationType:member",
              "docComment": "/**\n * Describes the type of operation represented in this change notification\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationType: "
                },
                {
                  "kind": "Content",
                  "text": "'replace'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operationType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamReshardCollectionDocument:interface",
          "docComment": "/**\n * @see\n *\n * https://www.mongodb.com/docs/manual/reference/change-events/\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamReshardCollectionDocument extends "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCommon",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCollectionUUID",
              "canonicalReference": "mongodb!ChangeStreamDocumentCollectionUUID:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentOperationDescription",
              "canonicalReference": "mongodb!ChangeStreamDocumentOperationDescription:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ChangeStreamReshardCollectionDocument",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamReshardCollectionDocument#operationType:member",
              "docComment": "/**\n * Describes the type of operation represented in this change notification\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationType: "
                },
                {
                  "kind": "Content",
                  "text": "'reshardCollection'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operationType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            },
            {
              "startIndex": 5,
              "endIndex": 6
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamShardCollectionDocument:interface",
          "docComment": "/**\n * @see\n *\n * https://www.mongodb.com/docs/manual/reference/change-events/\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamShardCollectionDocument extends "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCommon",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCollectionUUID",
              "canonicalReference": "mongodb!ChangeStreamDocumentCollectionUUID:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentOperationDescription",
              "canonicalReference": "mongodb!ChangeStreamDocumentOperationDescription:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ChangeStreamShardCollectionDocument",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamShardCollectionDocument#operationType:member",
              "docComment": "/**\n * Describes the type of operation represented in this change notification\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationType: "
                },
                {
                  "kind": "Content",
                  "text": "'shardCollection'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operationType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            },
            {
              "startIndex": 5,
              "endIndex": 6
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ChangeStreamUpdateDocument:interface",
          "docComment": "/**\n * @see\n *\n * https://www.mongodb.com/docs/manual/reference/change-events/#update-event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChangeStreamUpdateDocument<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCommon",
              "canonicalReference": "mongodb!ChangeStreamDocumentCommon:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentKey",
              "canonicalReference": "mongodb!ChangeStreamDocumentKey:interface"
            },
            {
              "kind": "Content",
              "text": "<TSchema>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ChangeStreamDocumentCollectionUUID",
              "canonicalReference": "mongodb!ChangeStreamDocumentCollectionUUID:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "ChangeStreamUpdateDocument",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamUpdateDocument#fullDocument:member",
              "docComment": "/**\n * This is only set if `fullDocument` is set to `'updateLookup'` Contains the point-in-time post-image of the modified document if the post-image is available and either 'required' or 'whenAvailable' was specified for the 'fullDocument' option when creating the change stream.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fullDocument?: "
                },
                {
                  "kind": "Content",
                  "text": "TSchema"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fullDocument",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamUpdateDocument#fullDocumentBeforeChange:member",
              "docComment": "/**\n * Contains the pre-image of the modified or deleted document if the pre-image is available for the change event and either 'required' or 'whenAvailable' was specified for the 'fullDocumentBeforeChange' option when creating the change stream. If 'whenAvailable' was specified but the pre-image is unavailable, this will be explicitly set to null.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fullDocumentBeforeChange?: "
                },
                {
                  "kind": "Content",
                  "text": "TSchema"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fullDocumentBeforeChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamUpdateDocument#ns:member",
              "docComment": "/**\n * Namespace the update event occured on\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ns: "
                },
                {
                  "kind": "Reference",
                  "text": "ChangeStreamNameSpace",
                  "canonicalReference": "mongodb!ChangeStreamNameSpace:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamUpdateDocument#operationType:member",
              "docComment": "/**\n * Describes the type of operation represented in this change notification\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationType: "
                },
                {
                  "kind": "Content",
                  "text": "'update'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operationType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ChangeStreamUpdateDocument#updateDescription:member",
              "docComment": "/**\n * Contains a description of updated and removed fields in this operation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateDescription: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateDescription",
                  "canonicalReference": "mongodb!UpdateDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "updateDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 10
            },
            {
              "startIndex": 11,
              "endIndex": 12
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ClientMetadata:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ClientMetadata "
            }
          ],
          "releaseTag": "Public",
          "name": "ClientMetadata",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ClientMetadata#application:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "application?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        name: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "application",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ClientMetadata#driver:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "driver: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        name: string;\n        version: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "driver",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ClientMetadata#os:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "os: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        type: string;\n        name: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeJS.Platform",
                  "canonicalReference": "!__global.NodeJS.Platform:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        architecture: string;\n        version: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "os",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ClientMetadata#platform:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "platform: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "platform",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ClientMetadata#version:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ClientMetadataOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ClientMetadataOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "ClientMetadataOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ClientMetadataOptions#appName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "appName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ClientMetadataOptions#driverInfo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "driverInfo?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        name?: string;\n        version?: string;\n        platform?: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "driverInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ClientSession:class",
          "docComment": "/**\n * A class representing a client session on the server\n *\n * NOTE: not meant to be instantiated directly.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ClientSession` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ClientSession extends "
            },
            {
              "kind": "Reference",
              "text": "TypedEventEmitter",
              "canonicalReference": "mongodb!TypedEventEmitter:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ClientSessionEvents",
              "canonicalReference": "mongodb!ClientSessionEvents:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "ClientSession",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ClientSession#abortTransaction:member(1)",
              "docComment": "/**\n * Aborts the currently active transaction in this session.\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abortTransaction(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "abortTransaction"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ClientSession#abortTransaction:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abortTransaction(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "abortTransaction"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ClientSession#advanceClusterTime:member(1)",
              "docComment": "/**\n * Advances the clusterTime for a ClientSession to the provided clusterTime of another ClientSession\n *\n * @param clusterTime - the $clusterTime returned by the server from another session in the form of a document containing the `BSON.Timestamp` clusterTime and signature\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "advanceClusterTime(clusterTime: "
                },
                {
                  "kind": "Reference",
                  "text": "ClusterTime",
                  "canonicalReference": "mongodb!ClusterTime:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "clusterTime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "advanceClusterTime"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ClientSession#advanceOperationTime:member(1)",
              "docComment": "/**\n * Advances the operationTime for a ClientSession.\n *\n * @param operationTime - the `BSON.Timestamp` of the operation type it is desired to advance to\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "advanceOperationTime(operationTime: "
                },
                {
                  "kind": "Reference",
                  "text": "Timestamp",
                  "canonicalReference": "bson!Timestamp:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "operationTime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "advanceOperationTime"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ClientSession#clientOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clientOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "MongoOptions",
                  "canonicalReference": "mongodb!MongoOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "clientOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ClientSession#clusterTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clusterTime?: "
                },
                {
                  "kind": "Reference",
                  "text": "ClusterTime",
                  "canonicalReference": "mongodb!ClusterTime:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "clusterTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ClientSession#commitTransaction:member(1)",
              "docComment": "/**\n * Commits the currently active transaction in this session.\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "commitTransaction(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "commitTransaction"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ClientSession#commitTransaction:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "commitTransaction(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "commitTransaction"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ClientSession#defaultTransactionOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultTransactionOptions: "
                },
                {
                  "kind": "Reference",
                  "text": "TransactionOptions",
                  "canonicalReference": "mongodb!TransactionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultTransactionOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ClientSession#endSession:member(1)",
              "docComment": "/**\n * Ends this session on the server\n *\n * @param options - Optional settings. Currently reserved for future use\n *\n * @param callback - Optional callback for completion of this operation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "endSession(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "endSession"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ClientSession#endSession:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "endSession(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "endSession"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ClientSession#endSession:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "endSession(options: "
                },
                {
                  "kind": "Reference",
                  "text": "EndSessionOptions",
                  "canonicalReference": "mongodb!EndSessionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "endSession"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ClientSession#endSession:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "endSession(options: "
                },
                {
                  "kind": "Reference",
                  "text": "EndSessionOptions",
                  "canonicalReference": "mongodb!EndSessionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "endSession"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ClientSession#equals:member(1)",
              "docComment": "/**\n * Used to determine if this session equals another\n *\n * @param session - The session to compare to\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(session: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientSession",
                  "canonicalReference": "mongodb!ClientSession:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "session",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "equals"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ClientSession#explicit:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "explicit: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "explicit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ClientSession#hasEnded:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasEnded: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hasEnded",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ClientSession#id:member",
              "docComment": "/**\n * The server id associated with this session\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get id(): "
                },
                {
                  "kind": "Reference",
                  "text": "ServerSessionId",
                  "canonicalReference": "mongodb!ServerSessionId:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ClientSession#incrementTransactionNumber:member(1)",
              "docComment": "/**\n * Increment the transaction number on the internal ServerSession\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "incrementTransactionNumber(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "incrementTransactionNumber"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ClientSession#inTransaction:member(1)",
              "docComment": "/**\n * @returns whether this session is currently in a transaction or not\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inTransaction(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "inTransaction"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ClientSession#isPinned:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isPinned(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isPinned",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ClientSession#loadBalanced:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get loadBalanced(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "loadBalanced",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ClientSession#operationTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationTime?: "
                },
                {
                  "kind": "Reference",
                  "text": "Timestamp",
                  "canonicalReference": "bson!Timestamp:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "operationTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ClientSession#serverSession:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get serverSession(): "
                },
                {
                  "kind": "Reference",
                  "text": "ServerSession",
                  "canonicalReference": "mongodb!ServerSession:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "serverSession",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ClientSession#snapshotEnabled:member",
              "docComment": "/**\n * Whether or not this session is configured for snapshot reads\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get snapshotEnabled(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "snapshotEnabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ClientSession#startTransaction:member(1)",
              "docComment": "/**\n * Starts a new transaction with the given options.\n *\n * @param options - Options for the transaction\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "startTransaction(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "TransactionOptions",
                  "canonicalReference": "mongodb!TransactionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "startTransaction"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ClientSession#supports:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "supports: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        causalConsistency: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "supports",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ClientSession#toBSON:member(1)",
              "docComment": "/**\n * This is here to ensure that ClientSession is never serialized to BSON.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toBSON(): "
                },
                {
                  "kind": "Content",
                  "text": "never"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "toBSON"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ClientSession#transaction:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transaction: "
                },
                {
                  "kind": "Reference",
                  "text": "Transaction",
                  "canonicalReference": "mongodb!Transaction:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "transaction",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ClientSession#withTransaction:member(1)",
              "docComment": "/**\n * Runs a provided callback within a transaction, retrying either the commitTransaction operation or entire transaction as needed (and when the error permits) to better ensure that the transaction can complete successfully.\n *\n * **IMPORTANT:** This method requires the user to return a Promise, and `await` all operations. Any callbacks that do not return a Promise will result in undefined behavior.\n *\n * @remarks\n *\n * This function: - Will return the command response from the final commitTransaction if every operation is successful (can be used as a truthy object) - Will return `undefined` if the transaction is explicitly aborted with `await session.abortTransaction()` - Will throw if one of the operations throws or `throw` statement is used inside the `withTransaction` callback\n *\n * Checkout a descriptive example here:\n *\n * @param fn - callback to run within a transaction\n *\n * @param options - optional settings for the transaction\n *\n * @returns A raw command response or undefined\n *\n * @see\n *\n * https://www.mongodb.com/developer/quickstart/node-transactions/\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withTransaction<T = "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">(fn: "
                },
                {
                  "kind": "Reference",
                  "text": "WithTransactionCallback",
                  "canonicalReference": "mongodb!WithTransactionCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "TransactionOptions",
                  "canonicalReference": "mongodb!TransactionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "withTransaction"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ClientSessionEvents:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ClientSessionEvents = "
            },
            {
              "kind": "Content",
              "text": "{\n    ended(session: "
            },
            {
              "kind": "Reference",
              "text": "ClientSession",
              "canonicalReference": "mongodb!ClientSession:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ClientSessionEvents",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ClientSessionOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ClientSessionOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "ClientSessionOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ClientSessionOptions#causalConsistency:member",
              "docComment": "/**\n * Whether causal consistency should be enabled on this session\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "causalConsistency?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "causalConsistency",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ClientSessionOptions#defaultTransactionOptions:member",
              "docComment": "/**\n * The default TransactionOptions to use for transactions started on this session.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultTransactionOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "TransactionOptions",
                  "canonicalReference": "mongodb!TransactionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "defaultTransactionOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ClientSessionOptions#snapshot:member",
              "docComment": "/**\n * Whether all read operations should be read from the same snapshot for this session (NOTE: not compatible with `causalConsistency=true`)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "snapshot?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "snapshot",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!CloseOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CloseOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "CloseOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CloseOptions#force:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "force?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "force",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ClusteredCollectionOptions:interface",
          "docComment": "/**\n * Configuration options for clustered collections TODO: NODE-4230 replace with normal manual link once it is on there.\n *\n * @see\n *\n * https://www.mongodb.com/docs/v5.3/core/clustered-collections/\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ClusteredCollectionOptions extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ClusteredCollectionOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ClusteredCollectionOptions#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ClusteredCollectionOptions#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ClusteredCollectionOptions#unique:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unique: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "unique",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ClusterTime:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ClusterTime "
            }
          ],
          "releaseTag": "Public",
          "name": "ClusterTime",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ClusterTime#clusterTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clusterTime: "
                },
                {
                  "kind": "Reference",
                  "text": "Timestamp",
                  "canonicalReference": "bson!Timestamp:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "clusterTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ClusterTime#signature:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "signature: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        hash: "
                },
                {
                  "kind": "Reference",
                  "text": "Binary",
                  "canonicalReference": "bson!Binary:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        keyId: "
                },
                {
                  "kind": "Reference",
                  "text": "Long",
                  "canonicalReference": "bson!Long:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "signature",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!CollationOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CollationOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "CollationOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollationOptions#alternate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "alternate?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "alternate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollationOptions#backwards:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "backwards?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "backwards",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollationOptions#caseFirst:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "caseFirst?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "caseFirst",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollationOptions#caseLevel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "caseLevel?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "caseLevel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollationOptions#locale:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "locale: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "locale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollationOptions#maxVariable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxVariable?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxVariable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollationOptions#normalization:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "normalization?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "normalization",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollationOptions#numericOrdering:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "numericOrdering?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "numericOrdering",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollationOptions#strength:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "strength?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "strength",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!Collection:class",
          "docComment": "/**\n * The **Collection** class is an internal class that embodies a MongoDB collection allowing for insert/update/remove/find and other command operation on that MongoDB collection.\n *\n * **COLLECTION Cannot directly be instantiated**\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `Collection` class.\n *\n * @example\n * ```js\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Create a collection we want to drop later\n *   const col = client.db(dbName).collection('createIndexExample1');\n *   // Show that duplicate records got dropped\n *   col.find({}).toArray(function(err, items) {\n *     expect(err).to.not.exist;\n *     test.equal(4, items.length);\n *     client.close();\n *   });\n * });\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Collection<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "Collection",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#aggregate:member(1)",
              "docComment": "/**\n * Execute an aggregation framework pipeline against the collection, needs MongoDB \\>= 2.2\n *\n * @param pipeline - An array of aggregation pipelines to execute\n *\n * @param options - Optional settings for the command\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "aggregate<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(pipeline?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AggregateOptions",
                  "canonicalReference": "mongodb!AggregateOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AggregationCursor",
                  "canonicalReference": "mongodb!AggregationCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pipeline",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "aggregate"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Collection#bsonOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get bsonOptions(): "
                },
                {
                  "kind": "Reference",
                  "text": "BSONSerializeOptions",
                  "canonicalReference": "mongodb!BSONSerializeOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bsonOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#bulkWrite:member(1)",
              "docComment": "/**\n * Perform a bulkWrite operation without a fluent API\n *\n * Legal operation types are\n * ```js\n *  { insertOne: { document: { a: 1 } } }\n *\n *  { updateOne: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }\n *\n *  { updateMany: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }\n *\n *  { updateMany: { filter: {}, update: {$set: {\"a.$[i].x\": 5}}, arrayFilters: [{ \"i.x\": 5 }]} }\n *\n *  { deleteOne: { filter: {c:1} } }\n *\n *  { deleteMany: { filter: {c:1} } }\n *\n *  { replaceOne: { filter: {c:3}, replacement: {c:4}, upsert:true} }\n * ```\n *\n * Please note that raw operations are no longer accepted as of driver version 4.0.\n *\n * If documents passed in do not contain the **_id** field, one will be added to each of the documents missing it by the driver, mutating the document. This behavior can be overridden by setting the **forceServerObjectId** flag.\n *\n * @param operations - Bulk operations to perform\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n *\n * @throws\n *\n * MongoDriverError if operations is not an array\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bulkWrite(operations: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyBulkWriteOperation",
                  "canonicalReference": "mongodb!AnyBulkWriteOperation:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteResult",
                  "canonicalReference": "mongodb!BulkWriteResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "operations",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "bulkWrite"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#bulkWrite:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bulkWrite(operations: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyBulkWriteOperation",
                  "canonicalReference": "mongodb!AnyBulkWriteOperation:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[]"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteResult",
                  "canonicalReference": "mongodb!BulkWriteResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "operations",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "bulkWrite"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#bulkWrite:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bulkWrite(operations: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyBulkWriteOperation",
                  "canonicalReference": "mongodb!AnyBulkWriteOperation:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[]"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteOptions",
                  "canonicalReference": "mongodb!BulkWriteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteResult",
                  "canonicalReference": "mongodb!BulkWriteResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "operations",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "bulkWrite"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#bulkWrite:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bulkWrite(operations: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyBulkWriteOperation",
                  "canonicalReference": "mongodb!AnyBulkWriteOperation:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[]"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteOptions",
                  "canonicalReference": "mongodb!BulkWriteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteResult",
                  "canonicalReference": "mongodb!BulkWriteResult:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "operations",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "bulkWrite"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Collection#collectionName:member",
              "docComment": "/**\n * The name of this collection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get collectionName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "collectionName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#count:member(1)",
              "docComment": "/**\n * An estimated count of matching documents in the db to a filter.\n *\n * **NOTE:** This method has been deprecated, since it does not provide an accurate count of the documents in a collection. To obtain an accurate count of documents in the collection, use {@link Collection#countDocuments | countDocuments}. To obtain an estimated count of all documents in the collection, use {@link Collection#estimatedDocumentCount | estimatedDocumentCount}.\n *\n * @deprecated\n *\n * use {@link Collection#countDocuments | countDocuments} or {@link Collection#estimatedDocumentCount | estimatedDocumentCount} instead\n *\n * @param filter - The filter for the count.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "count(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "count"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#count:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "count(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "count"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#count:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "count(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "count"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#count:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "count(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "count"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#count:member(5)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "count(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "CountOptions",
                  "canonicalReference": "mongodb!CountOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 5,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "count"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#count:member(6)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "count(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "CountOptions",
                  "canonicalReference": "mongodb!CountOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number> | void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 6,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "count"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#countDocuments:member(1)",
              "docComment": "/**\n * Gets the number of documents matching the filter. For a fast count of the total documents in a collection see {@link Collection#estimatedDocumentCount | estimatedDocumentCount}. **Note**: When migrating from {@link Collection#count | count} to {@link Collection#countDocuments | countDocuments} the following query operators must be replaced:\n *\n * | Operator | Replacement | | -------- | ----------- | | `$where` | [`$expr`][1] | | `$near` | [`$geoWithin`][2] with [`$center`][3] | | `$nearSphere` | [`$geoWithin`][2] with [`$centerSphere`][4] |\n *\n * [1]: https://docs.mongodb.com/manual/reference/operator/query/expr/ [2]: https://docs.mongodb.com/manual/reference/operator/query/geoWithin/ [3]: https://docs.mongodb.com/manual/reference/operator/query/center/#op._S_center [4]: https://docs.mongodb.com/manual/reference/operator/query/centerSphere/#op._S_centerSphere\n *\n * @param filter - The filter for the count\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n *\n * @see\n *\n * https://docs.mongodb.com/manual/reference/operator/query/expr/\n *\n * @see\n *\n * https://docs.mongodb.com/manual/reference/operator/query/geoWithin/\n *\n * @see\n *\n * https://docs.mongodb.com/manual/reference/operator/query/center/#op._S_center\n *\n * @see\n *\n * https://docs.mongodb.com/manual/reference/operator/query/centerSphere/#op._S_centerSphere\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "countDocuments(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "countDocuments"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#countDocuments:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "countDocuments(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "countDocuments"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#countDocuments:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "countDocuments(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "countDocuments"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#countDocuments:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "countDocuments(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "countDocuments"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#countDocuments:member(5)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "countDocuments(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "CountDocumentsOptions",
                  "canonicalReference": "mongodb!CountDocumentsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 5,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "countDocuments"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#countDocuments:member(6)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "countDocuments(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "CountDocumentsOptions",
                  "canonicalReference": "mongodb!CountDocumentsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 6,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "countDocuments"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#countDocuments:member(7)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "countDocuments(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 7,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "countDocuments"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#createIndex:member(1)",
              "docComment": "/**\n * Creates an index on the db and collection collection.\n *\n * @param indexSpec - The field name or index specification to create an index for\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n *\n * @example\n * ```js\n * const collection = client.db('foo').collection('bar');\n *\n * await collection.createIndex({ a: 1, b: -1 });\n *\n * // Alternate syntax for { c: 1, d: -1 } that ensures order of indexes\n * await collection.createIndex([ [c, 1], [d, -1] ]);\n *\n * // Equivalent to { e: 1 }\n * await collection.createIndex('e');\n *\n * // Equivalent to { f: 1, g: 1 }\n * await collection.createIndex(['f', 'g'])\n *\n * // Equivalent to { h: 1, i: -1 }\n * await collection.createIndex([ { h: 1 }, { i: -1 } ]);\n *\n * // Equivalent to { j: 1, k: -1, l: 2d }\n * await collection.createIndex(['j', ['k', -1], { l: '2d' }])\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createIndex(indexSpec: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexSpecification",
                  "canonicalReference": "mongodb!IndexSpecification:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "indexSpec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "createIndex"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#createIndex:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createIndex(indexSpec: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexSpecification",
                  "canonicalReference": "mongodb!IndexSpecification:type"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "indexSpec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "createIndex"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#createIndex:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createIndex(indexSpec: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexSpecification",
                  "canonicalReference": "mongodb!IndexSpecification:type"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "CreateIndexesOptions",
                  "canonicalReference": "mongodb!CreateIndexesOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "indexSpec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "createIndex"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#createIndex:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createIndex(indexSpec: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexSpecification",
                  "canonicalReference": "mongodb!IndexSpecification:type"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "CreateIndexesOptions",
                  "canonicalReference": "mongodb!CreateIndexesOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "indexSpec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "createIndex"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#createIndexes:member(1)",
              "docComment": "/**\n * Creates multiple indexes in the collection, this method is only supported for MongoDB 2.6 or higher. Earlier version of MongoDB will throw a command not supported error.\n *\n * **Note**: Unlike {@link Collection#createIndex | createIndex}, this function takes in raw index specifications. Index specifications are defined {@link http://docs.mongodb.org/manual/reference/command/createIndexes/ | here}.\n *\n * @param indexSpecs - An array of index specifications to be created\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n *\n * @example\n * ```js\n * const collection = client.db('foo').collection('bar');\n * await collection.createIndexes([\n *   // Simple index on field fizz\n *   {\n *     key: { fizz: 1 },\n *   }\n *   // wildcard index\n *   {\n *     key: { '$**': 1 }\n *   },\n *   // named index on darmok and jalad\n *   {\n *     key: { darmok: 1, jalad: -1 }\n *     name: 'tanagra'\n *   }\n * ]);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createIndexes(indexSpecs: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexDescription",
                  "canonicalReference": "mongodb!IndexDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "indexSpecs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "createIndexes"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#createIndexes:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createIndexes(indexSpecs: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexDescription",
                  "canonicalReference": "mongodb!IndexDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<string[]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "indexSpecs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "createIndexes"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#createIndexes:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createIndexes(indexSpecs: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexDescription",
                  "canonicalReference": "mongodb!IndexDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "CreateIndexesOptions",
                  "canonicalReference": "mongodb!CreateIndexesOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "indexSpecs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "createIndexes"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#createIndexes:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createIndexes(indexSpecs: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexDescription",
                  "canonicalReference": "mongodb!IndexDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "CreateIndexesOptions",
                  "canonicalReference": "mongodb!CreateIndexesOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<string[]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "indexSpecs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "createIndexes"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Collection#dbName:member",
              "docComment": "/**\n * The name of the database this collection belongs to\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get dbName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dbName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#deleteMany:member(1)",
              "docComment": "/**\n * Delete multiple documents from a collection\n *\n * @param filter - The filter used to select the documents to remove\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteMany(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DeleteResult",
                  "canonicalReference": "mongodb!DeleteResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "deleteMany"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#deleteMany:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteMany(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DeleteResult",
                  "canonicalReference": "mongodb!DeleteResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "deleteMany"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#deleteMany:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteMany(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "DeleteOptions",
                  "canonicalReference": "mongodb!DeleteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DeleteResult",
                  "canonicalReference": "mongodb!DeleteResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "deleteMany"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#deleteMany:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteMany(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "DeleteOptions",
                  "canonicalReference": "mongodb!DeleteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DeleteResult",
                  "canonicalReference": "mongodb!DeleteResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "deleteMany"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#deleteOne:member(1)",
              "docComment": "/**\n * Delete a document from a collection\n *\n * @param filter - The filter used to select the document to remove\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteOne(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DeleteResult",
                  "canonicalReference": "mongodb!DeleteResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "deleteOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#deleteOne:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteOne(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DeleteResult",
                  "canonicalReference": "mongodb!DeleteResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "deleteOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#deleteOne:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteOne(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "DeleteOptions",
                  "canonicalReference": "mongodb!DeleteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DeleteResult",
                  "canonicalReference": "mongodb!DeleteResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "deleteOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#deleteOne:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteOne(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "DeleteOptions",
                  "canonicalReference": "mongodb!DeleteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback?: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DeleteResult",
                  "canonicalReference": "mongodb!DeleteResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "deleteOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#distinct:member(1)",
              "docComment": "/**\n * The distinct command returns a list of distinct values for the given key across a collection.\n *\n * @param key - Field of the document to find distinct values for\n *\n * @param filter - The filter for filtering the set of documents to which we apply the distinct filter.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distinct<Key extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof "
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "Key"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Flatten",
                  "canonicalReference": "mongodb!Flatten:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[Key]>>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "Key",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "distinct"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#distinct:member(10)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distinct(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<any[]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 10,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "distinct"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#distinct:member(11)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distinct(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "DistinctOptions",
                  "canonicalReference": "mongodb!DistinctOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 11,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "distinct"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#distinct:member(12)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distinct(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "DistinctOptions",
                  "canonicalReference": "mongodb!DistinctOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<any[]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 12,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "distinct"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#distinct:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distinct<Key extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof "
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "Key"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Flatten",
                  "canonicalReference": "mongodb!Flatten:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[Key]>>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "Key",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 15
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "distinct"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#distinct:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distinct<Key extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof "
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "Key"
                },
                {
                  "kind": "Content",
                  "text": ", filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Flatten",
                  "canonicalReference": "mongodb!Flatten:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[Key]>>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "Key",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "distinct"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#distinct:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distinct<Key extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof "
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "Key"
                },
                {
                  "kind": "Content",
                  "text": ", filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Flatten",
                  "canonicalReference": "mongodb!Flatten:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[Key]>>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "Key",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 19,
                "endIndex": 20
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 18
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "distinct"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#distinct:member(5)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distinct<Key extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof "
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "Key"
                },
                {
                  "kind": "Content",
                  "text": ", filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "DistinctOptions",
                  "canonicalReference": "mongodb!DistinctOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Flatten",
                  "canonicalReference": "mongodb!Flatten:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[Key]>>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "Key",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 20
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 5,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "distinct"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#distinct:member(6)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distinct<Key extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof "
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "Key"
                },
                {
                  "kind": "Content",
                  "text": ", filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "DistinctOptions",
                  "canonicalReference": "mongodb!DistinctOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Flatten",
                  "canonicalReference": "mongodb!Flatten:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[Key]>>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "Key",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 21,
                "endIndex": 22
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 6,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 20
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "distinct"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#distinct:member(7)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distinct(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 7,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "distinct"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#distinct:member(8)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distinct(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<any[]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 8,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "distinct"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#distinct:member(9)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distinct(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 9,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "distinct"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#drop:member(1)",
              "docComment": "/**\n * Drop the collection from the database, removing it permanently. New accesses will create a new collection.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "drop(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "drop"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#drop:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "drop(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "drop"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#drop:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "drop(options: "
                },
                {
                  "kind": "Reference",
                  "text": "DropCollectionOptions",
                  "canonicalReference": "mongodb!DropCollectionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "drop"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#drop:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "drop(options: "
                },
                {
                  "kind": "Reference",
                  "text": "DropCollectionOptions",
                  "canonicalReference": "mongodb!DropCollectionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "drop"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#dropIndex:member(1)",
              "docComment": "/**\n * Drops an index from this collection.\n *\n * @param indexName - Name of the index to drop.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropIndex(indexName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "indexName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "dropIndex"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#dropIndex:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropIndex(indexName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "indexName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "dropIndex"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#dropIndex:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropIndex(indexName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "DropIndexesOptions",
                  "canonicalReference": "mongodb!DropIndexesOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "indexName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "dropIndex"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#dropIndex:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropIndex(indexName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "DropIndexesOptions",
                  "canonicalReference": "mongodb!DropIndexesOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "indexName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "dropIndex"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#dropIndexes:member(1)",
              "docComment": "/**\n * Drops all indexes from this collection.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropIndexes(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "dropIndexes"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#dropIndexes:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropIndexes(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "dropIndexes"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#dropIndexes:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropIndexes(options: "
                },
                {
                  "kind": "Reference",
                  "text": "DropIndexesOptions",
                  "canonicalReference": "mongodb!DropIndexesOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "dropIndexes"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#dropIndexes:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropIndexes(options: "
                },
                {
                  "kind": "Reference",
                  "text": "DropIndexesOptions",
                  "canonicalReference": "mongodb!DropIndexesOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "dropIndexes"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#estimatedDocumentCount:member(1)",
              "docComment": "/**\n * Gets an estimate of the count of documents in a collection using collection metadata. This will always run a count command on all server versions.\n *\n * due to an oversight in versions 5.0.0-5.0.8 of MongoDB, the count command, which estimatedDocumentCount uses in its implementation, was not included in v1 of the Stable API, and so users of the Stable API with estimatedDocumentCount are recommended to upgrade their server version to 5.0.9+ or set apiStrict: false to avoid encountering errors.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n *\n * @see\n *\n * {@link https://www.mongodb.com/docs/manual/reference/command/count/#behavior | Count: Behavior}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "estimatedDocumentCount(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "estimatedDocumentCount"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#estimatedDocumentCount:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "estimatedDocumentCount(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "estimatedDocumentCount"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#estimatedDocumentCount:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "estimatedDocumentCount(options: "
                },
                {
                  "kind": "Reference",
                  "text": "EstimatedDocumentCountOptions",
                  "canonicalReference": "mongodb!EstimatedDocumentCountOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "estimatedDocumentCount"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#estimatedDocumentCount:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "estimatedDocumentCount(options: "
                },
                {
                  "kind": "Reference",
                  "text": "EstimatedDocumentCountOptions",
                  "canonicalReference": "mongodb!EstimatedDocumentCountOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "estimatedDocumentCount"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#find:member(1)",
              "docComment": "/**\n * Creates a cursor for a filter that can be used to iterate over results from MongoDB\n *\n * @param filter - The filter predicate. If unspecified, then all documents in the collection will match the predicate\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "find(): "
                },
                {
                  "kind": "Reference",
                  "text": "FindCursor",
                  "canonicalReference": "mongodb!FindCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "find"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#find:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "find(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "FindOptions",
                  "canonicalReference": "mongodb!FindOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "FindCursor",
                  "canonicalReference": "mongodb!FindCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "find"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#find:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "find<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "FindOptions",
                  "canonicalReference": "mongodb!FindOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "FindCursor",
                  "canonicalReference": "mongodb!FindCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "find"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOne:member(1)",
              "docComment": "/**\n * Fetches the first document that matches the filter\n *\n * @param filter - Query for find Operation\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOne(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema> | null>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "findOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOne:member(10)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOne<T = "
                },
                {
                  "kind": "Content",
                  "text": "TSchema"
                },
                {
                  "kind": "Content",
                  "text": ">(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "FindOptions",
                  "canonicalReference": "mongodb!FindOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T | null>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 10,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "findOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOne:member(11)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOne<T = "
                },
                {
                  "kind": "Content",
                  "text": "TSchema"
                },
                {
                  "kind": "Content",
                  "text": ">(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "FindOptions",
                  "canonicalReference": "mongodb!FindOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback?: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<T | null>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 11,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "findOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOne:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOne(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema> | null>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOne:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOne(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema> | null>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOne:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOne(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema> | null>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOne:member(5)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOne(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "FindOptions",
                  "canonicalReference": "mongodb!FindOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema> | null>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 5,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOne:member(6)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOne(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "FindOptions",
                  "canonicalReference": "mongodb!FindOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema> | null>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 6,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOne:member(7)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOne<T = "
                },
                {
                  "kind": "Content",
                  "text": "TSchema"
                },
                {
                  "kind": "Content",
                  "text": ">(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T | null>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 7,
              "parameters": [],
              "isOptional": false,
              "name": "findOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOne:member(8)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOne<T = "
                },
                {
                  "kind": "Content",
                  "text": "TSchema"
                },
                {
                  "kind": "Content",
                  "text": ">(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<T | null>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 8,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOne:member(9)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOne<T = "
                },
                {
                  "kind": "Content",
                  "text": "TSchema"
                },
                {
                  "kind": "Content",
                  "text": ">(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T | null>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 9,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOneAndDelete:member(1)",
              "docComment": "/**\n * Find a document and delete it in one atomic operation. Requires a write lock for the duration of the operation.\n *\n * @param filter - The filter used to select the document to remove\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOneAndDelete(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ModifyResult",
                  "canonicalReference": "mongodb!ModifyResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOneAndDelete"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOneAndDelete:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOneAndDelete(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "FindOneAndDeleteOptions",
                  "canonicalReference": "mongodb!FindOneAndDeleteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ModifyResult",
                  "canonicalReference": "mongodb!ModifyResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOneAndDelete"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOneAndDelete:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOneAndDelete(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ModifyResult",
                  "canonicalReference": "mongodb!ModifyResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOneAndDelete"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOneAndDelete:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOneAndDelete(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "FindOneAndDeleteOptions",
                  "canonicalReference": "mongodb!FindOneAndDeleteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ModifyResult",
                  "canonicalReference": "mongodb!ModifyResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOneAndDelete"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOneAndReplace:member(1)",
              "docComment": "/**\n * Find a document and replace it in one atomic operation. Requires a write lock for the duration of the operation.\n *\n * @param filter - The filter used to select the document to replace\n *\n * @param replacement - The Document that replaces the matching document\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOneAndReplace(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", replacement: "
                },
                {
                  "kind": "Reference",
                  "text": "WithoutId",
                  "canonicalReference": "mongodb!WithoutId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ModifyResult",
                  "canonicalReference": "mongodb!ModifyResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "replacement",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOneAndReplace"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOneAndReplace:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOneAndReplace(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", replacement: "
                },
                {
                  "kind": "Reference",
                  "text": "WithoutId",
                  "canonicalReference": "mongodb!WithoutId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ModifyResult",
                  "canonicalReference": "mongodb!ModifyResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "replacement",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOneAndReplace"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOneAndReplace:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOneAndReplace(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", replacement: "
                },
                {
                  "kind": "Reference",
                  "text": "WithoutId",
                  "canonicalReference": "mongodb!WithoutId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "FindOneAndReplaceOptions",
                  "canonicalReference": "mongodb!FindOneAndReplaceOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ModifyResult",
                  "canonicalReference": "mongodb!ModifyResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "replacement",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOneAndReplace"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOneAndReplace:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOneAndReplace(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", replacement: "
                },
                {
                  "kind": "Reference",
                  "text": "WithoutId",
                  "canonicalReference": "mongodb!WithoutId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "FindOneAndReplaceOptions",
                  "canonicalReference": "mongodb!FindOneAndReplaceOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ModifyResult",
                  "canonicalReference": "mongodb!ModifyResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "replacement",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOneAndReplace"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOneAndUpdate:member(1)",
              "docComment": "/**\n * Find a document and update it in one atomic operation. Requires a write lock for the duration of the operation.\n *\n * @param filter - The filter used to select the document to update\n *\n * @param update - Update operations to be performed on the document\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOneAndUpdate(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", update: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateFilter",
                  "canonicalReference": "mongodb!UpdateFilter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ModifyResult",
                  "canonicalReference": "mongodb!ModifyResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "update",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOneAndUpdate"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOneAndUpdate:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOneAndUpdate(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", update: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateFilter",
                  "canonicalReference": "mongodb!UpdateFilter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ModifyResult",
                  "canonicalReference": "mongodb!ModifyResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "update",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOneAndUpdate"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOneAndUpdate:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOneAndUpdate(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", update: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateFilter",
                  "canonicalReference": "mongodb!UpdateFilter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "FindOneAndUpdateOptions",
                  "canonicalReference": "mongodb!FindOneAndUpdateOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ModifyResult",
                  "canonicalReference": "mongodb!ModifyResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "update",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOneAndUpdate"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#findOneAndUpdate:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOneAndUpdate(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", update: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateFilter",
                  "canonicalReference": "mongodb!UpdateFilter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "FindOneAndUpdateOptions",
                  "canonicalReference": "mongodb!FindOneAndUpdateOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ModifyResult",
                  "canonicalReference": "mongodb!ModifyResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "update",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findOneAndUpdate"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#getLogger:member(1)",
              "docComment": "/**\n * Get the db scoped logger\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLogger(): "
                },
                {
                  "kind": "Reference",
                  "text": "Logger",
                  "canonicalReference": "mongodb!Logger:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getLogger"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Collection#hint:member",
              "docComment": "/**\n * The current index hint for the collection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hint(): "
                },
                {
                  "kind": "Reference",
                  "text": "Hint",
                  "canonicalReference": "mongodb!Hint:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset hint(v: "
                },
                {
                  "kind": "Reference",
                  "text": "Hint",
                  "canonicalReference": "mongodb!Hint:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#indexes:member(1)",
              "docComment": "/**\n * Retrieve all the indexes on the collection.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexes(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "indexes"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#indexes:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexes(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "indexes"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#indexes:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexes(options: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexInformationOptions",
                  "canonicalReference": "mongodb!IndexInformationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "indexes"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#indexes:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexes(options: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexInformationOptions",
                  "canonicalReference": "mongodb!IndexInformationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "indexes"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#indexExists:member(1)",
              "docComment": "/**\n * Checks if one or more indexes exist on the collection, fails on first non-existing index\n *\n * @param indexes - One or more index names to check.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexExists(indexes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "indexes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "indexExists"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#indexExists:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexExists(indexes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "indexes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "indexExists"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#indexExists:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexExists(indexes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexInformationOptions",
                  "canonicalReference": "mongodb!IndexInformationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "indexes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "indexExists"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#indexExists:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexExists(indexes: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexInformationOptions",
                  "canonicalReference": "mongodb!IndexInformationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "indexes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "indexExists"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#indexInformation:member(1)",
              "docComment": "/**\n * Retrieves this collections index info.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexInformation(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "indexInformation"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#indexInformation:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexInformation(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "indexInformation"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#indexInformation:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexInformation(options: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexInformationOptions",
                  "canonicalReference": "mongodb!IndexInformationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "indexInformation"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#indexInformation:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexInformation(options: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexInformationOptions",
                  "canonicalReference": "mongodb!IndexInformationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "indexInformation"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#initializeOrderedBulkOp:member(1)",
              "docComment": "/**\n * Initiate an In order bulk write operation. Operations will be serially executed in the order they are added, creating a new operation for each switch in types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initializeOrderedBulkOp(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteOptions",
                  "canonicalReference": "mongodb!BulkWriteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "OrderedBulkOperation",
                  "canonicalReference": "mongodb!OrderedBulkOperation:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "initializeOrderedBulkOp"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#initializeUnorderedBulkOp:member(1)",
              "docComment": "/**\n * Initiate an Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initializeUnorderedBulkOp(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteOptions",
                  "canonicalReference": "mongodb!BulkWriteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UnorderedBulkOperation",
                  "canonicalReference": "mongodb!UnorderedBulkOperation:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "initializeUnorderedBulkOp"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#insert:member(1)",
              "docComment": "/**\n * Inserts a single document or a an array of documents into MongoDB. If documents passed in do not contain the **_id** field, one will be added to each of the documents missing it by the driver, mutating the document. This behavior can be overridden by setting the **forceServerObjectId** flag.\n *\n * @deprecated\n *\n * Use insertOne, insertMany or bulkWrite instead.\n *\n * @param docs - The documents to insert\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insert(docs: "
                },
                {
                  "kind": "Reference",
                  "text": "OptionalUnlessRequiredId",
                  "canonicalReference": "mongodb!OptionalUnlessRequiredId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[]"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteOptions",
                  "canonicalReference": "mongodb!BulkWriteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "InsertManyResult",
                  "canonicalReference": "mongodb!InsertManyResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "InsertManyResult",
                  "canonicalReference": "mongodb!InsertManyResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>> | void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "docs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "insert"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#insertMany:member(1)",
              "docComment": "/**\n * Inserts an array of documents into MongoDB. If documents passed in do not contain the **_id** field, one will be added to each of the documents missing it by the driver, mutating the document. This behavior can be overridden by setting the **forceServerObjectId** flag.\n *\n * @param docs - The documents to insert\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertMany(docs: "
                },
                {
                  "kind": "Reference",
                  "text": "OptionalUnlessRequiredId",
                  "canonicalReference": "mongodb!OptionalUnlessRequiredId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "InsertManyResult",
                  "canonicalReference": "mongodb!InsertManyResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "docs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "insertMany"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#insertMany:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertMany(docs: "
                },
                {
                  "kind": "Reference",
                  "text": "OptionalUnlessRequiredId",
                  "canonicalReference": "mongodb!OptionalUnlessRequiredId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[]"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "InsertManyResult",
                  "canonicalReference": "mongodb!InsertManyResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "docs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "insertMany"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#insertMany:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertMany(docs: "
                },
                {
                  "kind": "Reference",
                  "text": "OptionalUnlessRequiredId",
                  "canonicalReference": "mongodb!OptionalUnlessRequiredId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[]"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteOptions",
                  "canonicalReference": "mongodb!BulkWriteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "InsertManyResult",
                  "canonicalReference": "mongodb!InsertManyResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "docs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "insertMany"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#insertMany:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertMany(docs: "
                },
                {
                  "kind": "Reference",
                  "text": "OptionalUnlessRequiredId",
                  "canonicalReference": "mongodb!OptionalUnlessRequiredId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[]"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteOptions",
                  "canonicalReference": "mongodb!BulkWriteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "InsertManyResult",
                  "canonicalReference": "mongodb!InsertManyResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "docs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "insertMany"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#insertOne:member(1)",
              "docComment": "/**\n * Inserts a single document into MongoDB. If documents passed in do not contain the **_id** field, one will be added to each of the documents missing it by the driver, mutating the document. This behavior can be overridden by setting the **forceServerObjectId** flag.\n *\n * @param doc - The document to insert\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertOne(doc: "
                },
                {
                  "kind": "Reference",
                  "text": "OptionalUnlessRequiredId",
                  "canonicalReference": "mongodb!OptionalUnlessRequiredId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "InsertOneResult",
                  "canonicalReference": "mongodb!InsertOneResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "doc",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "insertOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#insertOne:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertOne(doc: "
                },
                {
                  "kind": "Reference",
                  "text": "OptionalUnlessRequiredId",
                  "canonicalReference": "mongodb!OptionalUnlessRequiredId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "InsertOneResult",
                  "canonicalReference": "mongodb!InsertOneResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "doc",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "insertOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#insertOne:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertOne(doc: "
                },
                {
                  "kind": "Reference",
                  "text": "OptionalUnlessRequiredId",
                  "canonicalReference": "mongodb!OptionalUnlessRequiredId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "InsertOneOptions",
                  "canonicalReference": "mongodb!InsertOneOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "InsertOneResult",
                  "canonicalReference": "mongodb!InsertOneResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "doc",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "insertOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#insertOne:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertOne(doc: "
                },
                {
                  "kind": "Reference",
                  "text": "OptionalUnlessRequiredId",
                  "canonicalReference": "mongodb!OptionalUnlessRequiredId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "InsertOneOptions",
                  "canonicalReference": "mongodb!InsertOneOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "InsertOneResult",
                  "canonicalReference": "mongodb!InsertOneResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "doc",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "insertOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#isCapped:member(1)",
              "docComment": "/**\n * Returns if the collection is a capped collection\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isCapped(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "isCapped"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#isCapped:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isCapped(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "isCapped"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#isCapped:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isCapped(options: "
                },
                {
                  "kind": "Reference",
                  "text": "OperationOptions",
                  "canonicalReference": "mongodb!OperationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "isCapped"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#isCapped:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isCapped(options: "
                },
                {
                  "kind": "Reference",
                  "text": "OperationOptions",
                  "canonicalReference": "mongodb!OperationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "isCapped"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#listIndexes:member(1)",
              "docComment": "/**\n * Get the list of all indexes information for the collection.\n *\n * @param options - Optional settings for the command\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listIndexes(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ListIndexesOptions",
                  "canonicalReference": "mongodb!ListIndexesOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ListIndexesCursor",
                  "canonicalReference": "mongodb!ListIndexesCursor:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "listIndexes"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Collection#logger:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get logger(): "
                },
                {
                  "kind": "Reference",
                  "text": "Logger",
                  "canonicalReference": "mongodb!Logger:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "logger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#mapReduce:member(1)",
              "docComment": "/**\n * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\n *\n * @deprecated\n *\n * collection.mapReduce is deprecated. Use the aggregation pipeline instead. Visit https://docs.mongodb.com/manual/reference/map-reduce-to-aggregation-pipeline for more information on how to translate map-reduce operations to the aggregation pipeline.\n *\n * @param map - The mapping function.\n *\n * @param reduce - The reduce function.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mapReduce<TKey = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", TValue = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(map: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "MapFunction",
                  "canonicalReference": "mongodb!MapFunction:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", reduce: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ReduceFunction",
                  "canonicalReference": "mongodb!ReduceFunction:type"
                },
                {
                  "kind": "Content",
                  "text": "<TKey, TValue>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TKey",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "typeParameterName": "TValue",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 19
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "map",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "reduce",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 12
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "mapReduce"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#mapReduce:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mapReduce<TKey = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", TValue = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(map: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "MapFunction",
                  "canonicalReference": "mongodb!MapFunction:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", reduce: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ReduceFunction",
                  "canonicalReference": "mongodb!ReduceFunction:type"
                },
                {
                  "kind": "Content",
                  "text": "<TKey, TValue>"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TKey",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "typeParameterName": "TValue",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 20,
                "endIndex": 21
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "map",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "reduce",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 19
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "mapReduce"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#mapReduce:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mapReduce<TKey = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", TValue = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(map: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "MapFunction",
                  "canonicalReference": "mongodb!MapFunction:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", reduce: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ReduceFunction",
                  "canonicalReference": "mongodb!ReduceFunction:type"
                },
                {
                  "kind": "Content",
                  "text": "<TKey, TValue>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "MapReduceOptions",
                  "canonicalReference": "mongodb!MapReduceOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TKey, TValue>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TKey",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "typeParameterName": "TValue",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 22
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "map",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "reduce",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 15
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "mapReduce"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#mapReduce:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mapReduce<TKey = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", TValue = "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ">(map: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "MapFunction",
                  "canonicalReference": "mongodb!MapFunction:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", reduce: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ReduceFunction",
                  "canonicalReference": "mongodb!ReduceFunction:type"
                },
                {
                  "kind": "Content",
                  "text": "<TKey, TValue>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "MapReduceOptions",
                  "canonicalReference": "mongodb!MapReduceOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TKey, TValue>"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TKey",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "typeParameterName": "TValue",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 23,
                "endIndex": 24
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "map",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "reduce",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 15
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 16,
                    "endIndex": 22
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "mapReduce"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Collection#namespace:member",
              "docComment": "/**\n * The namespace of this collection, in the format `${this.dbName}.${this.collectionName}`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get namespace(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "namespace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#options:member(1)",
              "docComment": "/**\n * Returns the options of the collection.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "options"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#options:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "options"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#options:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options(options: "
                },
                {
                  "kind": "Reference",
                  "text": "OperationOptions",
                  "canonicalReference": "mongodb!OperationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "options"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#options:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options(options: "
                },
                {
                  "kind": "Reference",
                  "text": "OperationOptions",
                  "canonicalReference": "mongodb!OperationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "options"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Collection#readConcern:member",
              "docComment": "/**\n * The current readConcern of the collection. If not explicitly defined for this collection, will be inherited from the parent DB\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get readConcern(): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadConcern",
                  "canonicalReference": "mongodb!ReadConcern:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Collection#readPreference:member",
              "docComment": "/**\n * The current readPreference of the collection. If not explicitly defined for this collection, will be inherited from the parent DB\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get readPreference(): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readPreference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#remove:member(1)",
              "docComment": "/**\n * Remove documents.\n *\n * @deprecated\n *\n * use deleteOne, deleteMany or bulkWrite\n *\n * @param selector - The selector for the update operation.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "remove(selector: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "DeleteOptions",
                  "canonicalReference": "mongodb!DeleteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DeleteResult",
                  "canonicalReference": "mongodb!DeleteResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "> | void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "selector",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "remove"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#rename:member(1)",
              "docComment": "/**\n * Rename the collection.\n *\n * @remarks\n *\n * This operation does not inherit options from the Db or MongoClient.\n *\n * @param newName - New name of of the collection.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rename(newName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "newName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "rename"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#rename:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rename(newName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "newName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "rename"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#rename:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rename(newName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "RenameOptions",
                  "canonicalReference": "mongodb!RenameOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "newName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "rename"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#rename:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rename(newName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "RenameOptions",
                  "canonicalReference": "mongodb!RenameOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "newName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "rename"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#replaceOne:member(1)",
              "docComment": "/**\n * Replace a document in a collection with another document\n *\n * @param filter - The filter used to select the document to replace\n *\n * @param replacement - The Document that replaces the matching document\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replaceOne(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", replacement: "
                },
                {
                  "kind": "Reference",
                  "text": "WithoutId",
                  "canonicalReference": "mongodb!WithoutId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UpdateResult",
                  "canonicalReference": "mongodb!UpdateResult:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "replacement",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "replaceOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#replaceOne:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replaceOne(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", replacement: "
                },
                {
                  "kind": "Reference",
                  "text": "WithoutId",
                  "canonicalReference": "mongodb!WithoutId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UpdateResult",
                  "canonicalReference": "mongodb!UpdateResult:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "replacement",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "replaceOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#replaceOne:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replaceOne(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", replacement: "
                },
                {
                  "kind": "Reference",
                  "text": "WithoutId",
                  "canonicalReference": "mongodb!WithoutId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "ReplaceOptions",
                  "canonicalReference": "mongodb!ReplaceOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UpdateResult",
                  "canonicalReference": "mongodb!UpdateResult:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "replacement",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "replaceOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#replaceOne:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replaceOne(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", replacement: "
                },
                {
                  "kind": "Reference",
                  "text": "WithoutId",
                  "canonicalReference": "mongodb!WithoutId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "ReplaceOptions",
                  "canonicalReference": "mongodb!ReplaceOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UpdateResult",
                  "canonicalReference": "mongodb!UpdateResult:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "replacement",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 15
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "replaceOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#stats:member(1)",
              "docComment": "/**\n * Get all the collection statistics.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stats(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CollStats",
                  "canonicalReference": "mongodb!CollStats:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "stats"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#stats:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stats(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CollStats",
                  "canonicalReference": "mongodb!CollStats:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "stats"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#stats:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stats(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CollStatsOptions",
                  "canonicalReference": "mongodb!CollStatsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CollStats",
                  "canonicalReference": "mongodb!CollStats:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "stats"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#stats:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stats(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CollStatsOptions",
                  "canonicalReference": "mongodb!CollStatsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CollStats",
                  "canonicalReference": "mongodb!CollStats:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "stats"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#update:member(1)",
              "docComment": "/**\n * Updates documents.\n *\n * @deprecated\n *\n * use updateOne, updateMany or bulkWrite\n *\n * @param selector - The selector for the update operation.\n *\n * @param update - The update operations to be applied to the documents\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "update(selector: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", update: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateFilter",
                  "canonicalReference": "mongodb!UpdateFilter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateOptions",
                  "canonicalReference": "mongodb!UpdateOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UpdateResult",
                  "canonicalReference": "mongodb!UpdateResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "> | void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "selector",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "update",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "update"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#updateMany:member(1)",
              "docComment": "/**\n * Update multiple documents in a collection\n *\n * @param filter - The filter used to select the documents to update\n *\n * @param update - The update operations to be applied to the documents\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateMany(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", update: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateFilter",
                  "canonicalReference": "mongodb!UpdateFilter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UpdateResult",
                  "canonicalReference": "mongodb!UpdateResult:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "update",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "updateMany"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#updateMany:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateMany(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", update: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateFilter",
                  "canonicalReference": "mongodb!UpdateFilter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UpdateResult",
                  "canonicalReference": "mongodb!UpdateResult:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "update",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "updateMany"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#updateMany:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateMany(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", update: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateFilter",
                  "canonicalReference": "mongodb!UpdateFilter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateOptions",
                  "canonicalReference": "mongodb!UpdateOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UpdateResult",
                  "canonicalReference": "mongodb!UpdateResult:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "update",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "updateMany"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#updateMany:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateMany(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", update: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateFilter",
                  "canonicalReference": "mongodb!UpdateFilter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateOptions",
                  "canonicalReference": "mongodb!UpdateOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UpdateResult",
                  "canonicalReference": "mongodb!UpdateResult:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "update",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 15
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "updateMany"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#updateOne:member(1)",
              "docComment": "/**\n * Update a single document in a collection\n *\n * @param filter - The filter used to select the document to update\n *\n * @param update - The update operations to be applied to the document\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateOne(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", update: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateFilter",
                  "canonicalReference": "mongodb!UpdateFilter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema> | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UpdateResult",
                  "canonicalReference": "mongodb!UpdateResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "update",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "updateOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#updateOne:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateOne(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", update: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateFilter",
                  "canonicalReference": "mongodb!UpdateFilter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema> | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UpdateResult",
                  "canonicalReference": "mongodb!UpdateResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "update",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "updateOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#updateOne:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateOne(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", update: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateFilter",
                  "canonicalReference": "mongodb!UpdateFilter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema> | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateOptions",
                  "canonicalReference": "mongodb!UpdateOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UpdateResult",
                  "canonicalReference": "mongodb!UpdateResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "update",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "updateOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#updateOne:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateOne(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", update: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateFilter",
                  "canonicalReference": "mongodb!UpdateFilter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema> | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateOptions",
                  "canonicalReference": "mongodb!UpdateOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UpdateResult",
                  "canonicalReference": "mongodb!UpdateResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "update",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 15
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "updateOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Collection#watch:member(1)",
              "docComment": "/**\n * Create a new Change Stream, watching for new changes (insertions, updates, replacements, deletions, and invalidations) in this collection.\n *\n * @remarks\n *\n * watch() accepts two generic arguments for distinct usecases: - The first is to override the schema that may be defined for this specific collection - The second is to override the shape of the change stream document entirely, if it is not provided the type will default to ChangeStreamDocument of the first argument\n *\n * @param pipeline - An array of {@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/ | aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n *\n * @param options - Optional settings for the command\n *\n * @typeParam TLocal - Type of the data being detected by the change stream\n *\n * @typeParam TChange - Type of the whole change stream document emitted\n *\n * @example\n *\n * By just providing the first argument I can type the change to be `ChangeStreamDocument<{ _id: number }>`\n * ```ts\n * collection.watch<{ _id: number }>()\n *   .on('change', change => console.log(change._id.toFixed(4)));\n * ```\n *\n * @example\n *\n * Passing a second argument provides a way to reflect the type changes caused by an advanced pipeline. Here, we are using a pipeline to have MongoDB filter for insert changes only and add a comment. No need start from scratch on the ChangeStreamInsertDocument type! By using an intersection we can save time and ensure defaults remain the same type!\n * ```ts\n * collection\n *   .watch<Schema, ChangeStreamInsertDocument<Schema> & { comment: string }>([\n *     { $addFields: { comment: 'big changes' } },\n *     { $match: { operationType: 'insert' } }\n *   ])\n *   .on('change', change => {\n *     change.comment.startsWith('big');\n *     change.operationType === 'insert';\n *     // No need to narrow in code because the generics did that for us!\n *     expectType<Schema>(change.fullDocument);\n *   });\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "watch<TLocal extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Content",
                  "text": "TSchema"
                },
                {
                  "kind": "Content",
                  "text": ", TChange extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Reference",
                  "text": "ChangeStreamDocument",
                  "canonicalReference": "mongodb!ChangeStreamDocument:type"
                },
                {
                  "kind": "Content",
                  "text": "<TLocal>"
                },
                {
                  "kind": "Content",
                  "text": ">(pipeline?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ChangeStreamOptions",
                  "canonicalReference": "mongodb!ChangeStreamOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ChangeStream",
                  "canonicalReference": "mongodb!ChangeStream:class"
                },
                {
                  "kind": "Content",
                  "text": "<TLocal, TChange>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TLocal",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "typeParameterName": "TChange",
                  "constraintTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 11
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 19
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pipeline",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 14
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "watch"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Collection#writeConcern:member",
              "docComment": "/**\n * The current writeConcern of the collection. If not explicitly defined for this collection, will be inherited from the parent DB\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get writeConcern(): "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcern",
                  "canonicalReference": "mongodb!WriteConcern:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "writeConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!CollectionInfo:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CollectionInfo extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CollectionInfo",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollectionInfo#idIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "idIndex?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "idIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollectionInfo#info:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "info?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        readOnly?: false;\n        uuid?: "
                },
                {
                  "kind": "Reference",
                  "text": "Binary",
                  "canonicalReference": "bson!Binary:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "info",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollectionInfo#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollectionInfo#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollectionInfo#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!CollectionOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CollectionOptions extends "
            },
            {
              "kind": "Reference",
              "text": "BSONSerializeOptions",
              "canonicalReference": "mongodb!BSONSerializeOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "WriteConcernOptions",
              "canonicalReference": "mongodb!WriteConcernOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "LoggerOptions",
              "canonicalReference": "mongodb!LoggerOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CollectionOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollectionOptions#readConcern:member",
              "docComment": "/**\n * Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readConcern?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadConcernLike",
                  "canonicalReference": "mongodb!ReadConcernLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollectionOptions#readPreference:member",
              "docComment": "/**\n * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readPreference?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreferenceLike",
                  "canonicalReference": "mongodb!ReadPreferenceLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readPreference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollectionOptions#slaveOk:member",
              "docComment": "/**\n * @deprecated\n *\n * Use readPreference instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "slaveOk?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "slaveOk",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            },
            {
              "startIndex": 5,
              "endIndex": 6
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!CollStats:interface",
          "docComment": "/**\n * @see\n *\n * https://docs.mongodb.org/manual/reference/command/collStats/\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CollStats extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CollStats",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#avgObjSize:member",
              "docComment": "/**\n * Average object size in bytes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "avgObjSize: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "avgObjSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#capped:member",
              "docComment": "/**\n * `true` if the collection is capped\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "capped: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "capped",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#count:member",
              "docComment": "/**\n * Number of documents\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "count: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "count",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#freeStorageSize:member",
              "docComment": "/**\n * The amount of storage available for reuse. The scale argument affects this value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "freeStorageSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "freeStorageSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#indexBuilds:member",
              "docComment": "/**\n * An array that contains the names of the indexes that are currently being built on the collection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexBuilds?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "indexBuilds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#indexDetails:member",
              "docComment": "/**\n * The fields in this document are the names of the indexes, while the values themselves are documents that contain statistics for the index provided by the storage engine\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexDetails?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "indexDetails",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#indexSizes:member",
              "docComment": "/**\n * Size of specific indexes in bytes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexSizes: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        _id_: number;\n        [index: string]: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "indexSizes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#lastExtentSize:member",
              "docComment": "/**\n * Size of the most recently created extent in bytes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lastExtentSize: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lastExtentSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#max:member",
              "docComment": "/**\n * The maximum number of documents that may be present in a capped collection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "max: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "max",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#maxSize:member",
              "docComment": "/**\n * The maximum size of a capped collection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxSize: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#nindexes:member",
              "docComment": "/**\n * Number of indexes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nindexes: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nindexes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#ns:member",
              "docComment": "/**\n * Namespace\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ns: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#numExtents:member",
              "docComment": "/**\n * Number of extents (contiguously allocated chunks of datafile space)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "numExtents: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "numExtents",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#ok:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ok: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ok",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#paddingFactor:member",
              "docComment": "/**\n * Padding can speed up updates if documents grow\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "paddingFactor: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "paddingFactor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#scaleFactor:member",
              "docComment": "/**\n * The scale value used by the command.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scaleFactor: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "scaleFactor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#size:member",
              "docComment": "/**\n * Collection size in bytes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "size: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#storageSize:member",
              "docComment": "/**\n * (Pre)allocated space for the collection in bytes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "storageSize: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "storageSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#totalIndexSize:member",
              "docComment": "/**\n * Total index size in bytes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "totalIndexSize: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "totalIndexSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#totalSize:member",
              "docComment": "/**\n * The sum of the storageSize and totalIndexSize. The scale argument affects this value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "totalSize: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "totalSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#userFlags:member",
              "docComment": "/**\n * A number that indicates the user-set flags on the collection. userFlags only appears when using the mmapv1 storage engine\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userFlags?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "userFlags",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStats#wiredTiger:member",
              "docComment": "/**\n * This document contains data reported directly by the WiredTiger engine and other data for internal diagnostic use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wiredTiger?: "
                },
                {
                  "kind": "Reference",
                  "text": "WiredTigerData",
                  "canonicalReference": "mongodb!WiredTigerData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "wiredTiger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!CollStatsOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CollStatsOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CollStatsOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CollStatsOptions#scale:member",
              "docComment": "/**\n * Divide the returned sizes by scale value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scale?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "scale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!CommandFailedEvent:class",
          "docComment": "/**\n * An event indicating the failure of a given command\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `CommandFailedEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CommandFailedEvent "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandFailedEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandFailedEvent#address:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "address: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandFailedEvent#commandName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "commandName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "commandName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandFailedEvent#connectionId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionId?: "
                },
                {
                  "kind": "Content",
                  "text": "string | number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "connectionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandFailedEvent#duration:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "duration: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "duration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandFailedEvent#failure:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "failure: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "failure",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandFailedEvent#hasServiceId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hasServiceId(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hasServiceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandFailedEvent#requestId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requestId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "requestId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandFailedEvent#serviceId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serviceId?: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "serviceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!CommandOperationOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommandOperationOptions extends "
            },
            {
              "kind": "Reference",
              "text": "OperationOptions",
              "canonicalReference": "mongodb!OperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "WriteConcernOptions",
              "canonicalReference": "mongodb!WriteConcernOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ExplainOptions",
              "canonicalReference": "mongodb!ExplainOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandOperationOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CommandOperationOptions#authdb:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authdb?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "authdb",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CommandOperationOptions#collation:member",
              "docComment": "/**\n * Collation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collation?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollationOptions",
                  "canonicalReference": "mongodb!CollationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CommandOperationOptions#comment:member",
              "docComment": "/**\n * Comment to apply to the operation.\n *\n * In server versions pre-4.4, 'comment' must be string. A server error will be thrown if any other type is provided.\n *\n * In server versions 4.4 and above, 'comment' can be any valid BSON type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "comment?: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "comment",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CommandOperationOptions#dbName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dbName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "dbName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CommandOperationOptions#fullResponse:member",
              "docComment": "/**\n * @deprecated\n *\n * This option does nothing\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fullResponse?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fullResponse",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CommandOperationOptions#maxTimeMS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxTimeMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxTimeMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CommandOperationOptions#noResponse:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "noResponse?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "noResponse",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CommandOperationOptions#readConcern:member",
              "docComment": "/**\n * Specify a read concern and level for the collection. (only MongoDB 3.2 or higher supported)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readConcern?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadConcernLike",
                  "canonicalReference": "mongodb!ReadConcernLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CommandOperationOptions#retryWrites:member",
              "docComment": "/**\n * Should retry failed writes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retryWrites?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "retryWrites",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            },
            {
              "startIndex": 5,
              "endIndex": 6
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!CommandStartedEvent:class",
          "docComment": "/**\n * An event indicating the start of a given\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `CommandStartedEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CommandStartedEvent "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandStartedEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandStartedEvent#address:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "address: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandStartedEvent#command:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "command: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "command",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandStartedEvent#commandName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "commandName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "commandName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandStartedEvent#commandObj:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "commandObj?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "commandObj",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandStartedEvent#connectionId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionId?: "
                },
                {
                  "kind": "Content",
                  "text": "string | number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "connectionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandStartedEvent#databaseName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "databaseName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "databaseName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandStartedEvent#hasServiceId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hasServiceId(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hasServiceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandStartedEvent#requestId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requestId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "requestId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandStartedEvent#serviceId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serviceId?: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "serviceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!CommandSucceededEvent:class",
          "docComment": "/**\n * An event indicating the success of a given command\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `CommandSucceededEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CommandSucceededEvent "
            }
          ],
          "releaseTag": "Public",
          "name": "CommandSucceededEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandSucceededEvent#address:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "address: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandSucceededEvent#commandName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "commandName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "commandName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandSucceededEvent#connectionId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionId?: "
                },
                {
                  "kind": "Content",
                  "text": "string | number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "connectionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandSucceededEvent#duration:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "duration: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "duration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandSucceededEvent#hasServiceId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hasServiceId(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hasServiceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandSucceededEvent#reply:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reply: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reply",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandSucceededEvent#requestId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requestId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "requestId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!CommandSucceededEvent#serviceId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serviceId?: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "serviceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!CommonEvents:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CommonEvents = "
            },
            {
              "kind": "Content",
              "text": "'newListener' | 'removeListener'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CommonEvents",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!Compressor:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Compressor = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "Compressor",
              "canonicalReference": "mongodb!Compressor:var"
            },
            {
              "kind": "Content",
              "text": "["
            },
            {
              "kind": "Reference",
              "text": "CompressorName",
              "canonicalReference": "mongodb!CompressorName:type"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Compressor",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!Compressor:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Compressor: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    readonly none: 0;\n    readonly snappy: 1;\n    readonly zlib: 2;\n    readonly zstd: 3;\n}>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Compressor",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!CompressorName:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CompressorName = "
            },
            {
              "kind": "Content",
              "text": "keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "Compressor",
              "canonicalReference": "mongodb!Compressor:var"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CompressorName",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!Condition:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Condition<T> = "
            },
            {
              "kind": "Reference",
              "text": "AlternativeType",
              "canonicalReference": "mongodb!AlternativeType:type"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "FilterOperators",
              "canonicalReference": "mongodb!FilterOperators:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "AlternativeType",
              "canonicalReference": "mongodb!AlternativeType:type"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Condition",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ConnectionCheckedInEvent:class",
          "docComment": "/**\n * An event published when a connection is checked into the connection pool\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ConnectionCheckedInEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ConnectionCheckedInEvent extends "
            },
            {
              "kind": "Reference",
              "text": "ConnectionPoolMonitoringEvent",
              "canonicalReference": "mongodb!ConnectionPoolMonitoringEvent:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionCheckedInEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ConnectionCheckedInEvent#connectionId:member",
              "docComment": "/**\n * The id of the connection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionId: "
                },
                {
                  "kind": "Content",
                  "text": "number | '<monitor>'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connectionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ConnectionCheckedOutEvent:class",
          "docComment": "/**\n * An event published when a connection is checked out of the connection pool\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ConnectionCheckedOutEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ConnectionCheckedOutEvent extends "
            },
            {
              "kind": "Reference",
              "text": "ConnectionPoolMonitoringEvent",
              "canonicalReference": "mongodb!ConnectionPoolMonitoringEvent:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionCheckedOutEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ConnectionCheckedOutEvent#connectionId:member",
              "docComment": "/**\n * The id of the connection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionId: "
                },
                {
                  "kind": "Content",
                  "text": "number | '<monitor>'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connectionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ConnectionCheckOutFailedEvent:class",
          "docComment": "/**\n * An event published when a request to check a connection out fails\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ConnectionCheckOutFailedEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ConnectionCheckOutFailedEvent extends "
            },
            {
              "kind": "Reference",
              "text": "ConnectionPoolMonitoringEvent",
              "canonicalReference": "mongodb!ConnectionPoolMonitoringEvent:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionCheckOutFailedEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ConnectionCheckOutFailedEvent#reason:member",
              "docComment": "/**\n * The reason the attempt to check out failed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reason: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyError",
                  "canonicalReference": "mongodb!AnyError:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reason",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ConnectionCheckOutStartedEvent:class",
          "docComment": "/**\n * An event published when a request to check a connection out begins\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ConnectionCheckOutStartedEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ConnectionCheckOutStartedEvent extends "
            },
            {
              "kind": "Reference",
              "text": "ConnectionPoolMonitoringEvent",
              "canonicalReference": "mongodb!ConnectionPoolMonitoringEvent:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionCheckOutStartedEvent",
          "members": [],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ConnectionClosedEvent:class",
          "docComment": "/**\n * An event published when a connection is closed\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ConnectionClosedEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ConnectionClosedEvent extends "
            },
            {
              "kind": "Reference",
              "text": "ConnectionPoolMonitoringEvent",
              "canonicalReference": "mongodb!ConnectionPoolMonitoringEvent:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionClosedEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ConnectionClosedEvent#connectionId:member",
              "docComment": "/**\n * The id of the connection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionId: "
                },
                {
                  "kind": "Content",
                  "text": "number | '<monitor>'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connectionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ConnectionClosedEvent#reason:member",
              "docComment": "/**\n * The reason the connection was closed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reason: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reason",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ConnectionClosedEvent#serviceId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serviceId?: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "serviceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ConnectionCreatedEvent:class",
          "docComment": "/**\n * An event published when a connection pool creates a new connection\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ConnectionCreatedEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ConnectionCreatedEvent extends "
            },
            {
              "kind": "Reference",
              "text": "ConnectionPoolMonitoringEvent",
              "canonicalReference": "mongodb!ConnectionPoolMonitoringEvent:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionCreatedEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ConnectionCreatedEvent#connectionId:member",
              "docComment": "/**\n * A monotonically increasing, per-pool id for the newly created connection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionId: "
                },
                {
                  "kind": "Content",
                  "text": "number | '<monitor>'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connectionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ConnectionEvents:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ConnectionEvents = "
            },
            {
              "kind": "Content",
              "text": "{\n    commandStarted(event: "
            },
            {
              "kind": "Reference",
              "text": "CommandStartedEvent",
              "canonicalReference": "mongodb!CommandStartedEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    commandSucceeded(event: "
            },
            {
              "kind": "Reference",
              "text": "CommandSucceededEvent",
              "canonicalReference": "mongodb!CommandSucceededEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    commandFailed(event: "
            },
            {
              "kind": "Reference",
              "text": "CommandFailedEvent",
              "canonicalReference": "mongodb!CommandFailedEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    clusterTimeReceived(clusterTime: "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "): void;\n    close(): void;\n    message(message: any): void;\n    pinned(pinType: string): void;\n    unpinned(pinType: string): void;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionEvents",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ConnectionOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ConnectionOptions extends "
            },
            {
              "kind": "Reference",
              "text": "SupportedNodeConnectionOptions",
              "canonicalReference": "mongodb!SupportedNodeConnectionOptions:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "StreamDescriptionOptions",
              "canonicalReference": "mongodb!StreamDescriptionOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ProxyOptions",
              "canonicalReference": "mongodb!ProxyOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionOptions#autoEncrypter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "autoEncrypter?: "
                },
                {
                  "kind": "Reference",
                  "text": "AutoEncrypter",
                  "canonicalReference": "mongodb!AutoEncrypter:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "autoEncrypter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionOptions#cancellationToken:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cancellationToken?: "
                },
                {
                  "kind": "Reference",
                  "text": "CancellationToken",
                  "canonicalReference": "mongodb!CancellationToken:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "cancellationToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionOptions#connectTimeoutMS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectTimeoutMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "connectTimeoutMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionOptions#credentials:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "credentials?: "
                },
                {
                  "kind": "Reference",
                  "text": "MongoCredentials",
                  "canonicalReference": "mongodb!MongoCredentials:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "credentials",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionOptions#generation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "generation: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "generation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionOptions#hostAddress:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hostAddress: "
                },
                {
                  "kind": "Reference",
                  "text": "HostAddress",
                  "canonicalReference": "mongodb!HostAddress:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hostAddress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionOptions#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number | '<monitor>'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionOptions#keepAlive:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keepAlive?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "keepAlive",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionOptions#keepAliveInitialDelay:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keepAliveInitialDelay?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "keepAliveInitialDelay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionOptions#metadata:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientMetadata",
                  "canonicalReference": "mongodb!ClientMetadata:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionOptions#monitorCommands:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "monitorCommands: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "monitorCommands",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionOptions#noDelay:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "noDelay?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "noDelay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionOptions#serverApi:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverApi?: "
                },
                {
                  "kind": "Reference",
                  "text": "ServerApi",
                  "canonicalReference": "mongodb!ServerApi:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "serverApi",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionOptions#socketTimeoutMS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "socketTimeoutMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "socketTimeoutMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionOptions#tls:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tls: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tls",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            },
            {
              "startIndex": 5,
              "endIndex": 6
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ConnectionPoolClearedEvent:class",
          "docComment": "/**\n * An event published when a connection pool is cleared\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ConnectionPoolClearedEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ConnectionPoolClearedEvent extends "
            },
            {
              "kind": "Reference",
              "text": "ConnectionPoolMonitoringEvent",
              "canonicalReference": "mongodb!ConnectionPoolMonitoringEvent:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionPoolClearedEvent",
          "members": [],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ConnectionPoolClosedEvent:class",
          "docComment": "/**\n * An event published when a connection pool is closed\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ConnectionPoolClosedEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ConnectionPoolClosedEvent extends "
            },
            {
              "kind": "Reference",
              "text": "ConnectionPoolMonitoringEvent",
              "canonicalReference": "mongodb!ConnectionPoolMonitoringEvent:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionPoolClosedEvent",
          "members": [],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ConnectionPoolCreatedEvent:class",
          "docComment": "/**\n * An event published when a connection pool is created\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ConnectionPoolCreatedEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ConnectionPoolCreatedEvent extends "
            },
            {
              "kind": "Reference",
              "text": "ConnectionPoolMonitoringEvent",
              "canonicalReference": "mongodb!ConnectionPoolMonitoringEvent:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionPoolCreatedEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ConnectionPoolCreatedEvent#options:member",
              "docComment": "/**\n * The options used to create this connection pool\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ConnectionPoolOptions",
                  "canonicalReference": "mongodb!ConnectionPoolOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ConnectionPoolEvents:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ConnectionPoolEvents = "
            },
            {
              "kind": "Content",
              "text": "{\n    connectionPoolCreated(event: "
            },
            {
              "kind": "Reference",
              "text": "ConnectionPoolCreatedEvent",
              "canonicalReference": "mongodb!ConnectionPoolCreatedEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    connectionPoolClosed(event: "
            },
            {
              "kind": "Reference",
              "text": "ConnectionPoolClosedEvent",
              "canonicalReference": "mongodb!ConnectionPoolClosedEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    connectionPoolCleared(event: "
            },
            {
              "kind": "Reference",
              "text": "ConnectionPoolClearedEvent",
              "canonicalReference": "mongodb!ConnectionPoolClearedEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    connectionCreated(event: "
            },
            {
              "kind": "Reference",
              "text": "ConnectionCreatedEvent",
              "canonicalReference": "mongodb!ConnectionCreatedEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    connectionReady(event: "
            },
            {
              "kind": "Reference",
              "text": "ConnectionReadyEvent",
              "canonicalReference": "mongodb!ConnectionReadyEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    connectionClosed(event: "
            },
            {
              "kind": "Reference",
              "text": "ConnectionClosedEvent",
              "canonicalReference": "mongodb!ConnectionClosedEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    connectionCheckOutStarted(event: "
            },
            {
              "kind": "Reference",
              "text": "ConnectionCheckOutStartedEvent",
              "canonicalReference": "mongodb!ConnectionCheckOutStartedEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    connectionCheckOutFailed(event: "
            },
            {
              "kind": "Reference",
              "text": "ConnectionCheckOutFailedEvent",
              "canonicalReference": "mongodb!ConnectionCheckOutFailedEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    connectionCheckedOut(event: "
            },
            {
              "kind": "Reference",
              "text": "ConnectionCheckedOutEvent",
              "canonicalReference": "mongodb!ConnectionCheckedOutEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    connectionCheckedIn(event: "
            },
            {
              "kind": "Reference",
              "text": "ConnectionCheckedInEvent",
              "canonicalReference": "mongodb!ConnectionCheckedInEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n} & "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ConnectionEvents",
              "canonicalReference": "mongodb!ConnectionEvents:type"
            },
            {
              "kind": "Content",
              "text": ", 'close' | 'message'>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionPoolEvents",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 26
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ConnectionPoolMonitoringEvent:class",
          "docComment": "/**\n * The base export class for all monitoring events published from the connection pool\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ConnectionPoolMonitoringEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ConnectionPoolMonitoringEvent "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionPoolMonitoringEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ConnectionPoolMonitoringEvent#address:member",
              "docComment": "/**\n * The address (host/port pair) of the pool\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "address: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ConnectionPoolMonitoringEvent#time:member",
              "docComment": "/**\n * A timestamp when the event was created\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "time: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "time",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ConnectionPoolOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ConnectionPoolOptions extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ConnectionOptions",
              "canonicalReference": "mongodb!ConnectionOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", 'id' | 'generation'> "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionPoolOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionPoolOptions#loadBalanced:member",
              "docComment": "/**\n * If we are in load balancer mode.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadBalanced: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "loadBalanced",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionPoolOptions#maxConnecting:member",
              "docComment": "/**\n * The maximum number of connections that may be in the process of being established concurrently by the connection pool.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxConnecting: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxConnecting",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionPoolOptions#maxIdleTimeMS:member",
              "docComment": "/**\n * The maximum amount of time a connection should remain idle in the connection pool before being marked idle.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxIdleTimeMS: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxIdleTimeMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionPoolOptions#maxPoolSize:member",
              "docComment": "/**\n * The maximum number of connections that may be associated with a pool at a given time. This includes in use and available connections.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxPoolSize: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxPoolSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionPoolOptions#minPoolSize:member",
              "docComment": "/**\n * The minimum number of connections that MUST exist at any moment in a single connection pool.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minPoolSize: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "minPoolSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectionPoolOptions#waitQueueTimeoutMS:member",
              "docComment": "/**\n * The maximum amount of time operation execution should wait for a connection to become available. The default is 0 which means there is no limit.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "waitQueueTimeoutMS: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "waitQueueTimeoutMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ConnectionReadyEvent:class",
          "docComment": "/**\n * An event published when a connection is ready for use\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ConnectionReadyEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ConnectionReadyEvent extends "
            },
            {
              "kind": "Reference",
              "text": "ConnectionPoolMonitoringEvent",
              "canonicalReference": "mongodb!ConnectionPoolMonitoringEvent:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionReadyEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ConnectionReadyEvent#connectionId:member",
              "docComment": "/**\n * The id of the connection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionId: "
                },
                {
                  "kind": "Content",
                  "text": "number | '<monitor>'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connectionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ConnectOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ConnectOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ConnectOptions#readPreference:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readPreference?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readPreference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!CountDocumentsOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CountDocumentsOptions extends "
            },
            {
              "kind": "Reference",
              "text": "AggregateOptions",
              "canonicalReference": "mongodb!AggregateOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CountDocumentsOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CountDocumentsOptions#limit:member",
              "docComment": "/**\n * The maximum amounts to count before aborting.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "limit?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "limit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CountDocumentsOptions#skip:member",
              "docComment": "/**\n * The number of documents to skip.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "skip?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "skip",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!CountOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CountOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CountOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CountOptions#hint:member",
              "docComment": "/**\n * An index name hint for the query.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hint?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CountOptions#limit:member",
              "docComment": "/**\n * The maximum amounts to count before aborting.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "limit?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "limit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CountOptions#maxTimeMS:member",
              "docComment": "/**\n * Number of milliseconds to wait before aborting the query.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxTimeMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxTimeMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CountOptions#skip:member",
              "docComment": "/**\n * The number of documents to skip.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "skip?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "skip",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!CreateCollectionOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CreateCollectionOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CreateCollectionOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#autoIndexId:member",
              "docComment": "/**\n * @deprecated\n *\n * Create an index on the _id field of the document, True by default on MongoDB 2.6 - 3.0\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "autoIndexId?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "autoIndexId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#capped:member",
              "docComment": "/**\n * Create a capped collection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "capped?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "capped",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#changeStreamPreAndPostImages:member",
              "docComment": "/**\n * If set, enables pre-update and post-update document events to be included for any change streams that listen on this collection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "changeStreamPreAndPostImages?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        enabled: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "changeStreamPreAndPostImages",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#clusteredIndex:member",
              "docComment": "/**\n * A document specifying configuration options for clustered collections. For MongoDB 5.3 and above.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clusteredIndex?: "
                },
                {
                  "kind": "Reference",
                  "text": "ClusteredCollectionOptions",
                  "canonicalReference": "mongodb!ClusteredCollectionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "clusteredIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#encryptedFields:member",
              "docComment": "/**\n * @experimental\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "encryptedFields?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "encryptedFields",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#expireAfterSeconds:member",
              "docComment": "/**\n * The number of seconds after which a document in a timeseries or clustered collection expires.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expireAfterSeconds?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "expireAfterSeconds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#flags:member",
              "docComment": "/**\n * Available for the MMAPv1 storage engine only to set the usePowerOf2Sizes and the noPadding flag\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "flags?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "flags",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#indexOptionDefaults:member",
              "docComment": "/**\n * Allows users to specify a default configuration for indexes when creating a collection on MongoDB 3.2 or higher\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexOptionDefaults?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "indexOptionDefaults",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#max:member",
              "docComment": "/**\n * The maximum number of documents in the capped collection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "max?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "max",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#pipeline:member",
              "docComment": "/**\n * An array that consists of the aggregation pipeline stage. Creates the view by applying the specified pipeline to the viewOn collection or view on MongoDB 3.4 or higher\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pipeline?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pipeline",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#pkFactory:member",
              "docComment": "/**\n * A primary key factory function for generation of custom _id keys.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pkFactory?: "
                },
                {
                  "kind": "Reference",
                  "text": "PkFactory",
                  "canonicalReference": "mongodb!PkFactory:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pkFactory",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#size:member",
              "docComment": "/**\n * The size of the capped collection in bytes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "size?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#storageEngine:member",
              "docComment": "/**\n * Allows users to specify configuration to the storage engine on a per-collection basis when creating a collection on MongoDB 3.0 or higher\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "storageEngine?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "storageEngine",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#strict:member",
              "docComment": "/**\n * Returns an error if the collection does not exist\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "strict?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "strict",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#timeseries:member",
              "docComment": "/**\n * A document specifying configuration options for timeseries collections.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timeseries?: "
                },
                {
                  "kind": "Reference",
                  "text": "TimeSeriesCollectionOptions",
                  "canonicalReference": "mongodb!TimeSeriesCollectionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "timeseries",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#validationAction:member",
              "docComment": "/**\n * Determines whether to error on invalid documents or just warn about the violations but allow invalid documents to be inserted on MongoDB 3.2 or higher\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "validationAction?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "validationAction",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#validationLevel:member",
              "docComment": "/**\n * Determines how strictly MongoDB applies the validation rules to existing documents during an update on MongoDB 3.2 or higher\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "validationLevel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "validationLevel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#validator:member",
              "docComment": "/**\n * Allows users to specify validation rules or expressions for the collection. For more information, see Document Validation on MongoDB 3.2 or higher\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "validator?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "validator",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateCollectionOptions#viewOn:member",
              "docComment": "/**\n * The name of the source collection or view from which to create the view. The name is not the full namespace of the collection or view; i.e. does not include the database name and implies the same database as the view to create on MongoDB 3.4 or higher\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "viewOn?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "viewOn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!CreateIndexesOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CreateIndexesOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CreateIndexesOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#\"2dsphereIndexVersion\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "'2dsphereIndexVersion'?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "\"2dsphereIndexVersion\"",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#background:member",
              "docComment": "/**\n * Creates the index in the background, yielding whenever possible.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "background?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "background",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#bits:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bits?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bits",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#bucketSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bucketSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bucketSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#commitQuorum:member",
              "docComment": "/**\n * (MongoDB 4.4. or higher) Specifies how many data-bearing members of a replica set, including the primary, must complete the index builds successfully before the primary marks the indexes as ready. This option accepts the same values for the \"w\" field in a write concern plus \"votingMembers\", which indicates all voting data-bearing nodes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "commitQuorum?: "
                },
                {
                  "kind": "Content",
                  "text": "number | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "commitQuorum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#default_language:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "default_language?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "default_language",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#expireAfterSeconds:member",
              "docComment": "/**\n * Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expireAfterSeconds?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "expireAfterSeconds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#hidden:member",
              "docComment": "/**\n * Specifies that the index should exist on the target collection but should not be used by the query planner when executing operations. (MongoDB 4.4 or higher)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hidden?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hidden",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#language_override:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "language_override?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "language_override",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#max:member",
              "docComment": "/**\n * For geospatial indexes set the high bound for the co-ordinates.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "max?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "max",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#min:member",
              "docComment": "/**\n * For geospatial indexes set the lower bound for the co-ordinates.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "min?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "min",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#name:member",
              "docComment": "/**\n * Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#partialFilterExpression:member",
              "docComment": "/**\n * Creates a partial index based on the given filter object (MongoDB 3.2 or higher)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "partialFilterExpression?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "partialFilterExpression",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#sparse:member",
              "docComment": "/**\n * Creates a sparse index.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sparse?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sparse",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#storageEngine:member",
              "docComment": "/**\n * Allows users to configure the storage engine on a per-index basis when creating an index. (MongoDB 3.0 or higher)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "storageEngine?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "storageEngine",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#textIndexVersion:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "textIndexVersion?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "textIndexVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#unique:member",
              "docComment": "/**\n * Creates an unique index.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unique?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "unique",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#version:member",
              "docComment": "/**\n * Specifies the index version number, either 0 or 1.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#weights:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "weights?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "weights",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CreateIndexesOptions#wildcardProjection:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wildcardProjection?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "wildcardProjection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!CURSOR_FLAGS:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "CURSOR_FLAGS: "
            },
            {
              "kind": "Content",
              "text": "readonly [\"tailable\", \"oplogReplay\", \"noCursorTimeout\", \"awaitData\", \"exhaust\", \"partial\"]"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "CURSOR_FLAGS",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!CursorCloseOptions:interface",
          "docComment": "/**\n * @deprecated\n *\n * This interface is deprecated\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CursorCloseOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "CursorCloseOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!CursorCloseOptions#skipKillCursors:member",
              "docComment": "/**\n * @deprecated\n *\n * the skipKillCursors option is deprecated\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "skipKillCursors?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "skipKillCursors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!CursorFlag:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CursorFlag = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "CURSOR_FLAGS",
              "canonicalReference": "mongodb!CURSOR_FLAGS:var"
            },
            {
              "kind": "Content",
              "text": "[number]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CursorFlag",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!CursorStreamOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CursorStreamOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "CursorStreamOptions",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!CursorStreamOptions#transform:member(1)",
              "docComment": "/**\n * A transformation method applied to each document emitted by the stream\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transform?(doc: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "doc",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "transform"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!Db:class",
          "docComment": "/**\n * The **Db** class is a class that represents a MongoDB Database.\n *\n * @example\n * ```js\n * const { MongoClient } = require('mongodb');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Select the database by name\n *   const testDb = client.db(dbName);\n *   client.close();\n * });\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Db "
            }
          ],
          "releaseTag": "Public",
          "name": "Db",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!Db:constructor(1)",
              "docComment": "/**\n * Creates a new Db instance\n *\n * @param client - The MongoClient for the database.\n *\n * @param databaseName - The name of the database this instance represents.\n *\n * @param options - Optional settings for Db construction\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(client: "
                },
                {
                  "kind": "Reference",
                  "text": "MongoClient",
                  "canonicalReference": "mongodb!MongoClient:class"
                },
                {
                  "kind": "Content",
                  "text": ", databaseName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "DbOptions",
                  "canonicalReference": "mongodb!DbOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "client",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "databaseName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#addUser:member(1)",
              "docComment": "/**\n * Add a user to the database\n *\n * @param username - The username for the new user\n *\n * @param password - An optional password for the new user\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#addUser:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#addUser:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", password: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "password",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#addUser:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", password: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "password",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#addUser:member(5)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "AddUserOptions",
                  "canonicalReference": "mongodb!AddUserOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 5,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#addUser:member(6)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "AddUserOptions",
                  "canonicalReference": "mongodb!AddUserOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 6,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#addUser:member(7)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", password: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "AddUserOptions",
                  "canonicalReference": "mongodb!AddUserOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 7,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "password",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#addUser:member(8)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", password: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "AddUserOptions",
                  "canonicalReference": "mongodb!AddUserOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 8,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "password",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#admin:member(1)",
              "docComment": "/**\n * Return the Admin db instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "admin(): "
                },
                {
                  "kind": "Reference",
                  "text": "Admin",
                  "canonicalReference": "mongodb!Admin:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "admin"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#aggregate:member(1)",
              "docComment": "/**\n * Execute an aggregation framework pipeline against the database, needs MongoDB \\>= 3.6\n *\n * @param pipeline - An array of aggregation stages to be executed\n *\n * @param options - Optional settings for the command\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "aggregate<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(pipeline?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AggregateOptions",
                  "canonicalReference": "mongodb!AggregateOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AggregationCursor",
                  "canonicalReference": "mongodb!AggregationCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pipeline",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "aggregate"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Db#bsonOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get bsonOptions(): "
                },
                {
                  "kind": "Reference",
                  "text": "BSONSerializeOptions",
                  "canonicalReference": "mongodb!BSONSerializeOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bsonOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#collection:member(1)",
              "docComment": "/**\n * Returns a reference to a MongoDB Collection. If it does not exist it will be created implicitly.\n *\n * @param name - the collection name we wish to access.\n *\n * @returns return the new Collection instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collection<TSchema extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollectionOptions",
                  "canonicalReference": "mongodb!CollectionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TSchema",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "collection"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#collections:member(1)",
              "docComment": "/**\n * Fetch all collections for the current db.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collections(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "collections"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#collections:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collections(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "collections"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#collections:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collections(options: "
                },
                {
                  "kind": "Reference",
                  "text": "ListCollectionsOptions",
                  "canonicalReference": "mongodb!ListCollectionsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "collections"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#collections:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collections(options: "
                },
                {
                  "kind": "Reference",
                  "text": "ListCollectionsOptions",
                  "canonicalReference": "mongodb!ListCollectionsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "collections"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#command:member(1)",
              "docComment": "/**\n * Execute a command\n *\n * @remarks\n *\n * This command does not inherit options from the MongoClient.\n *\n * @param command - The command to run\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "command(command: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "command",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "command"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#command:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "command(command: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "command",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "command"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#command:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "command(command: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "RunCommandOptions",
                  "canonicalReference": "mongodb!RunCommandOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "command",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "command"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#command:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "command(command: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "RunCommandOptions",
                  "canonicalReference": "mongodb!RunCommandOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "command",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "command"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#createCollection:member(1)",
              "docComment": "/**\n * Create a new collection on a server with the specified options. Use this to create capped collections. More information about command options available at https://docs.mongodb.com/manual/reference/command/create/\n *\n * @param name - The name of the collection to create\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createCollection<TSchema extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "CreateCollectionOptions",
                  "canonicalReference": "mongodb!CreateCollectionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TSchema",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "createCollection"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#createCollection:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createCollection<TSchema extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TSchema",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 12
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "createCollection"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#createCollection:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createCollection<TSchema extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "CreateCollectionOptions",
                  "canonicalReference": "mongodb!CreateCollectionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TSchema",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 15
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "createCollection"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#createIndex:member(1)",
              "docComment": "/**\n * Creates an index on the db and collection.\n *\n * @param name - Name of the collection to create the index on.\n *\n * @param indexSpec - Specify the field to index, or an index specification\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createIndex(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", indexSpec: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexSpecification",
                  "canonicalReference": "mongodb!IndexSpecification:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "indexSpec",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "createIndex"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#createIndex:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createIndex(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", indexSpec: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexSpecification",
                  "canonicalReference": "mongodb!IndexSpecification:type"
                },
                {
                  "kind": "Content",
                  "text": ", callback?: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "indexSpec",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "createIndex"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#createIndex:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createIndex(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", indexSpec: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexSpecification",
                  "canonicalReference": "mongodb!IndexSpecification:type"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "CreateIndexesOptions",
                  "canonicalReference": "mongodb!CreateIndexesOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "indexSpec",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "createIndex"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#createIndex:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createIndex(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", indexSpec: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexSpecification",
                  "canonicalReference": "mongodb!IndexSpecification:type"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "CreateIndexesOptions",
                  "canonicalReference": "mongodb!CreateIndexesOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "indexSpec",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "createIndex"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Db#databaseName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get databaseName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "databaseName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#dropCollection:member(1)",
              "docComment": "/**\n * Drop a collection from the database, removing it permanently. New accesses will create a new collection.\n *\n * @param name - Name of collection to drop\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropCollection(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "dropCollection"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#dropCollection:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropCollection(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "dropCollection"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#dropCollection:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropCollection(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "DropCollectionOptions",
                  "canonicalReference": "mongodb!DropCollectionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "dropCollection"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#dropCollection:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropCollection(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "DropCollectionOptions",
                  "canonicalReference": "mongodb!DropCollectionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "dropCollection"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#dropDatabase:member(1)",
              "docComment": "/**\n * Drop a database, removing it permanently from the server.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropDatabase(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "dropDatabase"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#dropDatabase:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropDatabase(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "dropDatabase"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#dropDatabase:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropDatabase(options: "
                },
                {
                  "kind": "Reference",
                  "text": "DropDatabaseOptions",
                  "canonicalReference": "mongodb!DropDatabaseOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "dropDatabase"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#dropDatabase:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropDatabase(options: "
                },
                {
                  "kind": "Reference",
                  "text": "DropDatabaseOptions",
                  "canonicalReference": "mongodb!DropDatabaseOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "dropDatabase"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#getLogger:member(1)",
              "docComment": "/**\n * Return the db logger\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLogger(): "
                },
                {
                  "kind": "Reference",
                  "text": "Logger",
                  "canonicalReference": "mongodb!Logger:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getLogger"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#indexInformation:member(1)",
              "docComment": "/**\n * Retrieves this collections index info.\n *\n * @param name - The name of the collection.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexInformation(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "indexInformation"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#indexInformation:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexInformation(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "indexInformation"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#indexInformation:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexInformation(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexInformationOptions",
                  "canonicalReference": "mongodb!IndexInformationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "indexInformation"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#indexInformation:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexInformation(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexInformationOptions",
                  "canonicalReference": "mongodb!IndexInformationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "indexInformation"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#listCollections:member(1)",
              "docComment": "/**\n * List all collections of this database with optional filter\n *\n * @param filter - Query to filter collections by\n *\n * @param options - Optional settings for the command\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listCollections(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ListCollectionsOptions",
                  "canonicalReference": "mongodb!ListCollectionsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'nameOnly'> & {\n        nameOnly: true;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ListCollectionsCursor",
                  "canonicalReference": "mongodb!ListCollectionsCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CollectionInfo",
                  "canonicalReference": "mongodb!CollectionInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'name' | 'type'>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "listCollections"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#listCollections:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listCollections(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ListCollectionsOptions",
                  "canonicalReference": "mongodb!ListCollectionsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'nameOnly'> & {\n        nameOnly: false;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ListCollectionsCursor",
                  "canonicalReference": "mongodb!ListCollectionsCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CollectionInfo",
                  "canonicalReference": "mongodb!CollectionInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "listCollections"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#listCollections:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listCollections<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CollectionInfo",
                  "canonicalReference": "mongodb!CollectionInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'name' | 'type'> | "
                },
                {
                  "kind": "Reference",
                  "text": "CollectionInfo",
                  "canonicalReference": "mongodb!CollectionInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CollectionInfo",
                  "canonicalReference": "mongodb!CollectionInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'name' | 'type'> | "
                },
                {
                  "kind": "Reference",
                  "text": "CollectionInfo",
                  "canonicalReference": "mongodb!CollectionInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(filter?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ListCollectionsOptions",
                  "canonicalReference": "mongodb!ListCollectionsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ListCollectionsCursor",
                  "canonicalReference": "mongodb!ListCollectionsCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 13
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 18,
                "endIndex": 20
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 14,
                    "endIndex": 15
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 16,
                    "endIndex": 17
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "listCollections"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Db#logger:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get logger(): "
                },
                {
                  "kind": "Reference",
                  "text": "Logger",
                  "canonicalReference": "mongodb!Logger:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "logger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Db#namespace:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get namespace(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "namespace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Db#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get options(): "
                },
                {
                  "kind": "Reference",
                  "text": "DbOptions",
                  "canonicalReference": "mongodb!DbOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#profilingLevel:member(1)",
              "docComment": "/**\n * Retrieve the current profiling Level for MongoDB\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "profilingLevel(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "profilingLevel"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#profilingLevel:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "profilingLevel(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "profilingLevel"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#profilingLevel:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "profilingLevel(options: "
                },
                {
                  "kind": "Reference",
                  "text": "ProfilingLevelOptions",
                  "canonicalReference": "mongodb!ProfilingLevelOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "profilingLevel"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#profilingLevel:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "profilingLevel(options: "
                },
                {
                  "kind": "Reference",
                  "text": "ProfilingLevelOptions",
                  "canonicalReference": "mongodb!ProfilingLevelOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "profilingLevel"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Db#readConcern:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get readConcern(): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadConcern",
                  "canonicalReference": "mongodb!ReadConcern:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Db#readPreference:member",
              "docComment": "/**\n * The current readPreference of the Db. If not explicitly defined for this Db, will be inherited from the parent MongoClient\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get readPreference(): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readPreference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#removeUser:member(1)",
              "docComment": "/**\n * Remove a user from a database\n *\n * @param username - The username to remove\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "removeUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#removeUser:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "removeUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#removeUser:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "RemoveUserOptions",
                  "canonicalReference": "mongodb!RemoveUserOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "removeUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#removeUser:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeUser(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "RemoveUserOptions",
                  "canonicalReference": "mongodb!RemoveUserOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "removeUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#renameCollection:member(1)",
              "docComment": "/**\n * Rename a collection.\n *\n * @remarks\n *\n * This operation does not inherit options from the MongoClient.\n *\n * @param fromCollection - Name of current collection to rename\n *\n * @param toCollection - New name of of the collection\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "renameCollection<TSchema extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(fromCollection: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", toCollection: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TSchema",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fromCollection",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "toCollection",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "renameCollection"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#renameCollection:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "renameCollection<TSchema extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(fromCollection: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", toCollection: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TSchema",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fromCollection",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "toCollection",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 14
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "renameCollection"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#renameCollection:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "renameCollection<TSchema extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(fromCollection: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", toCollection: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "RenameOptions",
                  "canonicalReference": "mongodb!RenameOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TSchema",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "fromCollection",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "toCollection",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "renameCollection"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#renameCollection:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "renameCollection<TSchema extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(fromCollection: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", toCollection: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "RenameOptions",
                  "canonicalReference": "mongodb!RenameOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TSchema",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "fromCollection",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "toCollection",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "renameCollection"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Db#secondaryOk:member",
              "docComment": "/**\n * Check if a secondary can be used (because the read preference is *not* set to primary)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get secondaryOk(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "secondaryOk",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#setProfilingLevel:member(1)",
              "docComment": "/**\n * Set the current profiling level of MongoDB\n *\n * @param level - The new profiling level (off, slow_only, all).\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setProfilingLevel(level: "
                },
                {
                  "kind": "Reference",
                  "text": "ProfilingLevel",
                  "canonicalReference": "mongodb!ProfilingLevel:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ProfilingLevel",
                  "canonicalReference": "mongodb!ProfilingLevel:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setProfilingLevel"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#setProfilingLevel:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setProfilingLevel(level: "
                },
                {
                  "kind": "Reference",
                  "text": "ProfilingLevel",
                  "canonicalReference": "mongodb!ProfilingLevel:type"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ProfilingLevel",
                  "canonicalReference": "mongodb!ProfilingLevel:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setProfilingLevel"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#setProfilingLevel:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setProfilingLevel(level: "
                },
                {
                  "kind": "Reference",
                  "text": "ProfilingLevel",
                  "canonicalReference": "mongodb!ProfilingLevel:type"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "SetProfilingLevelOptions",
                  "canonicalReference": "mongodb!SetProfilingLevelOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ProfilingLevel",
                  "canonicalReference": "mongodb!ProfilingLevel:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setProfilingLevel"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#setProfilingLevel:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setProfilingLevel(level: "
                },
                {
                  "kind": "Reference",
                  "text": "ProfilingLevel",
                  "canonicalReference": "mongodb!ProfilingLevel:type"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "SetProfilingLevelOptions",
                  "canonicalReference": "mongodb!SetProfilingLevelOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ProfilingLevel",
                  "canonicalReference": "mongodb!ProfilingLevel:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setProfilingLevel"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Db#slaveOk:member",
              "docComment": "/**\n * slaveOk specified\n *\n * @deprecated\n *\n * Use secondaryOk instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get slaveOk(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "slaveOk",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#stats:member(1)",
              "docComment": "/**\n * Get all the db statistics.\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stats(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "stats"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#stats:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stats(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "stats"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#stats:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stats(options: "
                },
                {
                  "kind": "Reference",
                  "text": "DbStatsOptions",
                  "canonicalReference": "mongodb!DbStatsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "stats"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#stats:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stats(options: "
                },
                {
                  "kind": "Reference",
                  "text": "DbStatsOptions",
                  "canonicalReference": "mongodb!DbStatsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "stats"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Db.SYSTEM_COMMAND_COLLECTION:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static SYSTEM_COMMAND_COLLECTION: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SYSTEM_COMMAND_COLLECTION",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Db.SYSTEM_INDEX_COLLECTION:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static SYSTEM_INDEX_COLLECTION: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SYSTEM_INDEX_COLLECTION",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Db.SYSTEM_JS_COLLECTION:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static SYSTEM_JS_COLLECTION: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SYSTEM_JS_COLLECTION",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Db.SYSTEM_NAMESPACE_COLLECTION:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static SYSTEM_NAMESPACE_COLLECTION: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SYSTEM_NAMESPACE_COLLECTION",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Db.SYSTEM_PROFILE_COLLECTION:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static SYSTEM_PROFILE_COLLECTION: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SYSTEM_PROFILE_COLLECTION",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Db.SYSTEM_USER_COLLECTION:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static SYSTEM_USER_COLLECTION: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SYSTEM_USER_COLLECTION",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#unref:member(1)",
              "docComment": "/**\n * Unref all sockets\n *\n * @deprecated\n *\n * This function is deprecated and will be removed in the next major version.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unref(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "unref"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Db#watch:member(1)",
              "docComment": "/**\n * Create a new Change Stream, watching for new changes (insertions, updates, replacements, deletions, and invalidations) in this database. Will ignore all changes to system collections.\n *\n * @remarks\n *\n * watch() accepts two generic arguments for distinct usecases: - The first is to provide the schema that may be defined for all the collections within this database - The second is to override the shape of the change stream document entirely, if it is not provided the type will default to ChangeStreamDocument of the first argument\n *\n * @param pipeline - An array of {@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/ | aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n *\n * @param options - Optional settings for the command\n *\n * @typeParam TSchema - Type of the data being detected by the change stream\n *\n * @typeParam TChange - Type of the whole change stream document emitted\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "watch<TSchema extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ", TChange extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Reference",
                  "text": "ChangeStreamDocument",
                  "canonicalReference": "mongodb!ChangeStreamDocument:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ">(pipeline?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ChangeStreamOptions",
                  "canonicalReference": "mongodb!ChangeStreamOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ChangeStream",
                  "canonicalReference": "mongodb!ChangeStream:class"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema, TChange>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TSchema",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "typeParameterName": "TChange",
                  "constraintTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 11
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 19
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pipeline",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 14
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "watch"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Db#writeConcern:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get writeConcern(): "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcern",
                  "canonicalReference": "mongodb!WriteConcern:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "writeConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!DbOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DbOptions extends "
            },
            {
              "kind": "Reference",
              "text": "BSONSerializeOptions",
              "canonicalReference": "mongodb!BSONSerializeOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "WriteConcernOptions",
              "canonicalReference": "mongodb!WriteConcernOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "LoggerOptions",
              "canonicalReference": "mongodb!LoggerOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DbOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DbOptions#authSource:member",
              "docComment": "/**\n * If the database authentication is dependent on another databaseName.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authSource?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "authSource",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DbOptions#forceServerObjectId:member",
              "docComment": "/**\n * Force server to assign _id values instead of driver.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forceServerObjectId?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "forceServerObjectId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DbOptions#pkFactory:member",
              "docComment": "/**\n * A primary key factory object for generation of custom _id keys.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pkFactory?: "
                },
                {
                  "kind": "Reference",
                  "text": "PkFactory",
                  "canonicalReference": "mongodb!PkFactory:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pkFactory",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DbOptions#readConcern:member",
              "docComment": "/**\n * Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readConcern?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadConcern",
                  "canonicalReference": "mongodb!ReadConcern:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DbOptions#readPreference:member",
              "docComment": "/**\n * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readPreference?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreferenceLike",
                  "canonicalReference": "mongodb!ReadPreferenceLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readPreference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DbOptions#retryWrites:member",
              "docComment": "/**\n * Should retry failed writes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retryWrites?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "retryWrites",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            },
            {
              "startIndex": 5,
              "endIndex": 6
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!DbStatsOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DbStatsOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DbStatsOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DbStatsOptions#scale:member",
              "docComment": "/**\n * Divide the returned sizes by scale value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scale?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "scale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!DeleteManyModel:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DeleteManyModel<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "DeleteManyModel",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DeleteManyModel#collation:member",
              "docComment": "/**\n * Specifies a collation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collation?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollationOptions",
                  "canonicalReference": "mongodb!CollationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DeleteManyModel#filter:member",
              "docComment": "/**\n * The filter to limit the deleted documents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "filter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DeleteManyModel#hint:member",
              "docComment": "/**\n * The index to use. If specified, then the query system will only consider plans using the hinted index.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hint?: "
                },
                {
                  "kind": "Reference",
                  "text": "Hint",
                  "canonicalReference": "mongodb!Hint:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!DeleteOneModel:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DeleteOneModel<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "DeleteOneModel",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DeleteOneModel#collation:member",
              "docComment": "/**\n * Specifies a collation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collation?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollationOptions",
                  "canonicalReference": "mongodb!CollationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DeleteOneModel#filter:member",
              "docComment": "/**\n * The filter to limit the deleted documents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "filter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DeleteOneModel#hint:member",
              "docComment": "/**\n * The index to use. If specified, then the query system will only consider plans using the hinted index.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hint?: "
                },
                {
                  "kind": "Reference",
                  "text": "Hint",
                  "canonicalReference": "mongodb!Hint:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!DeleteOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DeleteOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "WriteConcernOptions",
              "canonicalReference": "mongodb!WriteConcernOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DeleteOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DeleteOptions#collation:member",
              "docComment": "/**\n * Specifies the collation to use for the operation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collation?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollationOptions",
                  "canonicalReference": "mongodb!CollationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DeleteOptions#hint:member",
              "docComment": "/**\n * Specify that the update query should only consider plans using the hinted index\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hint?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DeleteOptions#let:member",
              "docComment": "/**\n * Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "let?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "let",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DeleteOptions#ordered:member",
              "docComment": "/**\n * If true, when an insert fails, don't execute the remaining writes. If false, continue with remaining inserts when one fails.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ordered?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "ordered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DeleteOptions#single:member",
              "docComment": "/**\n * @deprecated\n *\n * use `removeOne` or `removeMany` to implicitly specify the limit\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "single?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "single",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!DeleteResult:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DeleteResult "
            }
          ],
          "releaseTag": "Public",
          "name": "DeleteResult",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DeleteResult#acknowledged:member",
              "docComment": "/**\n * Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "acknowledged: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "acknowledged",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DeleteResult#deletedCount:member",
              "docComment": "/**\n * The number of documents that were deleted\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deletedCount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "deletedCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!DeleteStatement:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DeleteStatement "
            }
          ],
          "releaseTag": "Public",
          "name": "DeleteStatement",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DeleteStatement#collation:member",
              "docComment": "/**\n * Specifies the collation to use for the operation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collation?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollationOptions",
                  "canonicalReference": "mongodb!CollationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DeleteStatement#hint:member",
              "docComment": "/**\n * A document or string that specifies the index to use to support the query predicate.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hint?: "
                },
                {
                  "kind": "Reference",
                  "text": "Hint",
                  "canonicalReference": "mongodb!Hint:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DeleteStatement#limit:member",
              "docComment": "/**\n * The number of matching documents to delete.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "limit: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "limit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DeleteStatement#q:member",
              "docComment": "/**\n * The query that matches documents to delete.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "q: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "q",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!DestroyOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DestroyOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "DestroyOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DestroyOptions#force:member",
              "docComment": "/**\n * Force the destruction.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "force?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "force",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!DistinctOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DistinctOptions = "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "DistinctOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!DriverInfo:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DriverInfo "
            }
          ],
          "releaseTag": "Public",
          "name": "DriverInfo",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DriverInfo#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DriverInfo#platform:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "platform?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "platform",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DriverInfo#version:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!DropCollectionOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DropCollectionOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DropCollectionOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!DropCollectionOptions#encryptedFields:member",
              "docComment": "/**\n * @experimental\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "encryptedFields?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "encryptedFields",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!DropDatabaseOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DropDatabaseOptions = "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "DropDatabaseOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!DropIndexesOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DropIndexesOptions = "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "DropIndexesOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!EndSessionOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EndSessionOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "EndSessionOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!EndSessionOptions#force:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "force?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "force",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!EndSessionOptions#forceClear:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forceClear?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "forceClear",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!EnhancedOmit:type",
          "docComment": "/**\n * TypeScript Omit (Exclude to be specific) does not work for objects with an \"any\" indexed type, and breaks discriminated unions\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type EnhancedOmit<TRecordOrUnion, KeyUnion> = "
            },
            {
              "kind": "Content",
              "text": "string extends keyof TRecordOrUnion ? TRecordOrUnion : TRecordOrUnion extends any ? "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<TRecordOrUnion, "
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<keyof TRecordOrUnion, KeyUnion>> : never"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "EnhancedOmit",
          "typeParameters": [
            {
              "typeParameterName": "TRecordOrUnion",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "KeyUnion",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ErrorDescription:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ErrorDescription extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ErrorDescription",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ErrorDescription#$err:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$err?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$err",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ErrorDescription#errInfo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errInfo?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "errInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ErrorDescription#errmsg:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errmsg?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "errmsg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ErrorDescription#errorLabels:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorLabels?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "errorLabels",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ErrorDescription#message:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!EstimatedDocumentCountOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EstimatedDocumentCountOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "EstimatedDocumentCountOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!EstimatedDocumentCountOptions#maxTimeMS:member",
              "docComment": "/**\n * The maximum amount of time to allow the operation to run.\n *\n * This option is sent only if the caller explicitly provides a value. The default is to not send a value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxTimeMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxTimeMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!EvalOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EvalOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "EvalOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!EvalOptions#nolock:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nolock?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "nolock",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!EventEmitterWithState:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type EventEmitterWithState = "
            },
            {
              "kind": "Content",
              "text": "{\n    stateChanged(previous: string, current: string): void;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "EventEmitterWithState",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!EventsDescription:type",
          "docComment": "/**\n * Event description type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type EventsDescription = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "GenericListener",
              "canonicalReference": "mongodb!GenericListener:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "EventsDescription",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ExplainOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ExplainOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "ExplainOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ExplainOptions#explain:member",
              "docComment": "/**\n * Specifies the verbosity mode for the explain output.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "explain?: "
                },
                {
                  "kind": "Reference",
                  "text": "ExplainVerbosityLike",
                  "canonicalReference": "mongodb!ExplainVerbosityLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "explain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ExplainVerbosity:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ExplainVerbosity = "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ExplainVerbosity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!ExplainVerbosity:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ExplainVerbosity: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    readonly queryPlanner: \"queryPlanner\";\n    readonly queryPlannerExtended: \"queryPlannerExtended\";\n    readonly executionStats: \"executionStats\";\n    readonly allPlansExecution: \"allPlansExecution\";\n}>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ExplainVerbosity",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ExplainVerbosityLike:type",
          "docComment": "/**\n * For backwards compatibility, true is interpreted as \"allPlansExecution\" and false as \"queryPlanner\". Prior to server version 3.6, aggregate() ignores the verbosity parameter and executes in \"queryPlanner\".\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ExplainVerbosityLike = "
            },
            {
              "kind": "Reference",
              "text": "ExplainVerbosity",
              "canonicalReference": "mongodb!ExplainVerbosity:type"
            },
            {
              "kind": "Content",
              "text": " | boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ExplainVerbosityLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!Filter:type",
          "docComment": "/**\n * A MongoDB filter can be some portion of the schema or a set of operators\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Filter<TSchema> = "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema> | ({\n    [Property in "
            },
            {
              "kind": "Reference",
              "text": "Join",
              "canonicalReference": "mongodb!Join:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NestedPaths",
              "canonicalReference": "mongodb!NestedPaths:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "WithId",
              "canonicalReference": "mongodb!WithId:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema>>, '.'>]?: "
            },
            {
              "kind": "Reference",
              "text": "Condition",
              "canonicalReference": "mongodb!Condition:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PropertyType",
              "canonicalReference": "mongodb!PropertyType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "WithId",
              "canonicalReference": "mongodb!WithId:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema>, Property>>;\n} & "
            },
            {
              "kind": "Reference",
              "text": "RootFilterOperators",
              "canonicalReference": "mongodb!RootFilterOperators:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "WithId",
              "canonicalReference": "mongodb!WithId:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema>>)"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Filter",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 19
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!FilterOperations:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type FilterOperations<T> = "
            },
            {
              "kind": "Content",
              "text": "T extends "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any> ? {\n    [key in keyof T]?: "
            },
            {
              "kind": "Reference",
              "text": "FilterOperators",
              "canonicalReference": "mongodb!FilterOperators:interface"
            },
            {
              "kind": "Content",
              "text": "<T[key]>;\n} : "
            },
            {
              "kind": "Reference",
              "text": "FilterOperators",
              "canonicalReference": "mongodb!FilterOperators:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "FilterOperations",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!FilterOperators:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface FilterOperators<TValue> extends "
            },
            {
              "kind": "Reference",
              "text": "NonObjectIdLikeDocument",
              "canonicalReference": "mongodb!NonObjectIdLikeDocument:type"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TValue",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "FilterOperators",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$all:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$all?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyArray",
                  "canonicalReference": "!ReadonlyArray:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$all",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$bitsAllClear:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$bitsAllClear?: "
                },
                {
                  "kind": "Reference",
                  "text": "BitwiseFilter",
                  "canonicalReference": "mongodb!BitwiseFilter:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$bitsAllClear",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$bitsAllSet:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$bitsAllSet?: "
                },
                {
                  "kind": "Reference",
                  "text": "BitwiseFilter",
                  "canonicalReference": "mongodb!BitwiseFilter:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$bitsAllSet",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$bitsAnyClear:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$bitsAnyClear?: "
                },
                {
                  "kind": "Reference",
                  "text": "BitwiseFilter",
                  "canonicalReference": "mongodb!BitwiseFilter:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$bitsAnyClear",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$bitsAnySet:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$bitsAnySet?: "
                },
                {
                  "kind": "Reference",
                  "text": "BitwiseFilter",
                  "canonicalReference": "mongodb!BitwiseFilter:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$bitsAnySet",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$elemMatch:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$elemMatch?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$elemMatch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$eq:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$eq?: "
                },
                {
                  "kind": "Content",
                  "text": "TValue"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$eq",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$exists:member",
              "docComment": "/**\n * When `true`, `$exists` matches the documents that contain the field, including documents where the field value is null.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$exists?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$exists",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$expr:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$expr?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$expr",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$geoIntersects:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$geoIntersects?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        $geometry: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$geoIntersects",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$geoWithin:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$geoWithin?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$geoWithin",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$gt:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$gt?: "
                },
                {
                  "kind": "Content",
                  "text": "TValue"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$gt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$gte:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$gte?: "
                },
                {
                  "kind": "Content",
                  "text": "TValue"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$gte",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$in:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$in?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyArray",
                  "canonicalReference": "!ReadonlyArray:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TValue>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$in",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$jsonSchema:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$jsonSchema?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$jsonSchema",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$lt:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$lt?: "
                },
                {
                  "kind": "Content",
                  "text": "TValue"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$lt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$lte:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$lte?: "
                },
                {
                  "kind": "Content",
                  "text": "TValue"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$lte",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$maxDistance:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$maxDistance?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$maxDistance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$mod:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$mod?: "
                },
                {
                  "kind": "Content",
                  "text": "TValue extends number ? [number, number] : never"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$mod",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$ne:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$ne?: "
                },
                {
                  "kind": "Content",
                  "text": "TValue"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$ne",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$near:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$near?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$near",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$nearSphere:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$nearSphere?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$nearSphere",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$nin:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$nin?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyArray",
                  "canonicalReference": "!ReadonlyArray:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TValue>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$nin",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$not:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$not?: "
                },
                {
                  "kind": "Content",
                  "text": "TValue extends string ? "
                },
                {
                  "kind": "Reference",
                  "text": "FilterOperators",
                  "canonicalReference": "mongodb!FilterOperators:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TValue> | "
                },
                {
                  "kind": "Reference",
                  "text": "RegExp",
                  "canonicalReference": "!RegExp:interface"
                },
                {
                  "kind": "Content",
                  "text": " : "
                },
                {
                  "kind": "Reference",
                  "text": "FilterOperators",
                  "canonicalReference": "mongodb!FilterOperators:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TValue>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$not",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$options?: "
                },
                {
                  "kind": "Content",
                  "text": "TValue extends string ? string : never"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$rand:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$rand?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$rand",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$regex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$regex?: "
                },
                {
                  "kind": "Content",
                  "text": "TValue extends string ? "
                },
                {
                  "kind": "Reference",
                  "text": "RegExp",
                  "canonicalReference": "!RegExp:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "BSONRegExp",
                  "canonicalReference": "bson!BSONRegExp:class"
                },
                {
                  "kind": "Content",
                  "text": " | string : never"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$regex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$size:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$size?: "
                },
                {
                  "kind": "Content",
                  "text": "TValue extends "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyArray",
                  "canonicalReference": "!ReadonlyArray:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any> ? number : never"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FilterOperators#$type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$type?: "
                },
                {
                  "kind": "Reference",
                  "text": "BSONType",
                  "canonicalReference": "mongodb!BSONType:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "BSONTypeAlias",
                  "canonicalReference": "mongodb!BSONTypeAlias:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!FinalizeFunction:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type FinalizeFunction<TKey = "
            },
            {
              "kind": "Reference",
              "text": "ObjectId",
              "canonicalReference": "bson!~ObjectId:class"
            },
            {
              "kind": "Content",
              "text": ", TValue = "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(key: TKey, reducedValue: TValue) => TValue"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "FinalizeFunction",
          "typeParameters": [
            {
              "typeParameterName": "TKey",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "typeParameterName": "TValue",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!FindCursor:class",
          "docComment": "/**\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `FindCursor` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class FindCursor<TSchema = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractCursor",
              "canonicalReference": "mongodb!AbstractCursor:class"
            },
            {
              "kind": "Content",
              "text": "<TSchema> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "FindCursor",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#addQueryModifier:member(1)",
              "docComment": "/**\n * Add a query modifier to the cursor query\n *\n * @param name - The query modifier (must start with $, such as $orderby etc)\n *\n * @param value - The modifier value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addQueryModifier(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "string | boolean | number | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addQueryModifier"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#allowDiskUse:member(1)",
              "docComment": "/**\n * Allows disk use for blocking sort operations exceeding 100MB memory. (MongoDB 3.2 or higher)\n *\n * @remarks\n *\n * {@link https://docs.mongodb.com/manual/reference/command/find/#find-cmd-allowdiskuse | find command allowDiskUse documentation}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "allowDiskUse(allow?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "allow",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "allowDiskUse"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#clone:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "FindCursor",
                  "canonicalReference": "mongodb!FindCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#collation:member(1)",
              "docComment": "/**\n * Set the collation options for the cursor.\n *\n * @param value - The cursor collation options (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collation(value: "
                },
                {
                  "kind": "Reference",
                  "text": "CollationOptions",
                  "canonicalReference": "mongodb!CollationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "collation"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#comment:member(1)",
              "docComment": "/**\n * Add a comment to the cursor query allowing for tracking the comment in the log.\n *\n * @param value - The comment attached to this query.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "comment(value: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "comment"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#count:member(1)",
              "docComment": "/**\n * Get the count of documents for this cursor\n *\n * @deprecated\n *\n * Use `collection.estimatedDocumentCount` or `collection.countDocuments` instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "count(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "count"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#count:member(2)",
              "docComment": "/**\n * @deprecated\n *\n * Use `collection.estimatedDocumentCount` or `collection.countDocuments` instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "count(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "count"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#count:member(3)",
              "docComment": "/**\n * @deprecated\n *\n * Use `collection.estimatedDocumentCount` or `collection.countDocuments` instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "count(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CountOptions",
                  "canonicalReference": "mongodb!CountOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "count"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#count:member(4)",
              "docComment": "/**\n * @deprecated\n *\n * Use `collection.estimatedDocumentCount` or `collection.countDocuments` instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "count(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CountOptions",
                  "canonicalReference": "mongodb!CountOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "count"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#explain:member(1)",
              "docComment": "/**\n * Execute the explain for the cursor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "explain(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "explain"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#explain:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "explain(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "explain"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#explain:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "explain(verbosity?: "
                },
                {
                  "kind": "Reference",
                  "text": "ExplainVerbosityLike",
                  "canonicalReference": "mongodb!ExplainVerbosityLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "verbosity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "explain"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#filter:member(1)",
              "docComment": "/**\n * Set the cursor query\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filter(filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "filter"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#hint:member(1)",
              "docComment": "/**\n * Set the cursor hint\n *\n * @param hint - If specified, then the query system will only consider plans using the hinted index.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hint(hint: "
                },
                {
                  "kind": "Reference",
                  "text": "Hint",
                  "canonicalReference": "mongodb!Hint:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "hint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "hint"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#limit:member(1)",
              "docComment": "/**\n * Set the limit for the cursor.\n *\n * @param value - The limit for the cursor query.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "limit(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "limit"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#map:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "map<T>(transform: "
                },
                {
                  "kind": "Content",
                  "text": "(doc: TSchema) => T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "FindCursor",
                  "canonicalReference": "mongodb!FindCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "transform",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "map"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#max:member(1)",
              "docComment": "/**\n * Set the cursor max\n *\n * @param max - Specify a $max value to specify the exclusive upper bound for a specific index in order to constrain the results of find(). The $max specifies the upper bound for all keys of a specific index in order.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "max(max: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "max",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "max"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#maxAwaitTimeMS:member(1)",
              "docComment": "/**\n * Set a maxAwaitTimeMS on a tailing cursor query to allow to customize the timeout value for the option awaitData (Only supported on MongoDB 3.2 or higher, ignored otherwise)\n *\n * @param value - Number of milliseconds to wait before aborting the tailed query.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxAwaitTimeMS(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "maxAwaitTimeMS"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#maxTimeMS:member(1)",
              "docComment": "/**\n * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)\n *\n * @param value - Number of milliseconds to wait before aborting the query.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxTimeMS(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "maxTimeMS"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#min:member(1)",
              "docComment": "/**\n * Set the cursor min\n *\n * @param min - Specify a $min value to specify the inclusive lower bound for a specific index in order to constrain the results of find(). The $min specifies the lower bound for all keys of a specific index in order.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "min(min: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "min",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "min"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#project:member(1)",
              "docComment": "/**\n * Add a project stage to the aggregation pipeline\n *\n * @remarks\n *\n * **Note for Typescript Users:** adding a transform changes the return type of the iteration of this cursor, it **does not** return a new instance of a cursor. This means when calling project, you should always assign the result to a new variable in order to get a correctly typed cursor variable. Take note of the following example:\n *\n * @example\n * ```typescript\n * // Best way\n * const docs: FindCursor<{ a: number }> = cursor.project<{ a: number }>({ _id: 0, a: true });\n * // Flexible way\n * const docs: FindCursor<Document> = cursor.project({ _id: 0, a: true });\n * ```\n *\n * @example\n * ```typescript\n * const cursor: FindCursor<{ a: number; b: string }> = coll.find();\n * const projectCursor = cursor.project<{ a: number }>({ _id: 0, a: true });\n * const aPropOnlyArray: {a: number}[] = await projectCursor.toArray();\n *\n * // or always use chaining and save the final cursor\n *\n * const cursor = coll.find().project<{ a: string }>({\n *   _id: 0,\n *   a: { $convert: { input: '$a', to: 'string' }\n * }});\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "project<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(value: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "FindCursor",
                  "canonicalReference": "mongodb!FindCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "project"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#returnKey:member(1)",
              "docComment": "/**\n * Set the cursor returnKey. If set to true, modifies the cursor to only return the index field or fields for the results of the query, rather than documents. If set to true and the query does not use an index to perform the read operation, the returned documents will not contain any fields.\n *\n * @param value - the returnKey value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "returnKey(value: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "returnKey"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#showRecordId:member(1)",
              "docComment": "/**\n * Modifies the output of a query by adding a field $recordId to matching documents. $recordId is the internal key which uniquely identifies a document in a collection.\n *\n * @param value - The $showDiskLoc option has now been deprecated and replaced with the showRecordId field. $showDiskLoc will still be accepted for OP_QUERY stye find.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showRecordId(value: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "showRecordId"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#skip:member(1)",
              "docComment": "/**\n * Set the skip for the cursor.\n *\n * @param value - The skip for the cursor query.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "skip(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "skip"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindCursor#sort:member(1)",
              "docComment": "/**\n * Sets the sort order of the cursor query.\n *\n * @param sort - The key or keys set for the sort.\n *\n * @param direction - The direction of the sorting (1 or -1).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sort(sort: "
                },
                {
                  "kind": "Reference",
                  "text": "Sort",
                  "canonicalReference": "mongodb!Sort:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ", direction?: "
                },
                {
                  "kind": "Reference",
                  "text": "SortDirection",
                  "canonicalReference": "mongodb!SortDirection:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "sort",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "direction",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "sort"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!FindOneAndDeleteOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface FindOneAndDeleteOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "FindOneAndDeleteOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndDeleteOptions#hint:member",
              "docComment": "/**\n * An optional hint for query optimization. See the {@link https://docs.mongodb.com/manual/reference/command/update/#update-command-hint | update command} reference for more information.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hint?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndDeleteOptions#let:member",
              "docComment": "/**\n * Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "let?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "let",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndDeleteOptions#projection:member",
              "docComment": "/**\n * Limits the fields to return for all matching documents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "projection?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "projection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndDeleteOptions#sort:member",
              "docComment": "/**\n * Determines which document the operation modifies if the query selects multiple documents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sort?: "
                },
                {
                  "kind": "Reference",
                  "text": "Sort",
                  "canonicalReference": "mongodb!Sort:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sort",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!FindOneAndReplaceOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface FindOneAndReplaceOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "FindOneAndReplaceOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndReplaceOptions#bypassDocumentValidation:member",
              "docComment": "/**\n * Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bypassDocumentValidation?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bypassDocumentValidation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndReplaceOptions#hint:member",
              "docComment": "/**\n * An optional hint for query optimization. See the {@link https://docs.mongodb.com/manual/reference/command/update/#update-command-hint | update command} reference for more information.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hint?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndReplaceOptions#let:member",
              "docComment": "/**\n * Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "let?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "let",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndReplaceOptions#projection:member",
              "docComment": "/**\n * Limits the fields to return for all matching documents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "projection?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "projection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndReplaceOptions#returnDocument:member",
              "docComment": "/**\n * When set to 'after', returns the updated document rather than the original. The default is 'before'.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "returnDocument?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReturnDocument",
                  "canonicalReference": "mongodb!ReturnDocument:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "returnDocument",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndReplaceOptions#sort:member",
              "docComment": "/**\n * Determines which document the operation modifies if the query selects multiple documents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sort?: "
                },
                {
                  "kind": "Reference",
                  "text": "Sort",
                  "canonicalReference": "mongodb!Sort:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sort",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndReplaceOptions#upsert:member",
              "docComment": "/**\n * Upsert the document if it does not exist.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "upsert?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "upsert",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!FindOneAndUpdateOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface FindOneAndUpdateOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "FindOneAndUpdateOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndUpdateOptions#arrayFilters:member",
              "docComment": "/**\n * Optional list of array filters referenced in filtered positional operators\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arrayFilters?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "arrayFilters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndUpdateOptions#bypassDocumentValidation:member",
              "docComment": "/**\n * Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bypassDocumentValidation?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bypassDocumentValidation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndUpdateOptions#hint:member",
              "docComment": "/**\n * An optional hint for query optimization. See the {@link https://docs.mongodb.com/manual/reference/command/update/#update-command-hint | update command} reference for more information.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hint?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndUpdateOptions#let:member",
              "docComment": "/**\n * Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "let?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "let",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndUpdateOptions#projection:member",
              "docComment": "/**\n * Limits the fields to return for all matching documents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "projection?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "projection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndUpdateOptions#returnDocument:member",
              "docComment": "/**\n * When set to 'after', returns the updated document rather than the original. The default is 'before'.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "returnDocument?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReturnDocument",
                  "canonicalReference": "mongodb!ReturnDocument:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "returnDocument",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndUpdateOptions#sort:member",
              "docComment": "/**\n * Determines which document the operation modifies if the query selects multiple documents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sort?: "
                },
                {
                  "kind": "Reference",
                  "text": "Sort",
                  "canonicalReference": "mongodb!Sort:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sort",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOneAndUpdateOptions#upsert:member",
              "docComment": "/**\n * Upsert the document if it does not exist.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "upsert?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "upsert",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!FindOperators:class",
          "docComment": "/**\n * A builder object that is returned from {@link BulkOperationBase#find}. Is used to build a write operation that involves a query filter.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `FindOperators` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class FindOperators "
            }
          ],
          "releaseTag": "Public",
          "name": "FindOperators",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindOperators#arrayFilters:member(1)",
              "docComment": "/**\n * Specifies arrayFilters for UpdateOne or UpdateMany bulk operations.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arrayFilters(arrayFilters: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "arrayFilters",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "arrayFilters"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!FindOperators#bulkOperation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bulkOperation: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkOperationBase",
                  "canonicalReference": "mongodb!BulkOperationBase:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bulkOperation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindOperators#collation:member(1)",
              "docComment": "/**\n * Specifies the collation for the query condition.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collation(collation: "
                },
                {
                  "kind": "Reference",
                  "text": "CollationOptions",
                  "canonicalReference": "mongodb!CollationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collation",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "collation"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindOperators#delete:member(1)",
              "docComment": "/**\n * Add a delete many operation to the bulk operation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delete(): "
                },
                {
                  "kind": "Reference",
                  "text": "BulkOperationBase",
                  "canonicalReference": "mongodb!BulkOperationBase:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "delete"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindOperators#deleteOne:member(1)",
              "docComment": "/**\n * Add a delete one operation to the bulk operation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteOne(): "
                },
                {
                  "kind": "Reference",
                  "text": "BulkOperationBase",
                  "canonicalReference": "mongodb!BulkOperationBase:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "deleteOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindOperators#replaceOne:member(1)",
              "docComment": "/**\n * Add a replace one operation to the bulk operation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replaceOne(replacement: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "BulkOperationBase",
                  "canonicalReference": "mongodb!BulkOperationBase:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "replacement",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "replaceOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindOperators#update:member(1)",
              "docComment": "/**\n * Add a multiple update operation to the bulk operation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "update(updateDocument: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "BulkOperationBase",
                  "canonicalReference": "mongodb!BulkOperationBase:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "updateDocument",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "update"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindOperators#updateOne:member(1)",
              "docComment": "/**\n * Add a single update operation to the bulk operation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateOne(updateDocument: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "BulkOperationBase",
                  "canonicalReference": "mongodb!BulkOperationBase:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "updateDocument",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "updateOne"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!FindOperators#upsert:member(1)",
              "docComment": "/**\n * Upsert modifier for update bulk operation, noting that this operation is an upsert.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "upsert(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "upsert"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!FindOptions:interface",
          "docComment": "/**\n * @typeParam TSchema - Unused schema definition, deprecated usage, only specify `FindOptions` with no generic\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface FindOptions<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "FindOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#allowDiskUse:member",
              "docComment": "/**\n * Allows disk use for blocking sort operations exceeding 100MB memory. (MongoDB 3.2 or higher)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "allowDiskUse?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "allowDiskUse",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#allowPartialResults:member",
              "docComment": "/**\n * For queries against a sharded collection, allows the command (or subsequent getMore commands) to return partial results, rather than an error, if one or more queried shards are unavailable.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "allowPartialResults?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "allowPartialResults",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#awaitData:member",
              "docComment": "/**\n * Specify if the cursor is a tailable-await cursor. Requires `tailable` to be true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "awaitData?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "awaitData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#batchSize:member",
              "docComment": "/**\n * Set the batchSize for the getMoreCommand when iterating over the query results.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "batchSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "batchSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#collation:member",
              "docComment": "/**\n * Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collation?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollationOptions",
                  "canonicalReference": "mongodb!CollationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#hint:member",
              "docComment": "/**\n * Tell the query to use specific indexes in the query. Object of indexes to use, `{'_id':1}`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hint?: "
                },
                {
                  "kind": "Reference",
                  "text": "Hint",
                  "canonicalReference": "mongodb!Hint:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#let:member",
              "docComment": "/**\n * Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "let?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "let",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#limit:member",
              "docComment": "/**\n * Sets the limit of documents returned in the query.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "limit?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "limit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#max:member",
              "docComment": "/**\n * The exclusive upper bound for a specific index\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "max?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "max",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#maxAwaitTimeMS:member",
              "docComment": "/**\n * The maximum amount of time for the server to wait on new documents to satisfy a tailable cursor query. Requires `tailable` and `awaitData` to be true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxAwaitTimeMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxAwaitTimeMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#maxTimeMS:member",
              "docComment": "/**\n * Number of milliseconds to wait before aborting the query.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxTimeMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxTimeMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#min:member",
              "docComment": "/**\n * The inclusive lower bound for a specific index\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "min?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "min",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#noCursorTimeout:member",
              "docComment": "/**\n * The server normally times out idle cursors after an inactivity period (10 minutes) to prevent excess memory use. Set this option to prevent that.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "noCursorTimeout?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "noCursorTimeout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#projection:member",
              "docComment": "/**\n * The fields to return in the query. Object of fields to either include or exclude (one of, not both), `{'a':1, 'b': 1}` **or** `{'a': 0, 'b': 0}`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "projection?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "projection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#returnKey:member",
              "docComment": "/**\n * If true, returns only the index keys in the resulting documents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "returnKey?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "returnKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#showRecordId:member",
              "docComment": "/**\n * Determines whether to return the record identifier for each document. If true, adds a field $recordId to the returned documents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showRecordId?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "showRecordId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#singleBatch:member",
              "docComment": "/**\n * Determines whether to close the cursor after the first batch. Defaults to false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "singleBatch?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "singleBatch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#skip:member",
              "docComment": "/**\n * Set to skip N documents ahead in your query (useful for pagination).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "skip?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "skip",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#sort:member",
              "docComment": "/**\n * Set to sort the documents coming back from the query. Array of indexes, `[['a', 1]]` etc.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sort?: "
                },
                {
                  "kind": "Reference",
                  "text": "Sort",
                  "canonicalReference": "mongodb!Sort:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sort",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#tailable:member",
              "docComment": "/**\n * Specify if the cursor is tailable.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tailable?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tailable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!FindOptions#timeout:member",
              "docComment": "/**\n * Specify if the cursor can timeout.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timeout?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "timeout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!Flatten:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Flatten<Type> = "
            },
            {
              "kind": "Content",
              "text": "Type extends "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<infer Item> ? Item : Type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Flatten",
          "typeParameters": [
            {
              "typeParameterName": "Type",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!GenericListener:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GenericListener = "
            },
            {
              "kind": "Content",
              "text": "(...args: any[]) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GenericListener",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!GridFSBucket:class",
          "docComment": "/**\n * Constructor for a streaming GridFS interface\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class GridFSBucket extends "
            },
            {
              "kind": "Reference",
              "text": "TypedEventEmitter",
              "canonicalReference": "mongodb!TypedEventEmitter:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GridFSBucketEvents",
              "canonicalReference": "mongodb!GridFSBucketEvents:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "GridFSBucket",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!GridFSBucket:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `GridFSBucket` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(db: "
                },
                {
                  "kind": "Reference",
                  "text": "Db",
                  "canonicalReference": "mongodb!Db:class"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GridFSBucketOptions",
                  "canonicalReference": "mongodb!GridFSBucketOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "db",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucket#delete:member(1)",
              "docComment": "/**\n * Deletes a file with the given id\n *\n * @param id - The id of the file doc\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delete(id: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "delete"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucket#delete:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delete(id: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "delete"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucket#drop:member(1)",
              "docComment": "/**\n * Removes this bucket's files collection, followed by its chunks collection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "drop(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "drop"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucket#drop:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "drop(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "drop"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucket#find:member(1)",
              "docComment": "/**\n * Convenience wrapper around find on the files collection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "find(filter?: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "GridFSFile",
                  "canonicalReference": "mongodb!GridFSFile:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "FindOptions",
                  "canonicalReference": "mongodb!FindOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "FindCursor",
                  "canonicalReference": "mongodb!FindCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "GridFSFile",
                  "canonicalReference": "mongodb!GridFSFile:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "find"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucket#getLogger:member(1)",
              "docComment": "/**\n * Get the Db scoped logger.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLogger(): "
                },
                {
                  "kind": "Reference",
                  "text": "Logger",
                  "canonicalReference": "mongodb!Logger:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getLogger"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucket.INDEX:member",
              "docComment": "/**\n * When the first call to openUploadStream is made, the upload stream will check to see if it needs to create the proper indexes on the chunks and files collections. This event is fired either when 1) it determines that no index creation is necessary, 2) when it successfully creates the necessary indexes.\n *\n * @event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly INDEX: "
                },
                {
                  "kind": "Content",
                  "text": "\"index\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "INDEX",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucket#openDownloadStream:member(1)",
              "docComment": "/**\n * Returns a readable stream (GridFSBucketReadStream) for streaming file data from GridFS.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "openDownloadStream(id: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GridFSBucketReadStreamOptions",
                  "canonicalReference": "mongodb!GridFSBucketReadStreamOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "GridFSBucketReadStream",
                  "canonicalReference": "mongodb!GridFSBucketReadStream:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "openDownloadStream"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucket#openDownloadStreamByName:member(1)",
              "docComment": "/**\n * Returns a readable stream (GridFSBucketReadStream) for streaming the file with the given name from GridFS. If there are multiple files with the same name, this will stream the most recent file with the given name (as determined by the `uploadDate` field). You can set the `revision` option to change this behavior.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "openDownloadStreamByName(filename: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GridFSBucketReadStreamOptionsWithRevision",
                  "canonicalReference": "mongodb!GridFSBucketReadStreamOptionsWithRevision:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "GridFSBucketReadStream",
                  "canonicalReference": "mongodb!GridFSBucketReadStream:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filename",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "openDownloadStreamByName"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucket#openUploadStream:member(1)",
              "docComment": "/**\n * Returns a writable stream (GridFSBucketWriteStream) for writing buffers to GridFS. The stream's 'id' property contains the resulting file's id.\n *\n * @param filename - The value of the 'filename' key in the files doc\n *\n * @param options - Optional settings.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "openUploadStream(filename: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GridFSBucketWriteStreamOptions",
                  "canonicalReference": "mongodb!GridFSBucketWriteStreamOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "GridFSBucketWriteStream",
                  "canonicalReference": "mongodb!GridFSBucketWriteStream:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filename",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "openUploadStream"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucket#openUploadStreamWithId:member(1)",
              "docComment": "/**\n * Returns a writable stream (GridFSBucketWriteStream) for writing buffers to GridFS for a custom file id. The stream's 'id' property contains the resulting file's id.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "openUploadStreamWithId(id: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ", filename: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "GridFSBucketWriteStreamOptions",
                  "canonicalReference": "mongodb!GridFSBucketWriteStreamOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "GridFSBucketWriteStream",
                  "canonicalReference": "mongodb!GridFSBucketWriteStream:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "filename",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "openUploadStreamWithId"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucket#rename:member(1)",
              "docComment": "/**\n * Renames the file with the given _id to the given string\n *\n * @param id - the id of the file to rename\n *\n * @param filename - new name for the file\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rename(id: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ", filename: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "filename",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "rename"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucket#rename:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rename(id: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ", filename: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "filename",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "rename"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!GridFSBucketEvents:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GridFSBucketEvents = "
            },
            {
              "kind": "Content",
              "text": "{\n    index(): void;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GridFSBucketEvents",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!GridFSBucketOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GridFSBucketOptions extends "
            },
            {
              "kind": "Reference",
              "text": "WriteConcernOptions",
              "canonicalReference": "mongodb!WriteConcernOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "GridFSBucketOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSBucketOptions#bucketName:member",
              "docComment": "/**\n * The 'files' and 'chunks' collections will be prefixed with the bucket name followed by a dot.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bucketName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bucketName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSBucketOptions#chunkSizeBytes:member",
              "docComment": "/**\n * Number of bytes stored in each chunk. Defaults to 255KB\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "chunkSizeBytes?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "chunkSizeBytes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSBucketOptions#readPreference:member",
              "docComment": "/**\n * Read preference to be passed to read operations\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readPreference?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readPreference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!GridFSBucketReadStream:class",
          "docComment": "/**\n * A readable stream that enables you to read buffers from GridFS.\n *\n * Do not instantiate this class directly. Use `openDownloadStream()` instead.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `GridFSBucketReadStream` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class GridFSBucketReadStream extends "
            },
            {
              "kind": "Reference",
              "text": "Readable",
              "canonicalReference": "!internal.Readable:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "NodeJS.ReadableStream",
              "canonicalReference": "!NodeJS.ReadableStream:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "GridFSBucketReadStream",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucketReadStream#abort:member(1)",
              "docComment": "/**\n * Marks this stream as aborted (will never push another `data` event) and kills the underlying cursor. Will emit the 'end' event, and then the 'close' event once the cursor is successfully killed.\n *\n * @param callback - called when the cursor is successfully closed or an error occurred.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abort(callback?: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "abort"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketReadStream.CLOSE:member",
              "docComment": "/**\n * Fired when the stream is exhausted and the underlying cursor is killed\n *\n * @event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CLOSE: "
                },
                {
                  "kind": "Content",
                  "text": "\"close\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CLOSE",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketReadStream.DATA:member",
              "docComment": "/**\n * Emitted when a chunk of data is available to be consumed.\n *\n * @event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly DATA: "
                },
                {
                  "kind": "Content",
                  "text": "\"data\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DATA",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucketReadStream#end:member(1)",
              "docComment": "/**\n * Sets the 0-based offset in bytes to start streaming from. Throws an error if this stream has entered flowing mode (e.g. if you've already called `on('data')`)\n *\n * @param end - Offset in bytes to stop reading at\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end(end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "end"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketReadStream.END:member",
              "docComment": "/**\n * Fired when the stream is exhausted (no more data events).\n *\n * @event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly END: "
                },
                {
                  "kind": "Content",
                  "text": "\"end\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "END",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketReadStream.ERROR:member",
              "docComment": "/**\n * An error occurred\n *\n * @event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly ERROR: "
                },
                {
                  "kind": "Content",
                  "text": "\"error\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ERROR",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketReadStream.FILE:member",
              "docComment": "/**\n * Fires when the stream loaded the file document corresponding to the provided id.\n *\n * @event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly FILE: "
                },
                {
                  "kind": "Content",
                  "text": "\"file\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "FILE",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucketReadStream#start:member(1)",
              "docComment": "/**\n * Sets the 0-based offset in bytes to start streaming from. Throws an error if this stream has entered flowing mode (e.g. if you've already called `on('data')`)\n *\n * @param start - 0-based offset in bytes to start streaming from\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start(start?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "start"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": [
            {
              "startIndex": 4,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!GridFSBucketReadStreamOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GridFSBucketReadStreamOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "GridFSBucketReadStreamOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSBucketReadStreamOptions#end:member",
              "docComment": "/**\n * 0-based offset in bytes to stop streaming before\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "end",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSBucketReadStreamOptions#skip:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "skip?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "skip",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSBucketReadStreamOptions#sort:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sort?: "
                },
                {
                  "kind": "Reference",
                  "text": "Sort",
                  "canonicalReference": "mongodb!Sort:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sort",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSBucketReadStreamOptions#start:member",
              "docComment": "/**\n * 0-based offset in bytes to start streaming from\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "start",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!GridFSBucketReadStreamOptionsWithRevision:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GridFSBucketReadStreamOptionsWithRevision extends "
            },
            {
              "kind": "Reference",
              "text": "GridFSBucketReadStreamOptions",
              "canonicalReference": "mongodb!GridFSBucketReadStreamOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "GridFSBucketReadStreamOptionsWithRevision",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSBucketReadStreamOptionsWithRevision#revision:member",
              "docComment": "/**\n * The revision number relative to the oldest file with the given filename. 0 gets you the oldest file, 1 gets you the 2nd oldest, -1 gets you the newest.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "revision?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "revision",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!GridFSBucketWriteStream:class",
          "docComment": "/**\n * A writable stream that enables you to write buffers to GridFS.\n *\n * Do not instantiate this class directly. Use `openUploadStream()` instead.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `GridFSBucketWriteStream` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class GridFSBucketWriteStream extends "
            },
            {
              "kind": "Reference",
              "text": "Writable",
              "canonicalReference": "!internal.Writable:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "NodeJS.WritableStream",
              "canonicalReference": "!NodeJS.WritableStream:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "GridFSBucketWriteStream",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#abort:member(1)",
              "docComment": "/**\n * Places this write stream into an aborted state (all future writes fail) and deletes all chunks that have already been written.\n *\n * @param callback - called when chunks are successfully removed or error occurred\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abort(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "abort"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#abort:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abort(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "abort"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#bucket:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bucket: "
                },
                {
                  "kind": "Reference",
                  "text": "GridFSBucket",
                  "canonicalReference": "mongodb!GridFSBucket:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bucket",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#bufToStore:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bufToStore: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bufToStore",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#chunks:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "chunks: "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "GridFSChunk",
                  "canonicalReference": "mongodb!GridFSChunk:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "chunks",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#chunkSizeBytes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "chunkSizeBytes: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "chunkSizeBytes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketWriteStream.CLOSE:member",
              "docComment": "/**\n * @event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CLOSE = \"close\";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CLOSE",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#done:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "done: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "done",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#end:member(1)",
              "docComment": "/**\n * Tells the stream that no more data will be coming in. The stream will persist the remaining data to MongoDB, write the files document, and then emit a 'finish' event.\n *\n * @param chunk - Buffer to write\n *\n * @param encoding - Optional encoding for the buffer\n *\n * @param callback - Function to call when all files and chunks have been persisted to MongoDB\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "end"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#end:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end(chunk: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "chunk",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "end"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#end:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "GridFSFile",
                  "canonicalReference": "mongodb!GridFSFile:interface"
                },
                {
                  "kind": "Content",
                  "text": " | void>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "end"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#end:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end(chunk: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "GridFSFile",
                  "canonicalReference": "mongodb!GridFSFile:interface"
                },
                {
                  "kind": "Content",
                  "text": " | void>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "chunk",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "end"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#end:member(5)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end(chunk: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", encoding: "
                },
                {
                  "kind": "Reference",
                  "text": "BufferEncoding",
                  "canonicalReference": "!__global.BufferEncoding:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 5,
              "parameters": [
                {
                  "parameterName": "chunk",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "encoding",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "end"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#end:member(6)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end(chunk: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", encoding: "
                },
                {
                  "kind": "Reference",
                  "text": "BufferEncoding",
                  "canonicalReference": "!__global.BufferEncoding:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "GridFSFile",
                  "canonicalReference": "mongodb!GridFSFile:interface"
                },
                {
                  "kind": "Content",
                  "text": " | void>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 6,
              "parameters": [
                {
                  "parameterName": "chunk",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "encoding",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "end"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketWriteStream.ERROR:member",
              "docComment": "/**\n * @event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly ERROR = \"error\";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ERROR",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#filename:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filename: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "filename",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#files:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "files: "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "GridFSFile",
                  "canonicalReference": "mongodb!GridFSFile:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "files",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketWriteStream.FINISH:member",
              "docComment": "/**\n * `end()` was called and the write stream successfully wrote the file metadata and all the chunks to MongoDB.\n *\n * @event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly FINISH = \"finish\";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "FINISH",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#length:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "length: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#n:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "n: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "n",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options: "
                },
                {
                  "kind": "Reference",
                  "text": "GridFSBucketWriteStreamOptions",
                  "canonicalReference": "mongodb!GridFSBucketWriteStreamOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#pos:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pos: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pos",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#state:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "state: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        streamEnd: boolean;\n        outstandingRequests: number;\n        errored: boolean;\n        aborted: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "state",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#write:member(1)",
              "docComment": "/**\n * Write a buffer to the stream.\n *\n * @param chunk - Buffer to write\n *\n * @param encodingOrCallback - Optional encoding for the buffer\n *\n * @param callback - Function to call when the chunk was added to the buffer, or if the entire chunk was persisted to MongoDB if this chunk caused a flush.\n *\n * @returns False if this write required flushing a chunk to MongoDB. True otherwise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(chunk: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "chunk",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#write:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(chunk: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "chunk",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#write:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(chunk: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ", encoding: "
                },
                {
                  "kind": "Reference",
                  "text": "BufferEncoding",
                  "canonicalReference": "!__global.BufferEncoding:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "chunk",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "encoding",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#write:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "write(chunk: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ", encoding: "
                },
                {
                  "kind": "Reference",
                  "text": "BufferEncoding",
                  "canonicalReference": "!__global.BufferEncoding:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "chunk",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "encoding",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "write"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!GridFSBucketWriteStream#writeConcern:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "writeConcern?: "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcern",
                  "canonicalReference": "mongodb!WriteConcern:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "writeConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": [
            {
              "startIndex": 4,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!GridFSBucketWriteStreamOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GridFSBucketWriteStreamOptions extends "
            },
            {
              "kind": "Reference",
              "text": "WriteConcernOptions",
              "canonicalReference": "mongodb!WriteConcernOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "GridFSBucketWriteStreamOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSBucketWriteStreamOptions#aliases:member",
              "docComment": "/**\n * Array of strings to store in the file document's `aliases` field\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "aliases?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "aliases",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSBucketWriteStreamOptions#chunkSizeBytes:member",
              "docComment": "/**\n * Overwrite this bucket's chunkSizeBytes for this file\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "chunkSizeBytes?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "chunkSizeBytes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSBucketWriteStreamOptions#contentType:member",
              "docComment": "/**\n * String to store in the file document's `contentType` field\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contentType?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "contentType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSBucketWriteStreamOptions#id:member",
              "docComment": "/**\n * Custom file id for the GridFS file.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id?: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSBucketWriteStreamOptions#metadata:member",
              "docComment": "/**\n * Object to store in the file document's `metadata` field\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!GridFSChunk:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GridFSChunk "
            }
          ],
          "releaseTag": "Public",
          "name": "GridFSChunk",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSChunk#_id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_id: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSChunk#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Uint8Array",
                  "canonicalReference": "!Uint8Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSChunk#files_id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "files_id: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "files_id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSChunk#n:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "n: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "n",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!GridFSFile:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GridFSFile "
            }
          ],
          "releaseTag": "Public",
          "name": "GridFSFile",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSFile#_id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_id: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSFile#aliases:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "aliases?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "aliases",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSFile#chunkSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "chunkSize: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "chunkSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSFile#contentType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contentType?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "contentType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSFile#filename:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filename: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "filename",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSFile#length:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "length: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSFile#metadata:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!GridFSFile#uploadDate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uploadDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "uploadDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!GSSAPICanonicalizationValue:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GSSAPICanonicalizationValue = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "GSSAPICanonicalizationValue",
              "canonicalReference": "mongodb!GSSAPICanonicalizationValue:var"
            },
            {
              "kind": "Content",
              "text": "[keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "GSSAPICanonicalizationValue",
              "canonicalReference": "mongodb!GSSAPICanonicalizationValue:var"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GSSAPICanonicalizationValue",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!GSSAPICanonicalizationValue:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GSSAPICanonicalizationValue: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    readonly on: true;\n    readonly off: false;\n    readonly none: \"none\";\n    readonly forward: \"forward\";\n    readonly forwardAndReverse: \"forwardAndReverse\";\n}>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "GSSAPICanonicalizationValue",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!HedgeOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface HedgeOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "HedgeOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!HedgeOptions#enabled:member",
              "docComment": "/**\n * Explicitly enable or disable hedged reads.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enabled?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "enabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!Hint:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Hint = "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Hint",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!HostAddress:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class HostAddress "
            }
          ],
          "releaseTag": "Public",
          "name": "HostAddress",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!HostAddress:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `HostAddress` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(hostString: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "hostString",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!HostAddress.fromHostPort:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromHostPort(host: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", port: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "HostAddress",
                  "canonicalReference": "mongodb!HostAddress:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "host",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "port",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "fromHostPort"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!HostAddress.fromSrvRecord:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromSrvRecord({ name, port }: "
                },
                {
                  "kind": "Reference",
                  "text": "SrvRecord",
                  "canonicalReference": "!\"\\\"dns\\\"\".SrvRecord:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "HostAddress",
                  "canonicalReference": "mongodb!HostAddress:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ name, port }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "fromSrvRecord"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!HostAddress.fromString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromString(s: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "HostAddress",
                  "canonicalReference": "mongodb!HostAddress:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "s",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "fromString"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!HostAddress#host:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "host: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "host",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!HostAddress#inspect:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inspect(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "inspect"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!HostAddress#isIPv6:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isIPv6: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isIPv6",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!HostAddress#port:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "port: "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "port",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!HostAddress#socketPath:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "socketPath: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "socketPath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!HostAddress#toString:member(1)",
              "docComment": "/**\n * @param ipv6Brackets - optionally request ipv6 bracket notation required for connection strings\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(ipv6Brackets?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ipv6Brackets",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "toString"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!IndexDescription:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IndexDescription extends "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CreateIndexesOptions",
              "canonicalReference": "mongodb!CreateIndexesOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", 'background' | 'unique' | 'partialFilterExpression' | 'sparse' | 'hidden' | 'expireAfterSeconds' | 'storageEngine' | 'version' | 'weights' | 'default_language' | 'language_override' | 'textIndexVersion' | '2dsphereIndexVersion' | 'bits' | 'min' | 'max' | 'bucketSize' | 'wildcardProjection'> "
            }
          ],
          "releaseTag": "Public",
          "name": "IndexDescription",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!IndexDescription#collation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collation?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollationOptions",
                  "canonicalReference": "mongodb!CollationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!IndexDescription#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!IndexDescription#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!IndexDirection:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IndexDirection = "
            },
            {
              "kind": "Content",
              "text": "-1 | 1 | '2d' | '2dsphere' | 'text' | 'geoHaystack' | number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IndexDirection",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!IndexInformationOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IndexInformationOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "IndexInformationOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!IndexInformationOptions#full:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "full?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "full",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!IndexInformationOptions#readPreference:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readPreference?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readPreference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!IndexInformationOptions#session:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "session?: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientSession",
                  "canonicalReference": "mongodb!ClientSession:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "session",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!IndexSpecification:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IndexSpecification = "
            },
            {
              "kind": "Reference",
              "text": "OneOrMore",
              "canonicalReference": "mongodb!OneOrMore:type"
            },
            {
              "kind": "Content",
              "text": "<string | [string, "
            },
            {
              "kind": "Reference",
              "text": "IndexDirection",
              "canonicalReference": "mongodb!IndexDirection:type"
            },
            {
              "kind": "Content",
              "text": "] | {\n    [key: string]: "
            },
            {
              "kind": "Reference",
              "text": "IndexDirection",
              "canonicalReference": "mongodb!IndexDirection:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | [string, "
            },
            {
              "kind": "Reference",
              "text": "IndexDirection",
              "canonicalReference": "mongodb!IndexDirection:type"
            },
            {
              "kind": "Content",
              "text": "][] | {\n    [key: string]: "
            },
            {
              "kind": "Reference",
              "text": "IndexDirection",
              "canonicalReference": "mongodb!IndexDirection:type"
            },
            {
              "kind": "Content",
              "text": ";\n}[]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IndexSpecification",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!InferIdType:type",
          "docComment": "/**\n * Given an object shaped type, return the type of the _id field or default to ObjectId\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type InferIdType<TSchema> = "
            },
            {
              "kind": "Content",
              "text": "TSchema extends {\n    _id: infer IdType;\n} ? "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<any, never> extends IdType ? never : IdType : TSchema extends {\n    _id?: infer IdType;\n} ? unknown extends IdType ? "
            },
            {
              "kind": "Reference",
              "text": "ObjectId",
              "canonicalReference": "bson!~ObjectId:class"
            },
            {
              "kind": "Content",
              "text": " : IdType : "
            },
            {
              "kind": "Reference",
              "text": "ObjectId",
              "canonicalReference": "bson!~ObjectId:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "InferIdType",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!InsertManyResult:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface InsertManyResult<TSchema = "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "InsertManyResult",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!InsertManyResult#acknowledged:member",
              "docComment": "/**\n * Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "acknowledged: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "acknowledged",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!InsertManyResult#insertedCount:member",
              "docComment": "/**\n * The number of inserted documents for this operations\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertedCount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "insertedCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!InsertManyResult#insertedIds:member",
              "docComment": "/**\n * Map of the index of the inserted document to the id of the inserted document\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertedIds: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: number]: "
                },
                {
                  "kind": "Reference",
                  "text": "InferIdType",
                  "canonicalReference": "mongodb!InferIdType:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "insertedIds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!InsertOneModel:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface InsertOneModel<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "InsertOneModel",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!InsertOneModel#document:member",
              "docComment": "/**\n * The document to insert.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "document: "
                },
                {
                  "kind": "Reference",
                  "text": "OptionalId",
                  "canonicalReference": "mongodb!OptionalId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "document",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!InsertOneOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface InsertOneOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "InsertOneOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!InsertOneOptions#bypassDocumentValidation:member",
              "docComment": "/**\n * Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bypassDocumentValidation?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bypassDocumentValidation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!InsertOneOptions#forceServerObjectId:member",
              "docComment": "/**\n * Force server to assign _id values instead of driver.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forceServerObjectId?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "forceServerObjectId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!InsertOneResult:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface InsertOneResult<TSchema = "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "InsertOneResult",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!InsertOneResult#acknowledged:member",
              "docComment": "/**\n * Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "acknowledged: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "acknowledged",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!InsertOneResult#insertedId:member",
              "docComment": "/**\n * The identifier that was inserted. If the server generated the identifier, this value will be null as the driver does not have access to that data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertedId: "
                },
                {
                  "kind": "Reference",
                  "text": "InferIdType",
                  "canonicalReference": "mongodb!InferIdType:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "insertedId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!IntegerType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IntegerType = "
            },
            {
              "kind": "Content",
              "text": "number | "
            },
            {
              "kind": "Reference",
              "text": "Int32",
              "canonicalReference": "bson!Int32:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Long",
              "canonicalReference": "bson!Long:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IntegerType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!IsAny:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IsAny<Type, ResultIfAny, ResultIfNotAny> = "
            },
            {
              "kind": "Content",
              "text": "true extends false & Type ? ResultIfAny : ResultIfNotAny"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IsAny",
          "typeParameters": [
            {
              "typeParameterName": "Type",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ResultIfAny",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ResultIfNotAny",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!Join:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Join<T extends "
            },
            {
              "kind": "Content",
              "text": "unknown[]"
            },
            {
              "kind": "Content",
              "text": ", D extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "T extends [] ? '' : T extends [string | number] ? `${T[0]}` : T extends [string | number, ...infer R] ? `${T[0]}${D}${"
            },
            {
              "kind": "Reference",
              "text": "Join",
              "canonicalReference": "mongodb!Join:type"
            },
            {
              "kind": "Content",
              "text": "<R, D>}` : string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Join",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "D",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!KeysOfAType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type KeysOfAType<TSchema, Type> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [key in keyof TSchema]: "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema[key]> extends Type ? key : never;\n}[keyof TSchema]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "KeysOfAType",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "Type",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!KeysOfOtherType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type KeysOfOtherType<TSchema, Type> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [key in keyof TSchema]: "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema[key]> extends Type ? never : key;\n}[keyof TSchema]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "KeysOfOtherType",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "Type",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!LEGAL_TCP_SOCKET_OPTIONS:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "LEGAL_TCP_SOCKET_OPTIONS: "
            },
            {
              "kind": "Content",
              "text": "readonly [\"family\", \"hints\", \"localAddress\", \"localPort\", \"lookup\"]"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "LEGAL_TCP_SOCKET_OPTIONS",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!LEGAL_TLS_SOCKET_OPTIONS:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "LEGAL_TLS_SOCKET_OPTIONS: "
            },
            {
              "kind": "Content",
              "text": "readonly [\"ALPNProtocols\", \"ca\", \"cert\", \"checkServerIdentity\", \"ciphers\", \"crl\", \"ecdhCurve\", \"key\", \"minDHSize\", \"passphrase\", \"pfx\", \"rejectUnauthorized\", \"secureContext\", \"secureProtocol\", \"servername\", \"session\"]"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "LEGAL_TLS_SOCKET_OPTIONS",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ListCollectionsCursor:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ListCollectionsCursor<T extends "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CollectionInfo",
              "canonicalReference": "mongodb!CollectionInfo:interface"
            },
            {
              "kind": "Content",
              "text": ", 'name' | 'type'> | "
            },
            {
              "kind": "Reference",
              "text": "CollectionInfo",
              "canonicalReference": "mongodb!CollectionInfo:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CollectionInfo",
              "canonicalReference": "mongodb!CollectionInfo:interface"
            },
            {
              "kind": "Content",
              "text": ", 'name' | 'type'> | "
            },
            {
              "kind": "Reference",
              "text": "CollectionInfo",
              "canonicalReference": "mongodb!CollectionInfo:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractCursor",
              "canonicalReference": "mongodb!AbstractCursor:class"
            },
            {
              "kind": "Content",
              "text": "<T> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 13
              }
            }
          ],
          "name": "ListCollectionsCursor",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!ListCollectionsCursor:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ListCollectionsCursor` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(db: "
                },
                {
                  "kind": "Reference",
                  "text": "Db",
                  "canonicalReference": "mongodb!Db:class"
                },
                {
                  "kind": "Content",
                  "text": ", filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ListCollectionsOptions",
                  "canonicalReference": "mongodb!ListCollectionsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "db",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ListCollectionsCursor#clone:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "ListCollectionsCursor",
                  "canonicalReference": "mongodb!ListCollectionsCursor:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "clone"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ListCollectionsCursor#filter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "filter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ListCollectionsCursor#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ListCollectionsOptions",
                  "canonicalReference": "mongodb!ListCollectionsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ListCollectionsCursor#parent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parent: "
                },
                {
                  "kind": "Reference",
                  "text": "Db",
                  "canonicalReference": "mongodb!Db:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 14,
            "endIndex": 15
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ListCollectionsOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ListCollectionsOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ListCollectionsOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ListCollectionsOptions#authorizedCollections:member",
              "docComment": "/**\n * Since 4.0: If true and nameOnly is true, allows a user without the required privilege (i.e. listCollections action on the database) to run the command when access control is enforced.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authorizedCollections?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "authorizedCollections",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ListCollectionsOptions#batchSize:member",
              "docComment": "/**\n * The batchSize for the returned command cursor or if pre 2.8 the systems batch collection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "batchSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "batchSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ListCollectionsOptions#nameOnly:member",
              "docComment": "/**\n * Since 4.0: If true, will only return the collection name in the response, and will omit additional info\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nameOnly?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "nameOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ListDatabasesOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ListDatabasesOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ListDatabasesOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ListDatabasesOptions#authorizedDatabases:member",
              "docComment": "/**\n * A flag that determines which databases are returned based on the user privileges when access control is enabled\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authorizedDatabases?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "authorizedDatabases",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ListDatabasesOptions#filter:member",
              "docComment": "/**\n * A query predicate that determines which databases are listed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filter?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "filter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ListDatabasesOptions#nameOnly:member",
              "docComment": "/**\n * A flag to indicate whether the command should return just the database names, or return both database names and size information\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nameOnly?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "nameOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ListDatabasesResult:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ListDatabasesResult "
            }
          ],
          "releaseTag": "Public",
          "name": "ListDatabasesResult",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ListDatabasesResult#databases:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "databases: "
                },
                {
                  "kind": "Content",
                  "text": "({\n        name: string;\n        sizeOnDisk?: number;\n        empty?: boolean;\n    } & "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ")[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "databases",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ListDatabasesResult#ok:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ok: "
                },
                {
                  "kind": "Content",
                  "text": "1 | 0"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ok",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ListDatabasesResult#totalSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "totalSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "totalSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ListDatabasesResult#totalSizeMb:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "totalSizeMb?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "totalSizeMb",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ListIndexesCursor:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ListIndexesCursor extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractCursor",
              "canonicalReference": "mongodb!AbstractCursor:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ListIndexesCursor",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!ListIndexesCursor:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ListIndexesCursor` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(collection: "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ListIndexesOptions",
                  "canonicalReference": "mongodb!ListIndexesOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collection",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ListIndexesCursor#clone:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "ListIndexesCursor",
                  "canonicalReference": "mongodb!ListIndexesCursor:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "clone"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ListIndexesCursor#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ListIndexesOptions",
                  "canonicalReference": "mongodb!ListIndexesOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ListIndexesCursor#parent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parent: "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ListIndexesOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ListIndexesOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ListIndexesOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ListIndexesOptions#batchSize:member",
              "docComment": "/**\n * The batchSize for the returned command cursor or if pre 2.8 the systems batch collection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "batchSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "batchSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!Logger:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Logger "
            }
          ],
          "releaseTag": "Public",
          "name": "Logger",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!Logger:constructor(1)",
              "docComment": "/**\n * Creates a new Logger instance\n *\n * @param className - The Class name associated with the logging instance\n *\n * @param options - Optional logging settings\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(className: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "LoggerOptions",
                  "canonicalReference": "mongodb!LoggerOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "className",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Logger#className:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Logger.currentLogger:member(1)",
              "docComment": "/**\n * Get the current logger function\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static currentLogger(): "
                },
                {
                  "kind": "Reference",
                  "text": "LoggerFunction",
                  "canonicalReference": "mongodb!LoggerFunction:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "currentLogger"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Logger#debug:member(1)",
              "docComment": "/**\n * Log a message at the debug level\n *\n * @param message - The message to log\n *\n * @param object - Additional meta data to log\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "debug(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", object?: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "object",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "debug"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Logger#error:member(1)",
              "docComment": "/**\n * Log a message at the error level\n *\n * @param message - The message to log\n *\n * @param object - Additional meta data to log\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", object?: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "object",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "error"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Logger.filter:member(1)",
              "docComment": "/**\n * Filter log messages for a particular class\n *\n * @param type - The type of filter (currently only class)\n *\n * @param values - The filters to apply\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static filter(type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", values: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "values",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "filter"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Logger#info:member(1)",
              "docComment": "/**\n * Log a message at the info level\n *\n * @param message - The message to log\n *\n * @param object - Additional meta data to log\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "info(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", object?: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "object",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "info"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Logger#isDebug:member(1)",
              "docComment": "/**\n * Is the logger set at debug level\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isDebug(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "isDebug"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Logger#isError:member(1)",
              "docComment": "/**\n * Is the logger set at error level\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isError(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "isError"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Logger#isInfo:member(1)",
              "docComment": "/**\n * Is the logger set at info level\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isInfo(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "isInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Logger#isWarn:member(1)",
              "docComment": "/**\n * Is the logger set at error level\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isWarn(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "isWarn"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Logger.reset:member(1)",
              "docComment": "/**\n * Resets the logger to default settings, error and no filtered classes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static reset(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "reset"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Logger.setCurrentLogger:member(1)",
              "docComment": "/**\n * Set the current logger function\n *\n * @param logger - Custom logging function\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static setCurrentLogger(logger: "
                },
                {
                  "kind": "Reference",
                  "text": "LoggerFunction",
                  "canonicalReference": "mongodb!LoggerFunction:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "logger",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setCurrentLogger"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Logger.setLevel:member(1)",
              "docComment": "/**\n * Set the current log level\n *\n * @param newLevel - Set current log level (debug, warn, info, error)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static setLevel(newLevel: "
                },
                {
                  "kind": "Reference",
                  "text": "LoggerLevel",
                  "canonicalReference": "mongodb!LoggerLevel:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "newLevel",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "setLevel"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Logger#warn:member(1)",
              "docComment": "/**\n * Log a message at the warn level\n *\n * @param message - The message to log\n *\n * @param object - Additional meta data to log\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "warn(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", object?: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "object",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "warn"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!LoggerFunction:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LoggerFunction = "
            },
            {
              "kind": "Content",
              "text": "(message?: any, ...optionalParams: any[]) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LoggerFunction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!LoggerLevel:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LoggerLevel = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "LoggerLevel",
              "canonicalReference": "mongodb!LoggerLevel:var"
            },
            {
              "kind": "Content",
              "text": "[keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "LoggerLevel",
              "canonicalReference": "mongodb!LoggerLevel:var"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LoggerLevel",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!LoggerLevel:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "LoggerLevel: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    readonly ERROR: \"error\";\n    readonly WARN: \"warn\";\n    readonly INFO: \"info\";\n    readonly DEBUG: \"debug\";\n    readonly error: \"error\";\n    readonly warn: \"warn\";\n    readonly info: \"info\";\n    readonly debug: \"debug\";\n}>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "LoggerLevel",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!LoggerOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface LoggerOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "LoggerOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!LoggerOptions#logger:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logger?: "
                },
                {
                  "kind": "Reference",
                  "text": "LoggerFunction",
                  "canonicalReference": "mongodb!LoggerFunction:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "logger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!LoggerOptions#loggerLevel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loggerLevel?: "
                },
                {
                  "kind": "Reference",
                  "text": "LoggerLevel",
                  "canonicalReference": "mongodb!LoggerLevel:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "loggerLevel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!MapFunction:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type MapFunction<TSchema = "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(this: TSchema) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "MapFunction",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!MapReduceOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MapReduceOptions<TKey = "
            },
            {
              "kind": "Reference",
              "text": "ObjectId",
              "canonicalReference": "bson!~ObjectId:class"
            },
            {
              "kind": "Content",
              "text": ", TValue = "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TKey",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "typeParameterName": "TValue",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "MapReduceOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MapReduceOptions#bypassDocumentValidation:member",
              "docComment": "/**\n * Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bypassDocumentValidation?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bypassDocumentValidation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MapReduceOptions#finalize:member",
              "docComment": "/**\n * Finalize function.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "finalize?: "
                },
                {
                  "kind": "Reference",
                  "text": "FinalizeFunction",
                  "canonicalReference": "mongodb!FinalizeFunction:type"
                },
                {
                  "kind": "Content",
                  "text": "<TKey, TValue> | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "finalize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MapReduceOptions#jsMode:member",
              "docComment": "/**\n * It is possible to make the execution stay in JS. Provided in MongoDB \\> 2.0.X.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "jsMode?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "jsMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MapReduceOptions#keeptemp:member",
              "docComment": "/**\n * Keep temporary data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keeptemp?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "keeptemp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MapReduceOptions#limit:member",
              "docComment": "/**\n * Number of objects to return from collection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "limit?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "limit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MapReduceOptions#out:member",
              "docComment": "/**\n * Sets the output target for the map reduce job.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "out?: "
                },
                {
                  "kind": "Content",
                  "text": "'inline' | {\n        inline: 1;\n    } | {\n        replace: string;\n    } | {\n        merge: string;\n    } | {\n        reduce: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "out",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MapReduceOptions#query:member",
              "docComment": "/**\n * Query filter object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "query?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "query",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MapReduceOptions#scope:member",
              "docComment": "/**\n * Can pass in variables that can be access from map/reduce/finalize.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scope?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "scope",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MapReduceOptions#sort:member",
              "docComment": "/**\n * Sorts the input objects using this key. Useful for optimization, like sorting by the emit key for fewer reduces.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sort?: "
                },
                {
                  "kind": "Reference",
                  "text": "Sort",
                  "canonicalReference": "mongodb!Sort:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sort",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MapReduceOptions#verbose:member",
              "docComment": "/**\n * Provide statistics on job execution time.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "verbose?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "verbose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 6
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!MatchKeysAndValues:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type MatchKeysAndValues<TSchema> = "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    [Property in "
            },
            {
              "kind": "Reference",
              "text": "Join",
              "canonicalReference": "mongodb!Join:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NestedPaths",
              "canonicalReference": "mongodb!NestedPaths:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema>, '.'>]?: "
            },
            {
              "kind": "Reference",
              "text": "PropertyType",
              "canonicalReference": "mongodb!PropertyType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, Property>;\n} & {\n    [Property in `${"
            },
            {
              "kind": "Reference",
              "text": "NestedPathsOfType",
              "canonicalReference": "mongodb!NestedPathsOfType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, any[]>}.$${`[${string}]` | ''}`]?: "
            },
            {
              "kind": "Reference",
              "text": "ArrayElement",
              "canonicalReference": "mongodb!ArrayElement:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PropertyType",
              "canonicalReference": "mongodb!PropertyType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, Property extends `${infer Key}.$${string}` ? Key : never>>;\n} & {\n    [Property in `${"
            },
            {
              "kind": "Reference",
              "text": "NestedPathsOfType",
              "canonicalReference": "mongodb!NestedPathsOfType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>[]>}.$${`[${string}]` | ''}.${string}`]?: any;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "MatchKeysAndValues",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 19
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ModifyResult:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ModifyResult<TSchema = "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "ModifyResult",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ModifyResult#lastErrorObject:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lastErrorObject?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "lastErrorObject",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ModifyResult#ok:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ok: "
                },
                {
                  "kind": "Content",
                  "text": "0 | 1"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ok",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ModifyResult#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Reference",
                  "text": "WithId",
                  "canonicalReference": "mongodb!WithId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema> | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!MONGO_CLIENT_EVENTS:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "MONGO_CLIENT_EVENTS: "
            },
            {
              "kind": "Content",
              "text": "readonly [\"connectionPoolCreated\", \"connectionPoolClosed\", \"connectionCreated\", \"connectionReady\", \"connectionClosed\", \"connectionCheckOutStarted\", \"connectionCheckOutFailed\", \"connectionCheckedOut\", \"connectionCheckedIn\", \"connectionPoolCleared\", \"commandStarted\", \"commandSucceeded\", \"commandFailed\", \"serverOpening\", \"serverClosed\", \"serverDescriptionChanged\", \"topologyOpening\", \"topologyClosed\", \"topologyDescriptionChanged\", \"error\", \"timeout\", \"close\", \"serverHeartbeatStarted\", \"serverHeartbeatSucceeded\", \"serverHeartbeatFailed\"]"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "MONGO_CLIENT_EVENTS",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoAPIError:class",
          "docComment": "/**\n * An error generated when the driver API is used incorrectly\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoAPIError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoDriverError",
              "canonicalReference": "mongodb!MongoDriverError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoAPIError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoAPIError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoAPIError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoAPIError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoAWSError:class",
          "docComment": "/**\n * A error generated when the user attempts to authenticate via AWS, but fails\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoAWSError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoRuntimeError",
              "canonicalReference": "mongodb!MongoRuntimeError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoAWSError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoAWSError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoAWSError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoAWSError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoBatchReExecutionError:class",
          "docComment": "/**\n * An error generated when a batch command is re-executed after one of the commands in the batch has failed\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoBatchReExecutionError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoAPIError",
              "canonicalReference": "mongodb!MongoAPIError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoBatchReExecutionError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoBatchReExecutionError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoBatchReExecutionError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoBatchReExecutionError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoBulkWriteError:class",
          "docComment": "/**\n * An error indicating an unsuccessful Bulk Write\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoBulkWriteError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoServerError",
              "canonicalReference": "mongodb!MongoServerError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoBulkWriteError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoBulkWriteError:constructor(1)",
              "docComment": "/**\n * Creates a new MongoBulkWriteError\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(error: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        message: string;\n        code: number;\n        writeErrors?: "
                },
                {
                  "kind": "Reference",
                  "text": "WriteError",
                  "canonicalReference": "mongodb!WriteError:class"
                },
                {
                  "kind": "Content",
                  "text": "[];\n    } | "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcernError",
                  "canonicalReference": "mongodb!WriteConcernError:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "AnyError",
                  "canonicalReference": "mongodb!AnyError:type"
                },
                {
                  "kind": "Content",
                  "text": ", result: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteResult",
                  "canonicalReference": "mongodb!BulkWriteResult:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoBulkWriteError#deletedCount:member",
              "docComment": "/**\n * Number of documents deleted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get deletedCount(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "deletedCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoBulkWriteError#err:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "err?: "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcernError",
                  "canonicalReference": "mongodb!WriteConcernError:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "err",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoBulkWriteError#insertedCount:member",
              "docComment": "/**\n * Number of documents inserted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get insertedCount(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "insertedCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoBulkWriteError#insertedIds:member",
              "docComment": "/**\n * Inserted document generated Id's, hash key is the index of the originating operation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get insertedIds(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: number]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "insertedIds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoBulkWriteError#matchedCount:member",
              "docComment": "/**\n * Number of documents matched for update.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get matchedCount(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "matchedCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoBulkWriteError#modifiedCount:member",
              "docComment": "/**\n * Number of documents modified.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get modifiedCount(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "modifiedCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoBulkWriteError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoBulkWriteError#result:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "result: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteResult",
                  "canonicalReference": "mongodb!BulkWriteResult:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "result",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoBulkWriteError#upsertedCount:member",
              "docComment": "/**\n * Number of documents upserted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get upsertedCount(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "upsertedCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoBulkWriteError#upsertedIds:member",
              "docComment": "/**\n * Upserted document generated Id's, hash key is the index of the originating operation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get upsertedIds(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: number]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "upsertedIds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoBulkWriteError#writeErrors:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "writeErrors: "
                },
                {
                  "kind": "Reference",
                  "text": "OneOrMore",
                  "canonicalReference": "mongodb!OneOrMore:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WriteError",
                  "canonicalReference": "mongodb!WriteError:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "writeErrors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoChangeStreamError:class",
          "docComment": "/**\n * An error generated when a ChangeStream operation fails to execute.\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoChangeStreamError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoRuntimeError",
              "canonicalReference": "mongodb!MongoRuntimeError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoChangeStreamError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoChangeStreamError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoChangeStreamError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoChangeStreamError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoClient:class",
          "docComment": "/**\n * The **MongoClient** class is a class that allows for making Connections to MongoDB.\n *\n * @remarks\n *\n * The programmatically provided options take precedent over the URI options.\n *\n * @example\n * ```js\n * // Connect using a MongoClient instance\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * const mongoClient = new MongoClient(url);\n * mongoClient.connect(function(err, client) {\n *   const db = client.db(dbName);\n *   client.close();\n * });\n * ```\n *\n * @example\n * ```js\n * // Connect using the MongoClient.connect static method\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   const db = client.db(dbName);\n *   client.close();\n * });\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoClient extends "
            },
            {
              "kind": "Reference",
              "text": "TypedEventEmitter",
              "canonicalReference": "mongodb!TypedEventEmitter:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MongoClientEvents",
              "canonicalReference": "mongodb!MongoClientEvents:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoClient",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoClient:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoClient` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "MongoClientOptions",
                  "canonicalReference": "mongodb!MongoClientOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoClient#autoEncrypter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get autoEncrypter(): "
                },
                {
                  "kind": "Reference",
                  "text": "AutoEncrypter",
                  "canonicalReference": "mongodb!AutoEncrypter:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "autoEncrypter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoClient#bsonOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get bsonOptions(): "
                },
                {
                  "kind": "Reference",
                  "text": "BSONSerializeOptions",
                  "canonicalReference": "mongodb!BSONSerializeOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bsonOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoClient#close:member(1)",
              "docComment": "/**\n * Close the db and its underlying connections\n *\n * @param force - Force close, emitting no events\n *\n * @param callback - An optional callback, a Promise will be returned if none is provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "close(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "close"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoClient#close:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "close(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "close"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoClient#close:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "close(force: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "force",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "close"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoClient#close:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "close(force: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "force",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "close"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoClient#connect:member(1)",
              "docComment": "/**\n * Connect to MongoDB using a url\n *\n * @see\n *\n * docs.mongodb.org/manual/reference/connection-string/\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connect(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "connect"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoClient#connect:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connect(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "connect"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoClient.connect:member(1)",
              "docComment": "/**\n * Connect to MongoDB using a url\n *\n * @remarks\n *\n * The programmatically provided options take precedent over the URI options.\n *\n * @see\n *\n * https://docs.mongodb.org/manual/reference/connection-string/\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static connect(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MongoClient",
                  "canonicalReference": "mongodb!MongoClient:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "connect"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoClient.connect:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static connect(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MongoClient",
                  "canonicalReference": "mongodb!MongoClient:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "connect"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoClient.connect:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static connect(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "MongoClientOptions",
                  "canonicalReference": "mongodb!MongoClientOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MongoClient",
                  "canonicalReference": "mongodb!MongoClient:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "connect"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoClient.connect:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static connect(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "MongoClientOptions",
                  "canonicalReference": "mongodb!MongoClientOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MongoClient",
                  "canonicalReference": "mongodb!MongoClient:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "connect"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoClient#db:member(1)",
              "docComment": "/**\n * Create a new Db instance sharing the current socket connections.\n *\n * @param dbName - The name of the database we want to use. If not provided, use database name from connection string.\n *\n * @param options - Optional settings for Db construction\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "db(dbName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "DbOptions",
                  "canonicalReference": "mongodb!DbOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Db",
                  "canonicalReference": "mongodb!Db:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dbName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "db"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoClient#getLogger:member(1)",
              "docComment": "/**\n * Return the mongo client logger\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLogger(): "
                },
                {
                  "kind": "Reference",
                  "text": "Logger",
                  "canonicalReference": "mongodb!Logger:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getLogger"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoClient#logger:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get logger(): "
                },
                {
                  "kind": "Reference",
                  "text": "Logger",
                  "canonicalReference": "mongodb!Logger:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "logger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoClient#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get options(): "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MongoOptions",
                  "canonicalReference": "mongodb!MongoOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoClient#readConcern:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get readConcern(): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadConcern",
                  "canonicalReference": "mongodb!ReadConcern:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoClient#readPreference:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get readPreference(): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readPreference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoClient#serverApi:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get serverApi(): "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ServerApi",
                  "canonicalReference": "mongodb!ServerApi:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "serverApi",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoClient#startSession:member(1)",
              "docComment": "/**\n * Starts a new session on the server\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "startSession(): "
                },
                {
                  "kind": "Reference",
                  "text": "ClientSession",
                  "canonicalReference": "mongodb!ClientSession:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "startSession"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoClient#startSession:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "startSession(options: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientSessionOptions",
                  "canonicalReference": "mongodb!ClientSessionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ClientSession",
                  "canonicalReference": "mongodb!ClientSession:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "startSession"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoClient#watch:member(1)",
              "docComment": "/**\n * Create a new Change Stream, watching for new changes (insertions, updates, replacements, deletions, and invalidations) in this cluster. Will ignore all changes to system collections, as well as the local, admin, and config databases.\n *\n * @remarks\n *\n * watch() accepts two generic arguments for distinct usecases: - The first is to provide the schema that may be defined for all the data within the current cluster - The second is to override the shape of the change stream document entirely, if it is not provided the type will default to ChangeStreamDocument of the first argument\n *\n * @param pipeline - An array of {@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/ | aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n *\n * @param options - Optional settings for the command\n *\n * @typeParam TSchema - Type of the data being detected by the change stream\n *\n * @typeParam TChange - Type of the whole change stream document emitted\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "watch<TSchema extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ", TChange extends "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Reference",
                  "text": "ChangeStreamDocument",
                  "canonicalReference": "mongodb!ChangeStreamDocument:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ">(pipeline?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ChangeStreamOptions",
                  "canonicalReference": "mongodb!ChangeStreamOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ChangeStream",
                  "canonicalReference": "mongodb!ChangeStream:class"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema, TChange>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TSchema",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "typeParameterName": "TChange",
                  "constraintTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 11
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 19
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pipeline",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 14
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "watch"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoClient#withSession:member(1)",
              "docComment": "/**\n * Runs a given operation with an implicitly created session. The lifetime of the session will be handled without the need for user interaction.\n *\n * NOTE: presently the operation MUST return a Promise (either explicit or implicitly as an async function)\n *\n * @param options - Optional settings for the command\n *\n * @param callback - An callback to execute with an implicitly created session\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withSession(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "WithSessionCallback",
                  "canonicalReference": "mongodb!WithSessionCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "withSession"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoClient#withSession:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withSession(options: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientSessionOptions",
                  "canonicalReference": "mongodb!ClientSessionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "WithSessionCallback",
                  "canonicalReference": "mongodb!WithSessionCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "withSession"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoClient#writeConcern:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get writeConcern(): "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcern",
                  "canonicalReference": "mongodb!WriteConcern:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "writeConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!MongoClientEvents:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type MongoClientEvents = "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TopologyEvents",
              "canonicalReference": "mongodb!TopologyEvents:type"
            },
            {
              "kind": "Content",
              "text": ", typeof "
            },
            {
              "kind": "Reference",
              "text": "MONGO_CLIENT_EVENTS",
              "canonicalReference": "mongodb!MONGO_CLIENT_EVENTS:var"
            },
            {
              "kind": "Content",
              "text": "[number]> & {\n    open(mongoClient: "
            },
            {
              "kind": "Reference",
              "text": "MongoClient",
              "canonicalReference": "mongodb!MongoClient:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "MongoClientEvents",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!MongoClientOptions:interface",
          "docComment": "/**\n * Describes all possible URI query options for the mongo client\n *\n * @see\n *\n * https://docs.mongodb.com/manual/reference/connection-string\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MongoClientOptions extends "
            },
            {
              "kind": "Reference",
              "text": "BSONSerializeOptions",
              "canonicalReference": "mongodb!BSONSerializeOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "SupportedNodeConnectionOptions",
              "canonicalReference": "mongodb!SupportedNodeConnectionOptions:type"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoClientOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#appName:member",
              "docComment": "/**\n * The name of the application that created this MongoClient instance. MongoDB 3.4 and newer will print this value in the server log upon establishing each connection. It is also recorded in the slow query log and profile collections\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "appName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#auth:member",
              "docComment": "/**\n * The auth settings for when connection to server.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "auth?: "
                },
                {
                  "kind": "Reference",
                  "text": "Auth",
                  "canonicalReference": "mongodb!Auth:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "auth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#authMechanism:member",
              "docComment": "/**\n * Specify the authentication mechanism that MongoDB will use to authenticate the connection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authMechanism?: "
                },
                {
                  "kind": "Reference",
                  "text": "AuthMechanism",
                  "canonicalReference": "mongodb!AuthMechanism:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "authMechanism",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#authMechanismProperties:member",
              "docComment": "/**\n * Specify properties for the specified authMechanism as a comma-separated list of colon-separated key-value pairs.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authMechanismProperties?: "
                },
                {
                  "kind": "Reference",
                  "text": "AuthMechanismProperties",
                  "canonicalReference": "mongodb!AuthMechanismProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "authMechanismProperties",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#authSource:member",
              "docComment": "/**\n * Specify the database name associated with the user’s credentials.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authSource?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "authSource",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#autoEncryption:member",
              "docComment": "/**\n * Optionally enable client side auto encryption\n *\n * @remarks\n *\n * Automatic encryption is an enterprise only feature that only applies to operations on a collection. Automatic encryption is not supported for operations on a database or view, and operations that are not bypassed will result in error (see [libmongocrypt: Auto Encryption Allow-List](https://github.com/mongodb/specifications/blob/master/source/client-side-encryption/client-side-encryption.rst#libmongocrypt-auto-encryption-allow-list)). To bypass automatic encryption for all operations, set bypassAutoEncryption=true in AutoEncryptionOpts.\n *\n * Automatic encryption requires the authenticated user to have the [listCollections privilege action](https://docs.mongodb.com/manual/reference/command/listCollections/#dbcmd.listCollections).\n *\n * If a MongoClient with a limited connection pool size (i.e a non-zero maxPoolSize) is configured with AutoEncryptionOptions, a separate internal MongoClient is created if any of the following are true: - AutoEncryptionOptions.keyVaultClient is not passed. - AutoEncryptionOptions.bypassAutomaticEncryption is false.\n *\n * If an internal MongoClient is created, it is configured with the same options as the parent MongoClient except minPoolSize is set to 0 and AutoEncryptionOptions is omitted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "autoEncryption?: "
                },
                {
                  "kind": "Reference",
                  "text": "AutoEncryptionOptions",
                  "canonicalReference": "mongodb!AutoEncryptionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "autoEncryption",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#compressors:member",
              "docComment": "/**\n * An array or comma-delimited string of compressors to enable network compression for communication between this client and a mongod/mongos instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compressors?: "
                },
                {
                  "kind": "Reference",
                  "text": "CompressorName",
                  "canonicalReference": "mongodb!CompressorName:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "compressors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#connectTimeoutMS:member",
              "docComment": "/**\n * The time in milliseconds to attempt a connection before timing out.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectTimeoutMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "connectTimeoutMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#directConnection:member",
              "docComment": "/**\n * Allow a driver to force a Single topology type with a connection string containing one host\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "directConnection?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "directConnection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#driverInfo:member",
              "docComment": "/**\n * Allows a wrapping driver to amend the client metadata generated by the driver to include information about the wrapping driver\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "driverInfo?: "
                },
                {
                  "kind": "Reference",
                  "text": "DriverInfo",
                  "canonicalReference": "mongodb!DriverInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "driverInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#forceServerObjectId:member",
              "docComment": "/**\n * Force server to assign `_id` values instead of driver\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forceServerObjectId?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "forceServerObjectId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#heartbeatFrequencyMS:member",
              "docComment": "/**\n * heartbeatFrequencyMS controls when the driver checks the state of the MongoDB deployment. Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "heartbeatFrequencyMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "heartbeatFrequencyMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#journal:member",
              "docComment": "/**\n * The journal write concern\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "journal?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "journal",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#keepAlive:member",
              "docComment": "/**\n * TCP Connection keep alive enabled\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keepAlive?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "keepAlive",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#keepAliveInitialDelay:member",
              "docComment": "/**\n * The number of milliseconds to wait before initiating keepAlive on the TCP socket\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keepAliveInitialDelay?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "keepAliveInitialDelay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#loadBalanced:member",
              "docComment": "/**\n * Instruct the driver it is connecting to a load balancer fronting a mongos like service\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadBalanced?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "loadBalanced",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#localThresholdMS:member",
              "docComment": "/**\n * The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "localThresholdMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "localThresholdMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#logger:member",
              "docComment": "/**\n * Custom logger object\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logger?: "
                },
                {
                  "kind": "Reference",
                  "text": "Logger",
                  "canonicalReference": "mongodb!Logger:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "logger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#loggerLevel:member",
              "docComment": "/**\n * The logging level\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loggerLevel?: "
                },
                {
                  "kind": "Reference",
                  "text": "LoggerLevel",
                  "canonicalReference": "mongodb!LoggerLevel:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "loggerLevel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#maxConnecting:member",
              "docComment": "/**\n * The maximum number of connections that may be in the process of being established concurrently by the connection pool.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxConnecting?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxConnecting",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#maxIdleTimeMS:member",
              "docComment": "/**\n * The maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxIdleTimeMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxIdleTimeMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#maxPoolSize:member",
              "docComment": "/**\n * The maximum number of connections in the connection pool.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxPoolSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxPoolSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#maxStalenessSeconds:member",
              "docComment": "/**\n * Specifies, in seconds, how stale a secondary can be before the client stops using it for read operations.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxStalenessSeconds?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxStalenessSeconds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#minHeartbeatFrequencyMS:member",
              "docComment": "/**\n * Sets the minimum heartbeat frequency. In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minHeartbeatFrequencyMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "minHeartbeatFrequencyMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#minPoolSize:member",
              "docComment": "/**\n * The minimum number of connections in the connection pool.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minPoolSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "minPoolSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#monitorCommands:member",
              "docComment": "/**\n * Enable command monitoring for this client\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "monitorCommands?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "monitorCommands",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#noDelay:member",
              "docComment": "/**\n * TCP Connection no delay\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "noDelay?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "noDelay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#pkFactory:member",
              "docComment": "/**\n * A primary key factory function for generation of custom `_id` keys\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pkFactory?: "
                },
                {
                  "kind": "Reference",
                  "text": "PkFactory",
                  "canonicalReference": "mongodb!PkFactory:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pkFactory",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#promiseLibrary:member",
              "docComment": "/**\n * A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "promiseLibrary?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "promiseLibrary",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#proxyHost:member",
              "docComment": "/**\n * Configures a Socks5 proxy host used for creating TCP connections.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "proxyHost?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "proxyHost",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#proxyPassword:member",
              "docComment": "/**\n * Configures a Socks5 proxy password when the proxy in proxyHost requires username/password authentication.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "proxyPassword?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "proxyPassword",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#proxyPort:member",
              "docComment": "/**\n * Configures a Socks5 proxy port used for creating TCP connections.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "proxyPort?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "proxyPort",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#proxyUsername:member",
              "docComment": "/**\n * Configures a Socks5 proxy username when the proxy in proxyHost requires username/password authentication.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "proxyUsername?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "proxyUsername",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#raw:member",
              "docComment": "/**\n * Return document results as raw BSON buffers\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "raw?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "raw",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#readConcern:member",
              "docComment": "/**\n * Specify a read concern for the collection (only MongoDB 3.2 or higher supported)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readConcern?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadConcernLike",
                  "canonicalReference": "mongodb!ReadConcernLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#readConcernLevel:member",
              "docComment": "/**\n * The level of isolation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readConcernLevel?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadConcernLevel",
                  "canonicalReference": "mongodb!ReadConcernLevel:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readConcernLevel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#readPreference:member",
              "docComment": "/**\n * Specifies the read preferences for this connection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readPreference?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreferenceMode",
                  "canonicalReference": "mongodb!ReadPreferenceMode:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readPreference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#readPreferenceTags:member",
              "docComment": "/**\n * Specifies the tags document as a comma-separated list of colon-separated key-value pairs.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readPreferenceTags?: "
                },
                {
                  "kind": "Reference",
                  "text": "TagSet",
                  "canonicalReference": "mongodb!TagSet:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readPreferenceTags",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#replicaSet:member",
              "docComment": "/**\n * Specifies the name of the replica set, if the mongod is a member of a replica set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replicaSet?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "replicaSet",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#retryReads:member",
              "docComment": "/**\n * Enables retryable reads.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retryReads?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "retryReads",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#retryWrites:member",
              "docComment": "/**\n * Enable retryable writes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retryWrites?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "retryWrites",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#serverApi:member",
              "docComment": "/**\n * Server API version\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverApi?: "
                },
                {
                  "kind": "Reference",
                  "text": "ServerApi",
                  "canonicalReference": "mongodb!ServerApi:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ServerApiVersion",
                  "canonicalReference": "mongodb!ServerApiVersion:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "serverApi",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#serverSelectionTimeoutMS:member",
              "docComment": "/**\n * Specifies how long (in milliseconds) to block for server selection before throwing an exception.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverSelectionTimeoutMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "serverSelectionTimeoutMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#socketTimeoutMS:member",
              "docComment": "/**\n * The time in milliseconds to attempt a send or receive on a socket before the attempt times out.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "socketTimeoutMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "socketTimeoutMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#srvMaxHosts:member",
              "docComment": "/**\n * The maximum number of hosts to connect to when using an srv connection string, a setting of `0` means unlimited hosts\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "srvMaxHosts?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "srvMaxHosts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#srvServiceName:member",
              "docComment": "/**\n * Modifies the srv URI to look like:\n *\n * `_{srvServiceName}._tcp.{hostname}.{domainname}`\n *\n * Querying this DNS URI is expected to respond with SRV records\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "srvServiceName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "srvServiceName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#ssl:member",
              "docComment": "/**\n * A boolean to enable or disables TLS/SSL for the connection. (The ssl option is equivalent to the tls option.)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ssl?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "ssl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#sslCA:member",
              "docComment": "/**\n * SSL Certificate file path.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sslCA?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sslCA",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#sslCert:member",
              "docComment": "/**\n * SSL Certificate file path.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sslCert?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sslCert",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#sslCRL:member",
              "docComment": "/**\n * SSL Certificate revocation list file path.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sslCRL?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sslCRL",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#sslKey:member",
              "docComment": "/**\n * SSL Key file file path.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sslKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sslKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#sslPass:member",
              "docComment": "/**\n * SSL Certificate pass phrase.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sslPass?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sslPass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#sslValidate:member",
              "docComment": "/**\n * Validate mongod server certificate against Certificate Authority\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sslValidate?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sslValidate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#tls:member",
              "docComment": "/**\n * Enables or disables TLS/SSL for the connection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tls?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tls",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#tlsAllowInvalidCertificates:member",
              "docComment": "/**\n * Bypasses validation of the certificates presented by the mongod/mongos instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tlsAllowInvalidCertificates?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tlsAllowInvalidCertificates",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#tlsAllowInvalidHostnames:member",
              "docComment": "/**\n * Disables hostname validation of the certificate presented by the mongod/mongos instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tlsAllowInvalidHostnames?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tlsAllowInvalidHostnames",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#tlsCAFile:member",
              "docComment": "/**\n * Specifies the location of a local .pem file that contains the root certificate chain from the Certificate Authority. This file is used to validate the certificate presented by the mongod/mongos instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tlsCAFile?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tlsCAFile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#tlsCertificateFile:member",
              "docComment": "/**\n * Specifies the location of a local TLS Certificate\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tlsCertificateFile?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tlsCertificateFile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#tlsCertificateKeyFile:member",
              "docComment": "/**\n * Specifies the location of a local .pem file that contains either the client's TLS/SSL certificate and key or only the client's TLS/SSL key when tlsCertificateFile is used to provide the certificate.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tlsCertificateKeyFile?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tlsCertificateKeyFile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#tlsCertificateKeyFilePassword:member",
              "docComment": "/**\n * Specifies the password to de-crypt the tlsCertificateKeyFile.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tlsCertificateKeyFilePassword?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tlsCertificateKeyFilePassword",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#tlsInsecure:member",
              "docComment": "/**\n * Disables various certificate validations.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tlsInsecure?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tlsInsecure",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#w:member",
              "docComment": "/**\n * The write concern w value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "w?: "
                },
                {
                  "kind": "Reference",
                  "text": "W",
                  "canonicalReference": "mongodb!W:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "w",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#waitQueueTimeoutMS:member",
              "docComment": "/**\n * The maximum time in milliseconds that a thread can wait for a connection to become available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "waitQueueTimeoutMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "waitQueueTimeoutMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#wtimeoutMS:member",
              "docComment": "/**\n * The write concern timeout\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wtimeoutMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "wtimeoutMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoClientOptions#zlibCompressionLevel:member",
              "docComment": "/**\n * An integer that specifies the compression level if using zlib for network compression.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "zlibCompressionLevel?: "
                },
                {
                  "kind": "Content",
                  "text": "0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "zlibCompressionLevel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoCompatibilityError:class",
          "docComment": "/**\n * An error generated when a feature that is not enabled or allowed for the current server configuration is used\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoCompatibilityError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoAPIError",
              "canonicalReference": "mongodb!MongoAPIError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoCompatibilityError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoCompatibilityError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoCompatibilityError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoCompatibilityError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoCredentials:class",
          "docComment": "/**\n * A representation of the credentials used by MongoDB\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoCredentials "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoCredentials",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoCredentials:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoCredentials` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options: "
                },
                {
                  "kind": "Reference",
                  "text": "MongoCredentialsOptions",
                  "canonicalReference": "mongodb!MongoCredentialsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoCredentials#equals:member(1)",
              "docComment": "/**\n * Determines if two MongoCredentials objects are equivalent\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(other: "
                },
                {
                  "kind": "Reference",
                  "text": "MongoCredentials",
                  "canonicalReference": "mongodb!MongoCredentials:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "equals"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoCredentials#mechanism:member",
              "docComment": "/**\n * The method used to authenticate\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly mechanism: "
                },
                {
                  "kind": "Reference",
                  "text": "AuthMechanism",
                  "canonicalReference": "mongodb!AuthMechanism:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mechanism",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoCredentials#mechanismProperties:member",
              "docComment": "/**\n * Special properties used by some types of auth mechanisms\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly mechanismProperties: "
                },
                {
                  "kind": "Reference",
                  "text": "AuthMechanismProperties",
                  "canonicalReference": "mongodb!AuthMechanismProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mechanismProperties",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoCredentials.merge:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static merge(creds: "
                },
                {
                  "kind": "Reference",
                  "text": "MongoCredentials",
                  "canonicalReference": "mongodb!MongoCredentials:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MongoCredentialsOptions",
                  "canonicalReference": "mongodb!MongoCredentialsOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "MongoCredentials",
                  "canonicalReference": "mongodb!MongoCredentials:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "creds",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "merge"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoCredentials#password:member",
              "docComment": "/**\n * The password used for authentication\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly password: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "password",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoCredentials#resolveAuthMechanism:member(1)",
              "docComment": "/**\n * If the authentication mechanism is set to \"default\", resolves the authMechanism based on the server version and server supported sasl mechanisms.\n *\n * @param hello - A hello response from the server\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resolveAuthMechanism(hello?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "MongoCredentials",
                  "canonicalReference": "mongodb!MongoCredentials:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "hello",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "resolveAuthMechanism"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoCredentials#source:member",
              "docComment": "/**\n * The database that the user should authenticate against\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly source: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "source",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoCredentials#username:member",
              "docComment": "/**\n * The username used for authentication\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "username",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoCredentials#validate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "validate(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "validate"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!MongoCredentialsOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MongoCredentialsOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoCredentialsOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoCredentialsOptions#db:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "db?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "db",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoCredentialsOptions#mechanism:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mechanism?: "
                },
                {
                  "kind": "Reference",
                  "text": "AuthMechanism",
                  "canonicalReference": "mongodb!AuthMechanism:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "mechanism",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoCredentialsOptions#mechanismProperties:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mechanismProperties: "
                },
                {
                  "kind": "Reference",
                  "text": "AuthMechanismProperties",
                  "canonicalReference": "mongodb!AuthMechanismProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mechanismProperties",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoCredentialsOptions#password:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "password: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "password",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoCredentialsOptions#source:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "source: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "source",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoCredentialsOptions#username:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "username",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoCursorExhaustedError:class",
          "docComment": "/**\n * An error thrown when an attempt is made to read from a cursor that has been exhausted\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoCursorExhaustedError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoAPIError",
              "canonicalReference": "mongodb!MongoAPIError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoCursorExhaustedError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoCursorExhaustedError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoCursorExhaustedError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoCursorExhaustedError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoCursorInUseError:class",
          "docComment": "/**\n * An error thrown when the user attempts to add options to a cursor that has already been initialized\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoCursorInUseError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoAPIError",
              "canonicalReference": "mongodb!MongoAPIError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoCursorInUseError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoCursorInUseError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoCursorInUseError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoCursorInUseError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoDBNamespace:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoDBNamespace "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoDBNamespace",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoDBNamespace:constructor(1)",
              "docComment": "/**\n * Create a namespace object\n *\n * @param db - database name\n *\n * @param collection - collection name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(db: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", collection?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "db",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "collection",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoDBNamespace#collection:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collection?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoDBNamespace#db:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "db: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "db",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoDBNamespace.fromString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromString(namespace?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "MongoDBNamespace",
                  "canonicalReference": "mongodb!MongoDBNamespace:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "namespace",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "fromString"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoDBNamespace#toString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "toString"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoDBNamespace#withCollection:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withCollection(collection: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "MongoDBNamespace",
                  "canonicalReference": "mongodb!MongoDBNamespace:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collection",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "withCollection"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoDecompressionError:class",
          "docComment": "/**\n * An error generated when the driver fails to decompress data received from the server.\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoDecompressionError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoRuntimeError",
              "canonicalReference": "mongodb!MongoRuntimeError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoDecompressionError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoDecompressionError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoDecompressionError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoDecompressionError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoDriverError:class",
          "docComment": "/**\n * An error generated by the driver\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoDriverError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoError",
              "canonicalReference": "mongodb!MongoError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoDriverError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoDriverError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoDriverError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoDriverError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoError:class",
          "docComment": "/**\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoError extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoError#addErrorLabel:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addErrorLabel(label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addErrorLabel"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoError#code:member",
              "docComment": "/**\n * This is a number in MongoServerError and a string in MongoDriverError\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "code?: "
                },
                {
                  "kind": "Content",
                  "text": "number | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "code",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoError#errmsg:member",
              "docComment": "/**\n * Legacy name for server error responses\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get errmsg(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errmsg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoError#errorLabels:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get errorLabels(): "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorLabels",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!MongoError#hasErrorLabel:member(1)",
              "docComment": "/**\n * Checks the error to see if it has an error label\n *\n * @param label - The error label to check for\n *\n * @returns returns true if the error has the provided error label\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasErrorLabel(label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "hasErrorLabel"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoError#topologyVersion:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "topologyVersion?: "
                },
                {
                  "kind": "Reference",
                  "text": "TopologyVersion",
                  "canonicalReference": "mongodb!TopologyVersion:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "topologyVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!MongoErrorLabel:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type MongoErrorLabel = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "MongoErrorLabel",
              "canonicalReference": "mongodb!MongoErrorLabel:var"
            },
            {
              "kind": "Content",
              "text": "[keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "MongoErrorLabel",
              "canonicalReference": "mongodb!MongoErrorLabel:var"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "MongoErrorLabel",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!MongoErrorLabel:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "MongoErrorLabel: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    readonly RetryableWriteError: \"RetryableWriteError\";\n    readonly TransientTransactionError: \"TransientTransactionError\";\n    readonly UnknownTransactionCommitResult: \"UnknownTransactionCommitResult\";\n    readonly ResumableChangeStreamError: \"ResumableChangeStreamError\";\n    readonly HandshakeError: \"HandshakeError\";\n}>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "MongoErrorLabel",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoExpiredSessionError:class",
          "docComment": "/**\n * An error generated when the user attempts to operate on a session that has expired or has been closed.\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoExpiredSessionError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoAPIError",
              "canonicalReference": "mongodb!MongoAPIError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoExpiredSessionError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoExpiredSessionError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoExpiredSessionError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoExpiredSessionError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoGridFSChunkError:class",
          "docComment": "/**\n * An error generated when a malformed or invalid chunk is encountered when reading from a GridFSStream.\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoGridFSChunkError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoRuntimeError",
              "canonicalReference": "mongodb!MongoRuntimeError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoGridFSChunkError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoGridFSChunkError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoGridFSChunkError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoGridFSChunkError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoGridFSStreamError:class",
          "docComment": "/**\n * An error generated when a GridFSStream operation fails to execute.\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoGridFSStreamError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoRuntimeError",
              "canonicalReference": "mongodb!MongoRuntimeError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoGridFSStreamError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoGridFSStreamError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoGridFSStreamError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoGridFSStreamError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoInvalidArgumentError:class",
          "docComment": "/**\n * An error generated when the user supplies malformed or unexpected arguments or when a required argument or field is not provided.\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoInvalidArgumentError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoAPIError",
              "canonicalReference": "mongodb!MongoAPIError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoInvalidArgumentError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoInvalidArgumentError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoInvalidArgumentError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoInvalidArgumentError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoKerberosError:class",
          "docComment": "/**\n * A error generated when the user attempts to authenticate via Kerberos, but fails to connect to the Kerberos client.\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoKerberosError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoRuntimeError",
              "canonicalReference": "mongodb!MongoRuntimeError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoKerberosError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoKerberosError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoKerberosError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoKerberosError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoMissingCredentialsError:class",
          "docComment": "/**\n * An error generated when the user fails to provide authentication credentials before attempting to connect to a mongo server instance.\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoMissingCredentialsError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoAPIError",
              "canonicalReference": "mongodb!MongoAPIError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoMissingCredentialsError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoMissingCredentialsError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoMissingCredentialsError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoMissingCredentialsError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoMissingDependencyError:class",
          "docComment": "/**\n * An error generated when a required module or dependency is not present in the local environment\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoMissingDependencyError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoAPIError",
              "canonicalReference": "mongodb!MongoAPIError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoMissingDependencyError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoMissingDependencyError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoMissingDependencyError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoMissingDependencyError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoNetworkError:class",
          "docComment": "/**\n * An error indicating an issue with the network, including TCP errors and timeouts.\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoNetworkError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoError",
              "canonicalReference": "mongodb!MongoError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoNetworkError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoNetworkError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoNetworkError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "MongoNetworkErrorOptions",
                  "canonicalReference": "mongodb!MongoNetworkErrorOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoNetworkError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!MongoNetworkErrorOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MongoNetworkErrorOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoNetworkErrorOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoNetworkErrorOptions#beforeHandshake:member",
              "docComment": "/**\n * Indicates the timeout happened before a connection handshake completed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "beforeHandshake: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "beforeHandshake",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoNetworkTimeoutError:class",
          "docComment": "/**\n * An error indicating a network timeout occurred\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoNetworkTimeoutError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoNetworkError",
              "canonicalReference": "mongodb!MongoNetworkError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoNetworkTimeoutError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoNetworkTimeoutError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoNetworkTimeoutError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "MongoNetworkErrorOptions",
                  "canonicalReference": "mongodb!MongoNetworkErrorOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoNetworkTimeoutError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoNotConnectedError:class",
          "docComment": "/**\n * An error thrown when the user attempts to operate on a database or collection through a MongoClient that has not yet successfully called the \"connect\" method\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoNotConnectedError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoAPIError",
              "canonicalReference": "mongodb!MongoAPIError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoNotConnectedError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoNotConnectedError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoNotConnectedError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoNotConnectedError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!MongoOptions:interface",
          "docComment": "/**\n * Mongo Client Options\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MongoOptions extends "
            },
            {
              "kind": "Reference",
              "text": "Required",
              "canonicalReference": "!Required:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MongoClientOptions",
              "canonicalReference": "mongodb!MongoClientOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", 'autoEncryption' | 'connectTimeoutMS' | 'directConnection' | 'driverInfo' | 'forceServerObjectId' | 'minHeartbeatFrequencyMS' | 'heartbeatFrequencyMS' | 'keepAlive' | 'keepAliveInitialDelay' | 'localThresholdMS' | 'logger' | 'maxConnecting' | 'maxIdleTimeMS' | 'maxPoolSize' | 'minPoolSize' | 'monitorCommands' | 'noDelay' | 'pkFactory' | 'promiseLibrary' | 'raw' | 'replicaSet' | 'retryReads' | 'retryWrites' | 'serverSelectionTimeoutMS' | 'socketTimeoutMS' | 'srvMaxHosts' | 'srvServiceName' | 'tlsAllowInvalidCertificates' | 'tlsAllowInvalidHostnames' | 'tlsInsecure' | 'waitQueueTimeoutMS' | 'zlibCompressionLevel'>>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "SupportedNodeConnectionOptions",
              "canonicalReference": "mongodb!SupportedNodeConnectionOptions:type"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoOptions#autoEncrypter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "autoEncrypter?: "
                },
                {
                  "kind": "Reference",
                  "text": "AutoEncrypter",
                  "canonicalReference": "mongodb!AutoEncrypter:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "autoEncrypter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoOptions#compressors:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compressors: "
                },
                {
                  "kind": "Reference",
                  "text": "CompressorName",
                  "canonicalReference": "mongodb!CompressorName:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "compressors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoOptions#credentials:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "credentials?: "
                },
                {
                  "kind": "Reference",
                  "text": "MongoCredentials",
                  "canonicalReference": "mongodb!MongoCredentials:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "credentials",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoOptions#dbName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dbName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dbName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoOptions#hosts:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hosts: "
                },
                {
                  "kind": "Reference",
                  "text": "HostAddress",
                  "canonicalReference": "mongodb!HostAddress:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hosts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoOptions#loadBalanced:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadBalanced: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "loadBalanced",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoOptions#metadata:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientMetadata",
                  "canonicalReference": "mongodb!ClientMetadata:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoOptions#proxyHost:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "proxyHost?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "proxyHost",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoOptions#proxyPassword:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "proxyPassword?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "proxyPassword",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoOptions#proxyPort:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "proxyPort?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "proxyPort",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoOptions#proxyUsername:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "proxyUsername?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "proxyUsername",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoOptions#readConcern:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readConcern: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadConcern",
                  "canonicalReference": "mongodb!ReadConcern:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoOptions#readPreference:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readPreference: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readPreference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoOptions#serverApi:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverApi: "
                },
                {
                  "kind": "Reference",
                  "text": "ServerApi",
                  "canonicalReference": "mongodb!ServerApi:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "serverApi",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoOptions#srvHost:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "srvHost?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "srvHost",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoOptions#tls:member",
              "docComment": "/**\n * # NOTE ABOUT TLS Options\n *\n * If set TLS enabled, equivalent to setting the ssl option.\n *\n * ### Additional options:\n *\n * | nodejs option | MongoDB equivalent | type | |:---------------------|--------------------------------------------------------- |:---------------------------------------| | `ca` | `sslCA`, `tlsCAFile` | `string \\| Buffer \\| Buffer[]` | | `crl` | `sslCRL` | `string \\| Buffer \\| Buffer[]` | | `cert` | `sslCert`, `tlsCertificateFile`, `tlsCertificateKeyFile` | `string \\| Buffer \\| Buffer[]` | | `key` | `sslKey`, `tlsCertificateKeyFile` | `string \\| Buffer \\| KeyObject[]` | | `passphrase` | `sslPass`, `tlsCertificateKeyFilePassword` | `string` | | `rejectUnauthorized` | `sslValidate` | `boolean` |\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tls: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tls",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MongoOptions#writeConcern:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "writeConcern: "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcern",
                  "canonicalReference": "mongodb!WriteConcern:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "writeConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoParseError:class",
          "docComment": "/**\n * An error used when attempting to parse a value (like a connection string)\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoParseError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoDriverError",
              "canonicalReference": "mongodb!MongoDriverError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoParseError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoParseError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoParseError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoParseError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoRuntimeError:class",
          "docComment": "/**\n * An error generated when the driver encounters unexpected input or reaches an unexpected/invalid internal state\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoRuntimeError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoDriverError",
              "canonicalReference": "mongodb!MongoDriverError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoRuntimeError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoRuntimeError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoRuntimeError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoRuntimeError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoServerClosedError:class",
          "docComment": "/**\n * An error generated when an attempt is made to operate on a closed/closing server.\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoServerClosedError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoAPIError",
              "canonicalReference": "mongodb!MongoAPIError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoServerClosedError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoServerClosedError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoServerClosedError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoServerClosedError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoServerError:class",
          "docComment": "/**\n * An error coming from the mongo server\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoServerError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoError",
              "canonicalReference": "mongodb!MongoError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoServerError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoServerError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoServerError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Reference",
                  "text": "ErrorDescription",
                  "canonicalReference": "mongodb!ErrorDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "IndexSignature",
              "canonicalReference": "mongodb!MongoServerError:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoServerError#codeName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "codeName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "codeName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoServerError#errInfo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errInfo?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "errInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoServerError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoServerError#ok:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ok?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "ok",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoServerError#writeConcernError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "writeConcernError?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "writeConcernError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoServerSelectionError:class",
          "docComment": "/**\n * An error signifying a client-side server selection error\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoServerSelectionError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoSystemError",
              "canonicalReference": "mongodb!MongoSystemError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoServerSelectionError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoServerSelectionError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoServerSelectionError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", reason: "
                },
                {
                  "kind": "Reference",
                  "text": "TopologyDescription",
                  "canonicalReference": "mongodb!TopologyDescription:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "reason",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoServerSelectionError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoSystemError:class",
          "docComment": "/**\n * An error signifying a general system issue\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoSystemError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoError",
              "canonicalReference": "mongodb!MongoError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoSystemError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoSystemError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoSystemError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", reason: "
                },
                {
                  "kind": "Reference",
                  "text": "TopologyDescription",
                  "canonicalReference": "mongodb!TopologyDescription:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "reason",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoSystemError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoSystemError#reason:member",
              "docComment": "/**\n * An optional reason context, such as an error saved during flow of monitoring and selecting servers\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reason?: "
                },
                {
                  "kind": "Reference",
                  "text": "TopologyDescription",
                  "canonicalReference": "mongodb!TopologyDescription:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "reason",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoTailableCursorError:class",
          "docComment": "/**\n * An error thrown when the user calls a function or method not supported on a tailable cursor\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoTailableCursorError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoAPIError",
              "canonicalReference": "mongodb!MongoAPIError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoTailableCursorError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoTailableCursorError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoTailableCursorError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoTailableCursorError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoTopologyClosedError:class",
          "docComment": "/**\n * An error generated when an attempt is made to operate on a dropped, or otherwise unavailable, database.\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoTopologyClosedError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoAPIError",
              "canonicalReference": "mongodb!MongoAPIError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoTopologyClosedError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoTopologyClosedError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoTopologyClosedError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoTopologyClosedError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoTransactionError:class",
          "docComment": "/**\n * An error generated when the user makes a mistake in the usage of transactions. (e.g. attempting to commit a transaction with a readPreference other than primary)\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoTransactionError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoAPIError",
              "canonicalReference": "mongodb!MongoAPIError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoTransactionError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoTransactionError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoTransactionError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoTransactionError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoUnexpectedServerResponseError:class",
          "docComment": "/**\n * An error generated when a **parsable** unexpected response comes from the server. This is generally an error where the driver in a state expecting a certain behavior to occur in the next message from MongoDB but it receives something else. This error **does not** represent an issue with wire message formatting.\n *\n * #### Example When an operation fails, it is the driver's job to retry it. It must perform serverSelection again to make sure that it attempts the operation against a server in a good state. If server selection returns a server that does not support retryable operations, this error is used. This scenario is unlikely as retryable support would also have been determined on the first attempt but it is possible the state change could report a selectable server that does not support retries.\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoUnexpectedServerResponseError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoRuntimeError",
              "canonicalReference": "mongodb!MongoRuntimeError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoUnexpectedServerResponseError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoUnexpectedServerResponseError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoUnexpectedServerResponseError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoUnexpectedServerResponseError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!MongoWriteConcernError:class",
          "docComment": "/**\n * An error thrown when the server reports a writeConcernError\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MongoWriteConcernError extends "
            },
            {
              "kind": "Reference",
              "text": "MongoServerError",
              "canonicalReference": "mongodb!MongoServerError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MongoWriteConcernError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!MongoWriteConcernError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MongoWriteConcernError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Reference",
                  "text": "ErrorDescription",
                  "canonicalReference": "mongodb!ErrorDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoWriteConcernError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!MongoWriteConcernError#result:member",
              "docComment": "/**\n * The result document (provided if ok: 1)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "result",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!MonitorEvents:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type MonitorEvents = "
            },
            {
              "kind": "Content",
              "text": "{\n    serverHeartbeatStarted(event: "
            },
            {
              "kind": "Reference",
              "text": "ServerHeartbeatStartedEvent",
              "canonicalReference": "mongodb!ServerHeartbeatStartedEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    serverHeartbeatSucceeded(event: "
            },
            {
              "kind": "Reference",
              "text": "ServerHeartbeatSucceededEvent",
              "canonicalReference": "mongodb!ServerHeartbeatSucceededEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    serverHeartbeatFailed(event: "
            },
            {
              "kind": "Reference",
              "text": "ServerHeartbeatFailedEvent",
              "canonicalReference": "mongodb!ServerHeartbeatFailedEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    resetServer(error?: "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": "): void;\n    resetConnectionPool(): void;\n    close(): void;\n} & "
            },
            {
              "kind": "Reference",
              "text": "EventEmitterWithState",
              "canonicalReference": "mongodb!EventEmitterWithState:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "MonitorEvents",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!MonitorOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MonitorOptions extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ConnectionOptions",
              "canonicalReference": "mongodb!ConnectionOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", 'id' | 'generation' | 'hostAddress'> "
            }
          ],
          "releaseTag": "Public",
          "name": "MonitorOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MonitorOptions#connectTimeoutMS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectTimeoutMS: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connectTimeoutMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MonitorOptions#heartbeatFrequencyMS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "heartbeatFrequencyMS: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "heartbeatFrequencyMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!MonitorOptions#minHeartbeatFrequencyMS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minHeartbeatFrequencyMS: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "minHeartbeatFrequencyMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!NestedPaths:type",
          "docComment": "/**\n * returns tuple of strings (keys to be joined on '.') that represent every path into a schema https://docs.mongodb.com/manual/tutorial/query-embedded-documents/\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type NestedPaths<Type> = "
            },
            {
              "kind": "Content",
              "text": "Type extends string | number | boolean | "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Buffer",
              "canonicalReference": "!__global.Buffer:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Uint8Array",
              "canonicalReference": "!Uint8Array:interface"
            },
            {
              "kind": "Content",
              "text": " | ((...args: any[]) => any) | {\n    _bsontype: string;\n} ? [] : Type extends "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<infer ArrayType> ? [] | [number, ..."
            },
            {
              "kind": "Reference",
              "text": "NestedPaths",
              "canonicalReference": "mongodb!NestedPaths:type"
            },
            {
              "kind": "Content",
              "text": "<ArrayType>] : Type extends "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, any> ? [string] : Type extends object ? {\n    [Key in "
            },
            {
              "kind": "Reference",
              "text": "Extract",
              "canonicalReference": "!Extract:type"
            },
            {
              "kind": "Content",
              "text": "<keyof Type, string>]: Type[Key] extends Type ? [Key] : Type extends Type[Key] ? [Key] : Type[Key] extends "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<infer ArrayType> ? Type extends ArrayType ? [Key] : ArrayType extends Type ? [Key] : [\n        Key,\n        ..."
            },
            {
              "kind": "Reference",
              "text": "NestedPaths",
              "canonicalReference": "mongodb!NestedPaths:type"
            },
            {
              "kind": "Content",
              "text": "<Type[Key]>\n    ] : [\n        Key,\n        ..."
            },
            {
              "kind": "Reference",
              "text": "NestedPaths",
              "canonicalReference": "mongodb!NestedPaths:type"
            },
            {
              "kind": "Content",
              "text": "<Type[Key]>\n    ];\n}["
            },
            {
              "kind": "Reference",
              "text": "Extract",
              "canonicalReference": "!Extract:type"
            },
            {
              "kind": "Content",
              "text": "<keyof Type, string>] : []"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "NestedPaths",
          "typeParameters": [
            {
              "typeParameterName": "Type",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 26
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!NestedPathsOfType:type",
          "docComment": "/**\n * returns keys (strings) for every path into a schema with a value of type https://docs.mongodb.com/manual/tutorial/query-embedded-documents/\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type NestedPathsOfType<TSchema, Type> = "
            },
            {
              "kind": "Reference",
              "text": "KeysOfAType",
              "canonicalReference": "mongodb!KeysOfAType:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    [Property in "
            },
            {
              "kind": "Reference",
              "text": "Join",
              "canonicalReference": "mongodb!Join:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NestedPaths",
              "canonicalReference": "mongodb!NestedPaths:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema>, '.'>]: "
            },
            {
              "kind": "Reference",
              "text": "PropertyType",
              "canonicalReference": "mongodb!PropertyType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, Property>;\n}, Type>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "NestedPathsOfType",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "Type",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!NonObjectIdLikeDocument:type",
          "docComment": "/**\n * A type that extends Document but forbids anything that \"looks like\" an object id.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type NonObjectIdLikeDocument = "
            },
            {
              "kind": "Content",
              "text": "{\n    [key in keyof "
            },
            {
              "kind": "Reference",
              "text": "ObjectIdLike",
              "canonicalReference": "bson!ObjectIdLike:interface"
            },
            {
              "kind": "Content",
              "text": "]?: never;\n} & "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "NonObjectIdLikeDocument",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!NotAcceptedFields:type",
          "docComment": "/**\n * It avoids using fields with not acceptable types\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type NotAcceptedFields<TSchema, FieldType> = "
            },
            {
              "kind": "Content",
              "text": "{\n    readonly [key in "
            },
            {
              "kind": "Reference",
              "text": "KeysOfOtherType",
              "canonicalReference": "mongodb!KeysOfOtherType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, FieldType>]?: never;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "NotAcceptedFields",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "FieldType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!NumericType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type NumericType = "
            },
            {
              "kind": "Reference",
              "text": "IntegerType",
              "canonicalReference": "mongodb!IntegerType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Decimal128",
              "canonicalReference": "bson!Decimal128:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Double",
              "canonicalReference": "bson!Double:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "NumericType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!ObjectID:var",
          "docComment": "/**\n * @deprecated\n *\n * Please use `ObjectId`\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ObjectID: "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "ObjectId",
              "canonicalReference": "bson!~ObjectId:class"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ObjectID",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!OneOrMore:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type OneOrMore<T> = "
            },
            {
              "kind": "Content",
              "text": "T | "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "OneOrMore",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!OnlyFieldsOfType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type OnlyFieldsOfType<TSchema, FieldType = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", AssignableType = "
            },
            {
              "kind": "Content",
              "text": "FieldType"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "IsAny",
              "canonicalReference": "mongodb!IsAny:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema[keyof TSchema], "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, FieldType>, "
            },
            {
              "kind": "Reference",
              "text": "AcceptedFields",
              "canonicalReference": "mongodb!AcceptedFields:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, FieldType, AssignableType> & "
            },
            {
              "kind": "Reference",
              "text": "NotAcceptedFields",
              "canonicalReference": "mongodb!NotAcceptedFields:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, FieldType> & "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, AssignableType>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "OnlyFieldsOfType",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "FieldType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "typeParameterName": "AssignableType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 15
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!OperationOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OperationOptions extends "
            },
            {
              "kind": "Reference",
              "text": "BSONSerializeOptions",
              "canonicalReference": "mongodb!BSONSerializeOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "OperationOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!OperationOptions#omitReadPreference:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "omitReadPreference?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "omitReadPreference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!OperationOptions#readPreference:member",
              "docComment": "/**\n * The preferred read preference (ReadPreference.primary, ReadPreference.primary_preferred, ReadPreference.secondary, ReadPreference.secondary_preferred, ReadPreference.nearest).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readPreference?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreferenceLike",
                  "canonicalReference": "mongodb!ReadPreferenceLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readPreference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!OperationOptions#session:member",
              "docComment": "/**\n * Specify ClientSession for this command\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "session?: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientSession",
                  "canonicalReference": "mongodb!ClientSession:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "session",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!OperationOptions#willRetryWrite:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "willRetryWrite?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "willRetryWrite",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!OperationTime:type",
          "docComment": "/**\n * Represents a specific point in time on a server. Can be retrieved by using `db.command()`\n *\n * @see\n *\n * https://docs.mongodb.com/manual/reference/method/db.runCommand/#response\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type OperationTime = "
            },
            {
              "kind": "Reference",
              "text": "Timestamp",
              "canonicalReference": "bson!Timestamp:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "OperationTime",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!OptionalId:type",
          "docComment": "/**\n * Add an optional _id field to an object shaped type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type OptionalId<TSchema> = "
            },
            {
              "kind": "Reference",
              "text": "EnhancedOmit",
              "canonicalReference": "mongodb!EnhancedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, '_id'> & {\n    _id?: "
            },
            {
              "kind": "Reference",
              "text": "InferIdType",
              "canonicalReference": "mongodb!InferIdType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "OptionalId",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!OptionalUnlessRequiredId:type",
          "docComment": "/**\n * Adds an optional _id field to an object shaped type, unless the _id field is requried on that type. In the case _id is required, this method continues to require_id.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type OptionalUnlessRequiredId<TSchema> = "
            },
            {
              "kind": "Content",
              "text": "TSchema extends {\n    _id: any;\n} ? TSchema : "
            },
            {
              "kind": "Reference",
              "text": "OptionalId",
              "canonicalReference": "mongodb!OptionalId:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "OptionalUnlessRequiredId",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!OrderedBulkOperation:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class OrderedBulkOperation extends "
            },
            {
              "kind": "Reference",
              "text": "BulkOperationBase",
              "canonicalReference": "mongodb!BulkOperationBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "OrderedBulkOperation",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!OrderedBulkOperation:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `OrderedBulkOperation` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(collection: "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteOptions",
                  "canonicalReference": "mongodb!BulkWriteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collection",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!OrderedBulkOperation#addToOperationsList:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addToOperationsList(batchType: "
                },
                {
                  "kind": "Reference",
                  "text": "BatchType",
                  "canonicalReference": "mongodb!BatchType:type"
                },
                {
                  "kind": "Content",
                  "text": ", document: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateStatement",
                  "canonicalReference": "mongodb!UpdateStatement:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "DeleteStatement",
                  "canonicalReference": "mongodb!DeleteStatement:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "batchType",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "document",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addToOperationsList"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!PipeOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PipeOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "PipeOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!PipeOptions#end:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "end",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!PkFactory:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PkFactory "
            }
          ],
          "releaseTag": "Public",
          "name": "PkFactory",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!PkFactory#createPk:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createPk(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "createPk"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ProfilingLevel:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ProfilingLevel = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "ProfilingLevel",
              "canonicalReference": "mongodb!ProfilingLevel:var"
            },
            {
              "kind": "Content",
              "text": "[keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "ProfilingLevel",
              "canonicalReference": "mongodb!ProfilingLevel:var"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ProfilingLevel",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!ProfilingLevel:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ProfilingLevel: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    readonly off: \"off\";\n    readonly slowOnly: \"slow_only\";\n    readonly all: \"all\";\n}>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ProfilingLevel",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ProfilingLevelOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ProfilingLevelOptions = "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ProfilingLevelOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!Projection:type",
          "docComment": "/**\n * Projection is flexible to permit the wide array of aggregation operators\n *\n * @deprecated\n *\n * since v4.1.0: Since projections support all aggregation operations we have no plans to narrow this type further\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Projection<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Projection",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ProjectionOperators:type",
          "docComment": "/**\n * @deprecated\n *\n * since v4.1.0: Since projections support all aggregation operations we have no plans to narrow this type further\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ProjectionOperators = "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ProjectionOperators",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!Promise_2:class",
          "docComment": "/**\n * Global promise store allowing user-provided promises\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PromiseProvider "
            }
          ],
          "releaseTag": "Public",
          "name": "Promise_2",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Promise_2.get:member(1)",
              "docComment": "/**\n * Get the stored promise library, or resolves passed in\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static get(): "
                },
                {
                  "kind": "Reference",
                  "text": "PromiseConstructor",
                  "canonicalReference": "!PromiseConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "get"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Promise_2.set:member(1)",
              "docComment": "/**\n * Sets the promise library\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static set(lib: "
                },
                {
                  "kind": "Reference",
                  "text": "PromiseConstructor",
                  "canonicalReference": "!PromiseConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "lib",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "set"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!Promise_2.validate:member(1)",
              "docComment": "/**\n * Validates the passed in promise library\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static validate(lib: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "lib",
                  "canonicalReference": "mongodb!~lib"
                },
                {
                  "kind": "Content",
                  "text": " is "
                },
                {
                  "kind": "Reference",
                  "text": "PromiseConstructor",
                  "canonicalReference": "!PromiseConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "lib",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "validate"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!PropertyType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PropertyType<Type, Property extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "string extends Property ? unknown : Property extends keyof Type ? Type[Property] : Property extends `${number}` ? Type extends "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<infer ArrayType> ? ArrayType : unknown : Property extends `${infer Key}.${infer Rest}` ? Key extends `${number}` ? Type extends "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<infer ArrayType> ? "
            },
            {
              "kind": "Reference",
              "text": "PropertyType",
              "canonicalReference": "mongodb!PropertyType:type"
            },
            {
              "kind": "Content",
              "text": "<ArrayType, Rest> : unknown : Key extends keyof Type ? Type[Key] extends "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, infer MapType> ? MapType : "
            },
            {
              "kind": "Reference",
              "text": "PropertyType",
              "canonicalReference": "mongodb!PropertyType:type"
            },
            {
              "kind": "Content",
              "text": "<Type[Key], Rest> : unknown : unknown"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PropertyType",
          "typeParameters": [
            {
              "typeParameterName": "Type",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "Property",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 14
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ProxyOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ProxyOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "ProxyOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ProxyOptions#proxyHost:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "proxyHost?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "proxyHost",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ProxyOptions#proxyPassword:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "proxyPassword?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "proxyPassword",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ProxyOptions#proxyPort:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "proxyPort?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "proxyPort",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ProxyOptions#proxyUsername:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "proxyUsername?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "proxyUsername",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!PullAllOperator:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PullAllOperator<TSchema> = "
            },
            {
              "kind": "Content",
              "text": "({\n    readonly [key in "
            },
            {
              "kind": "Reference",
              "text": "KeysOfAType",
              "canonicalReference": "mongodb!KeysOfAType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<any>>]?: TSchema[key];\n} & "
            },
            {
              "kind": "Reference",
              "text": "NotAcceptedFields",
              "canonicalReference": "mongodb!NotAcceptedFields:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<any>>) & {\n    readonly [key: string]: "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<any>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PullAllOperator",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!PullOperator:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PullOperator<TSchema> = "
            },
            {
              "kind": "Content",
              "text": "({\n    readonly [key in "
            },
            {
              "kind": "Reference",
              "text": "KeysOfAType",
              "canonicalReference": "mongodb!KeysOfAType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<any>>]?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Flatten",
              "canonicalReference": "mongodb!Flatten:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema[key]>> | "
            },
            {
              "kind": "Reference",
              "text": "FilterOperations",
              "canonicalReference": "mongodb!FilterOperations:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Flatten",
              "canonicalReference": "mongodb!Flatten:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema[key]>>;\n} & "
            },
            {
              "kind": "Reference",
              "text": "NotAcceptedFields",
              "canonicalReference": "mongodb!NotAcceptedFields:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<any>>) & {\n    readonly [key: string]: "
            },
            {
              "kind": "Reference",
              "text": "FilterOperators",
              "canonicalReference": "mongodb!FilterOperators:interface"
            },
            {
              "kind": "Content",
              "text": "<any> | any;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PullOperator",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 20
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!PushOperator:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PushOperator<TSchema> = "
            },
            {
              "kind": "Content",
              "text": "({\n    readonly [key in "
            },
            {
              "kind": "Reference",
              "text": "KeysOfAType",
              "canonicalReference": "mongodb!KeysOfAType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<any>>]?: "
            },
            {
              "kind": "Reference",
              "text": "Flatten",
              "canonicalReference": "mongodb!Flatten:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema[key]> | "
            },
            {
              "kind": "Reference",
              "text": "ArrayOperator",
              "canonicalReference": "mongodb!ArrayOperator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Flatten",
              "canonicalReference": "mongodb!Flatten:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema[key]>>>;\n} & "
            },
            {
              "kind": "Reference",
              "text": "NotAcceptedFields",
              "canonicalReference": "mongodb!NotAcceptedFields:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<any>>) & {\n    readonly [key: string]: "
            },
            {
              "kind": "Reference",
              "text": "ArrayOperator",
              "canonicalReference": "mongodb!ArrayOperator:type"
            },
            {
              "kind": "Content",
              "text": "<any> | any;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PushOperator",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 20
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ReadConcern:class",
          "docComment": "/**\n * The MongoDB ReadConcern, which allows for control of the consistency and isolation properties of the data read from replica sets and replica set shards.\n *\n * @see\n *\n * https://docs.mongodb.com/manual/reference/read-concern/index.html\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ReadConcern "
            }
          ],
          "releaseTag": "Public",
          "name": "ReadConcern",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!ReadConcern:constructor(1)",
              "docComment": "/**\n * Constructs a ReadConcern from the read concern level.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(level: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadConcernLevel",
                  "canonicalReference": "mongodb!ReadConcernLevel:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "level",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadConcern.AVAILABLE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static get AVAILABLE(): "
                },
                {
                  "kind": "Content",
                  "text": "'available'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "AVAILABLE",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ReadConcern.fromOptions:member(1)",
              "docComment": "/**\n * Construct a ReadConcern given an options object.\n *\n * @param options - The options object from which to extract the write concern.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromOptions(options?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        readConcern?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadConcernLike",
                  "canonicalReference": "mongodb!ReadConcernLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        level?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadConcernLevel",
                  "canonicalReference": "mongodb!ReadConcernLevel:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadConcern",
                  "canonicalReference": "mongodb!ReadConcern:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "fromOptions"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadConcern#level:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "level: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadConcernLevel",
                  "canonicalReference": "mongodb!ReadConcernLevel:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "level",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadConcern.LINEARIZABLE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static get LINEARIZABLE(): "
                },
                {
                  "kind": "Content",
                  "text": "'linearizable'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "LINEARIZABLE",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadConcern.MAJORITY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static get MAJORITY(): "
                },
                {
                  "kind": "Content",
                  "text": "'majority'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MAJORITY",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadConcern.SNAPSHOT:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static get SNAPSHOT(): "
                },
                {
                  "kind": "Content",
                  "text": "'snapshot'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SNAPSHOT",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ReadConcern#toJSON:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSON(): "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "toJSON"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ReadConcernLevel:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ReadConcernLevel = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "ReadConcernLevel",
              "canonicalReference": "mongodb!ReadConcernLevel:var"
            },
            {
              "kind": "Content",
              "text": "[keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "ReadConcernLevel",
              "canonicalReference": "mongodb!ReadConcernLevel:var"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ReadConcernLevel",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!ReadConcernLevel:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ReadConcernLevel: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    readonly local: \"local\";\n    readonly majority: \"majority\";\n    readonly linearizable: \"linearizable\";\n    readonly available: \"available\";\n    readonly snapshot: \"snapshot\";\n}>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ReadConcernLevel",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ReadConcernLike:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ReadConcernLike = "
            },
            {
              "kind": "Reference",
              "text": "ReadConcern",
              "canonicalReference": "mongodb!ReadConcern:class"
            },
            {
              "kind": "Content",
              "text": " | {\n    level: "
            },
            {
              "kind": "Reference",
              "text": "ReadConcernLevel",
              "canonicalReference": "mongodb!ReadConcernLevel:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | "
            },
            {
              "kind": "Reference",
              "text": "ReadConcernLevel",
              "canonicalReference": "mongodb!ReadConcernLevel:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ReadConcernLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ReadPreference:class",
          "docComment": "/**\n * The **ReadPreference** class is a class that represents a MongoDB ReadPreference and is used to construct connections.\n *\n * @see\n *\n * https://docs.mongodb.com/manual/core/read-preference/\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ReadPreference "
            }
          ],
          "releaseTag": "Public",
          "name": "ReadPreference",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!ReadPreference:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ReadPreference` class\n *\n * @param mode - A string describing the read preference mode (primary|primaryPreferred|secondary|secondaryPreferred|nearest)\n *\n * @param tags - A tag set used to target reads to members with the specified tag(s). tagSet is not available if using read preference mode primary.\n *\n * @param options - Additional read preference options\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(mode: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreferenceMode",
                  "canonicalReference": "mongodb!ReadPreferenceMode:type"
                },
                {
                  "kind": "Content",
                  "text": ", tags?: "
                },
                {
                  "kind": "Reference",
                  "text": "TagSet",
                  "canonicalReference": "mongodb!TagSet:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreferenceOptions",
                  "canonicalReference": "mongodb!ReadPreferenceOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mode",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tags",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ReadPreference#equals:member(1)",
              "docComment": "/**\n * Check if the two ReadPreferences are equivalent\n *\n * @param readPreference - The read preference with which to check equality\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(readPreference: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "readPreference",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ReadPreference.fromOptions:member(1)",
              "docComment": "/**\n * Construct a ReadPreference given an options object.\n *\n * @param options - The options object from which to extract the read preference.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromOptions(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreferenceFromOptions",
                  "canonicalReference": "mongodb!ReadPreferenceFromOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "fromOptions"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ReadPreference.fromString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromString(mode: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mode",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "fromString"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadPreference#hedge:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hedge?: "
                },
                {
                  "kind": "Reference",
                  "text": "HedgeOptions",
                  "canonicalReference": "mongodb!HedgeOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hedge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ReadPreference#isValid:member(1)",
              "docComment": "/**\n * Validate if a mode is legal\n *\n * @param mode - The string representing the read preference mode.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isValid(mode?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mode",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "isValid"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ReadPreference.isValid:member(1)",
              "docComment": "/**\n * Validate if a mode is legal\n *\n * @param mode - The string representing the read preference mode.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static isValid(mode: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mode",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "isValid"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadPreference#maxStalenessSeconds:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxStalenessSeconds?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxStalenessSeconds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadPreference#minWireVersion:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minWireVersion?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "minWireVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadPreference#mode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mode: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreferenceMode",
                  "canonicalReference": "mongodb!ReadPreferenceMode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadPreference.nearest:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static nearest: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nearest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadPreference.NEAREST:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static NEAREST: "
                },
                {
                  "kind": "Content",
                  "text": "\"nearest\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "NEAREST",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadPreference#preference:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get preference(): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreferenceMode",
                  "canonicalReference": "mongodb!ReadPreferenceMode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "preference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadPreference.PRIMARY_PREFERRED:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static PRIMARY_PREFERRED: "
                },
                {
                  "kind": "Content",
                  "text": "\"primaryPreferred\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "PRIMARY_PREFERRED",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadPreference.primary:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static primary: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "primary",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadPreference.PRIMARY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static PRIMARY: "
                },
                {
                  "kind": "Content",
                  "text": "\"primary\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "PRIMARY",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadPreference.primaryPreferred:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static primaryPreferred: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "primaryPreferred",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadPreference.SECONDARY_PREFERRED:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static SECONDARY_PREFERRED: "
                },
                {
                  "kind": "Content",
                  "text": "\"secondaryPreferred\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SECONDARY_PREFERRED",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadPreference.secondary:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static secondary: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "secondary",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadPreference.SECONDARY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static SECONDARY: "
                },
                {
                  "kind": "Content",
                  "text": "\"secondary\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SECONDARY",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ReadPreference#secondaryOk:member(1)",
              "docComment": "/**\n * Indicates that this readPreference needs the \"SecondaryOk\" bit when sent over the wire\n *\n * @see\n *\n * https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#op-query\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "secondaryOk(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "secondaryOk"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadPreference.secondaryPreferred:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static secondaryPreferred: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "secondaryPreferred",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ReadPreference#slaveOk:member(1)",
              "docComment": "/**\n * Indicates that this readPreference needs the \"secondaryOk\" bit when sent over the wire\n *\n * @deprecated\n *\n * Use secondaryOk instead\n *\n * @see\n *\n * https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#op-query\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "slaveOk(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "slaveOk"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ReadPreference#tags:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tags?: "
                },
                {
                  "kind": "Reference",
                  "text": "TagSet",
                  "canonicalReference": "mongodb!TagSet:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tags",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ReadPreference#toJSON:member(1)",
              "docComment": "/**\n * Return JSON representation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSON(): "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "toJSON"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ReadPreference.translate:member(1)",
              "docComment": "/**\n * Replaces options.readPreference with a ReadPreference instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static translate(options: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreferenceLikeOptions",
                  "canonicalReference": "mongodb!ReadPreferenceLikeOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreferenceLikeOptions",
                  "canonicalReference": "mongodb!ReadPreferenceLikeOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "translate"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ReadPreferenceFromOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ReadPreferenceFromOptions extends "
            },
            {
              "kind": "Reference",
              "text": "ReadPreferenceLikeOptions",
              "canonicalReference": "mongodb!ReadPreferenceLikeOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ReadPreferenceFromOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ReadPreferenceFromOptions#hedge:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hedge?: "
                },
                {
                  "kind": "Reference",
                  "text": "HedgeOptions",
                  "canonicalReference": "mongodb!HedgeOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hedge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ReadPreferenceFromOptions#readPreferenceTags:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readPreferenceTags?: "
                },
                {
                  "kind": "Reference",
                  "text": "TagSet",
                  "canonicalReference": "mongodb!TagSet:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readPreferenceTags",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ReadPreferenceFromOptions#session:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "session?: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientSession",
                  "canonicalReference": "mongodb!ClientSession:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "session",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ReadPreferenceLike:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ReadPreferenceLike = "
            },
            {
              "kind": "Reference",
              "text": "ReadPreference",
              "canonicalReference": "mongodb!ReadPreference:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ReadPreferenceMode",
              "canonicalReference": "mongodb!ReadPreferenceMode:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ReadPreferenceLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ReadPreferenceLikeOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ReadPreferenceLikeOptions extends "
            },
            {
              "kind": "Reference",
              "text": "ReadPreferenceOptions",
              "canonicalReference": "mongodb!ReadPreferenceOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ReadPreferenceLikeOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ReadPreferenceLikeOptions#readPreference:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readPreference?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreferenceLike",
                  "canonicalReference": "mongodb!ReadPreferenceLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        mode?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreferenceMode",
                  "canonicalReference": "mongodb!ReadPreferenceMode:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        preference?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreferenceMode",
                  "canonicalReference": "mongodb!ReadPreferenceMode:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        tags?: "
                },
                {
                  "kind": "Reference",
                  "text": "TagSet",
                  "canonicalReference": "mongodb!TagSet:type"
                },
                {
                  "kind": "Content",
                  "text": "[];\n        maxStalenessSeconds?: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readPreference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ReadPreferenceMode:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ReadPreferenceMode = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "ReadPreferenceMode",
              "canonicalReference": "mongodb!ReadPreferenceMode:var"
            },
            {
              "kind": "Content",
              "text": "[keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "ReadPreferenceMode",
              "canonicalReference": "mongodb!ReadPreferenceMode:var"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ReadPreferenceMode",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!ReadPreferenceMode:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ReadPreferenceMode: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    readonly primary: \"primary\";\n    readonly primaryPreferred: \"primaryPreferred\";\n    readonly secondary: \"secondary\";\n    readonly secondaryPreferred: \"secondaryPreferred\";\n    readonly nearest: \"nearest\";\n}>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ReadPreferenceMode",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ReadPreferenceOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ReadPreferenceOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "ReadPreferenceOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ReadPreferenceOptions#hedge:member",
              "docComment": "/**\n * Server mode in which the same query is dispatched in parallel to multiple replica set members.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hedge?: "
                },
                {
                  "kind": "Reference",
                  "text": "HedgeOptions",
                  "canonicalReference": "mongodb!HedgeOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hedge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ReadPreferenceOptions#maxStalenessSeconds:member",
              "docComment": "/**\n * Max secondary read staleness in seconds, Minimum value is 90 seconds.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxStalenessSeconds?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxStalenessSeconds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ReduceFunction:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ReduceFunction<TKey = "
            },
            {
              "kind": "Reference",
              "text": "ObjectId",
              "canonicalReference": "bson!~ObjectId:class"
            },
            {
              "kind": "Content",
              "text": ", TValue = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(key: TKey, values: TValue[]) => TValue"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ReduceFunction",
          "typeParameters": [
            {
              "typeParameterName": "TKey",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "typeParameterName": "TValue",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!RegExpOrString:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RegExpOrString<T> = "
            },
            {
              "kind": "Content",
              "text": "T extends string ? "
            },
            {
              "kind": "Reference",
              "text": "BSONRegExp",
              "canonicalReference": "bson!BSONRegExp:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            },
            {
              "kind": "Content",
              "text": " | T : T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RegExpOrString",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!RemoveUserOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RemoveUserOptions = "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RemoveUserOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!RenameOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RenameOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "RenameOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!RenameOptions#dropTarget:member",
              "docComment": "/**\n * Drop the target name collection if it previously exists.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dropTarget?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "dropTarget",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!RenameOptions#new_collection:member",
              "docComment": "/**\n * Unclear\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "new_collection?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "new_collection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ReplaceOneModel:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ReplaceOneModel<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "ReplaceOneModel",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ReplaceOneModel#collation:member",
              "docComment": "/**\n * Specifies a collation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collation?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollationOptions",
                  "canonicalReference": "mongodb!CollationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ReplaceOneModel#filter:member",
              "docComment": "/**\n * The filter to limit the replaced document.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "filter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ReplaceOneModel#hint:member",
              "docComment": "/**\n * The index to use. If specified, then the query system will only consider plans using the hinted index.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hint?: "
                },
                {
                  "kind": "Reference",
                  "text": "Hint",
                  "canonicalReference": "mongodb!Hint:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ReplaceOneModel#replacement:member",
              "docComment": "/**\n * The document with which to replace the matched document.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replacement: "
                },
                {
                  "kind": "Reference",
                  "text": "WithoutId",
                  "canonicalReference": "mongodb!WithoutId:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "replacement",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ReplaceOneModel#upsert:member",
              "docComment": "/**\n * When true, creates a new document if no document matches the query.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "upsert?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "upsert",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ReplaceOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ReplaceOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ReplaceOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ReplaceOptions#bypassDocumentValidation:member",
              "docComment": "/**\n * If true, allows the write to opt-out of document level validation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bypassDocumentValidation?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bypassDocumentValidation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ReplaceOptions#collation:member",
              "docComment": "/**\n * Specifies a collation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collation?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollationOptions",
                  "canonicalReference": "mongodb!CollationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ReplaceOptions#hint:member",
              "docComment": "/**\n * Specify that the update query should only consider plans using the hinted index\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hint?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ReplaceOptions#let:member",
              "docComment": "/**\n * Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "let?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "let",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ReplaceOptions#upsert:member",
              "docComment": "/**\n * When true, creates a new document if no document matches the query\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "upsert?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "upsert",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ResumeOptions:interface",
          "docComment": "/**\n * @deprecated\n *\n * Please use the ChangeStreamCursorOptions type instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ResumeOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "ResumeOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ResumeOptions#batchSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "batchSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "batchSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ResumeOptions#collation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collation?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollationOptions",
                  "canonicalReference": "mongodb!CollationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ResumeOptions#fullDocument:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fullDocument?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fullDocument",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ResumeOptions#maxAwaitTimeMS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxAwaitTimeMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxAwaitTimeMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ResumeOptions#readPreference:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readPreference?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readPreference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ResumeOptions#resumeAfter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resumeAfter?: "
                },
                {
                  "kind": "Reference",
                  "text": "ResumeToken",
                  "canonicalReference": "mongodb!ResumeToken:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "resumeAfter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ResumeOptions#startAfter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "startAfter?: "
                },
                {
                  "kind": "Reference",
                  "text": "ResumeToken",
                  "canonicalReference": "mongodb!ResumeToken:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "startAfter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ResumeOptions#startAtOperationTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "startAtOperationTime?: "
                },
                {
                  "kind": "Reference",
                  "text": "Timestamp",
                  "canonicalReference": "bson!Timestamp:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "startAtOperationTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ResumeToken:type",
          "docComment": "/**\n * Represents the logical starting point for a new ChangeStream or resuming a ChangeStream on the server.\n *\n * @see\n *\n * https://www.mongodb.com/docs/manual/changeStreams/#std-label-change-stream-resume\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ResumeToken = "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ResumeToken",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ReturnDocument:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ReturnDocument = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "ReturnDocument",
              "canonicalReference": "mongodb!ReturnDocument:var"
            },
            {
              "kind": "Content",
              "text": "[keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "ReturnDocument",
              "canonicalReference": "mongodb!ReturnDocument:var"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ReturnDocument",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!ReturnDocument:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ReturnDocument: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    readonly BEFORE: \"before\";\n    readonly AFTER: \"after\";\n}>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ReturnDocument",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!RoleSpecification:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RoleSpecification "
            }
          ],
          "releaseTag": "Public",
          "name": "RoleSpecification",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!RoleSpecification#db:member",
              "docComment": "/**\n * The database this user's role should effect.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "db: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "db",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!RoleSpecification#role:member",
              "docComment": "/**\n * A role grants privileges to perform sets of actions on defined resources. A given role applies to the database on which it is defined and can grant access down to a collection level of granularity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "role: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "role",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!RootFilterOperators:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RootFilterOperators<TSchema> extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "RootFilterOperators",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!RootFilterOperators#$and:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$and?: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$and",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!RootFilterOperators#$comment:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$comment?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$comment",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!RootFilterOperators#$nor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$nor?: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$nor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!RootFilterOperators#$or:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$or?: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$or",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!RootFilterOperators#$text:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$text?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        $search: string;\n        $language?: string;\n        $caseSensitive?: boolean;\n        $diacriticSensitive?: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$text",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!RootFilterOperators#$where:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$where?: "
                },
                {
                  "kind": "Content",
                  "text": "string | ((this: TSchema) => boolean)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$where",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!RunCommandOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RunCommandOptions = "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RunCommandOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!SchemaMember:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SchemaMember<T, V> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [P in keyof T]?: V;\n} | {\n    [key: string]: V;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SchemaMember",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!SelectServerOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SelectServerOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "SelectServerOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!SelectServerOptions#readPreference:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readPreference?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreferenceLike",
                  "canonicalReference": "mongodb!ReadPreferenceLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readPreference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!SelectServerOptions#serverSelectionTimeoutMS:member",
              "docComment": "/**\n * How long to block for server selection before throwing an error\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverSelectionTimeoutMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "serverSelectionTimeoutMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!SelectServerOptions#session:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "session?: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientSession",
                  "canonicalReference": "mongodb!ClientSession:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "session",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ServerApi:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ServerApi "
            }
          ],
          "releaseTag": "Public",
          "name": "ServerApi",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ServerApi#deprecationErrors:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deprecationErrors?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "deprecationErrors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ServerApi#strict:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "strict?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "strict",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ServerApi#version:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version: "
                },
                {
                  "kind": "Reference",
                  "text": "ServerApiVersion",
                  "canonicalReference": "mongodb!ServerApiVersion:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ServerApiVersion:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ServerApiVersion = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "ServerApiVersion",
              "canonicalReference": "mongodb!ServerApiVersion:var"
            },
            {
              "kind": "Content",
              "text": "[keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "ServerApiVersion",
              "canonicalReference": "mongodb!ServerApiVersion:var"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ServerApiVersion",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!ServerApiVersion:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ServerApiVersion: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    readonly v1: \"1\";\n}>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ServerApiVersion",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ServerCapabilities:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ServerCapabilities "
            }
          ],
          "releaseTag": "Public",
          "name": "ServerCapabilities",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!ServerCapabilities:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ServerCapabilities` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(hello: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "hello",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerCapabilities#commandsTakeCollation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get commandsTakeCollation(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "commandsTakeCollation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerCapabilities#commandsTakeWriteConcern:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get commandsTakeWriteConcern(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "commandsTakeWriteConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerCapabilities#hasAggregationCursor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hasAggregationCursor(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hasAggregationCursor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerCapabilities#hasAuthCommands:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hasAuthCommands(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hasAuthCommands",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerCapabilities#hasListCollectionsCommand:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hasListCollectionsCommand(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hasListCollectionsCommand",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerCapabilities#hasListIndexesCommand:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hasListIndexesCommand(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hasListIndexesCommand",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerCapabilities#hasTextSearch:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hasTextSearch(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hasTextSearch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerCapabilities#hasWriteCommands:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hasWriteCommands(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hasWriteCommands",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerCapabilities#maxWireVersion:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxWireVersion: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxWireVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerCapabilities#minWireVersion:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minWireVersion: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "minWireVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerCapabilities#supportsSnapshotReads:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get supportsSnapshotReads(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "supportsSnapshotReads",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ServerClosedEvent:class",
          "docComment": "/**\n * Emitted when server is closed.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ServerClosedEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ServerClosedEvent "
            }
          ],
          "releaseTag": "Public",
          "name": "ServerClosedEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerClosedEvent#address:member",
              "docComment": "/**\n * The address (host/port pair) of the server\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "address: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerClosedEvent#topologyId:member",
              "docComment": "/**\n * A unique identifier for the topology\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "topologyId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "topologyId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ServerDescription:class",
          "docComment": "/**\n * The client's view of a single server, based on the most recent hello outcome.\n *\n * Internal type, not meant to be directly instantiated\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ServerDescription` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ServerDescription "
            }
          ],
          "releaseTag": "Public",
          "name": "ServerDescription",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#$clusterTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$clusterTime?: "
                },
                {
                  "kind": "Reference",
                  "text": "ClusterTime",
                  "canonicalReference": "mongodb!ClusterTime:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "$clusterTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#address:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "address: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#allHosts:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get allHosts(): "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "allHosts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#arbiters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arbiters: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "arbiters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#electionId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "electionId?: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "electionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ServerDescription#equals:member(1)",
              "docComment": "/**\n * Determines if another `ServerDescription` is equal to this one per the rules defined in the {@link https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#serverdescription | SDAM spec}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(other: "
                },
                {
                  "kind": "Reference",
                  "text": "ServerDescription",
                  "canonicalReference": "mongodb!ServerDescription:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "equals"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error?: "
                },
                {
                  "kind": "Reference",
                  "text": "MongoError",
                  "canonicalReference": "mongodb!MongoError:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#host:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get host(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "host",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#hostAddress:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hostAddress(): "
                },
                {
                  "kind": "Reference",
                  "text": "HostAddress",
                  "canonicalReference": "mongodb!HostAddress:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hostAddress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#hosts:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hosts: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hosts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#isDataBearing:member",
              "docComment": "/**\n * Is this server data bearing\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isDataBearing(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isDataBearing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#isReadable:member",
              "docComment": "/**\n * Is this server available for reads\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isReadable(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isReadable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#isWritable:member",
              "docComment": "/**\n * Is this server available for writes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isWritable(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isWritable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#lastUpdateTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lastUpdateTime: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lastUpdateTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#lastWriteDate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lastWriteDate: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lastWriteDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#logicalSessionTimeoutMinutes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logicalSessionTimeoutMinutes?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "logicalSessionTimeoutMinutes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#maxWireVersion:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxWireVersion: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxWireVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#me:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "me?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "me",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#minWireVersion:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minWireVersion: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "minWireVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#passives:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "passives: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "passives",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#port:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get port(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "port",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#primary:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "primary?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "primary",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#roundTripTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "roundTripTime: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "roundTripTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#setName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "setName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#setVersion:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setVersion?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "setVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#tags:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tags: "
                },
                {
                  "kind": "Reference",
                  "text": "TagSet",
                  "canonicalReference": "mongodb!TagSet:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tags",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#topologyVersion:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "topologyVersion?: "
                },
                {
                  "kind": "Reference",
                  "text": "TopologyVersion",
                  "canonicalReference": "mongodb!TopologyVersion:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "topologyVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescription#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "ServerType",
                  "canonicalReference": "mongodb!ServerType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ServerDescriptionChangedEvent:class",
          "docComment": "/**\n * Emitted when server description changes, but does NOT include changes to the RTT.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ServerDescriptionChangedEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ServerDescriptionChangedEvent "
            }
          ],
          "releaseTag": "Public",
          "name": "ServerDescriptionChangedEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescriptionChangedEvent#address:member",
              "docComment": "/**\n * The address (host/port pair) of the server\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "address: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescriptionChangedEvent#newDescription:member",
              "docComment": "/**\n * The new server description\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "newDescription: "
                },
                {
                  "kind": "Reference",
                  "text": "ServerDescription",
                  "canonicalReference": "mongodb!ServerDescription:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "newDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescriptionChangedEvent#previousDescription:member",
              "docComment": "/**\n * The previous server description\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "previousDescription: "
                },
                {
                  "kind": "Reference",
                  "text": "ServerDescription",
                  "canonicalReference": "mongodb!ServerDescription:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "previousDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerDescriptionChangedEvent#topologyId:member",
              "docComment": "/**\n * A unique identifier for the topology\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "topologyId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "topologyId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ServerEvents:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ServerEvents = "
            },
            {
              "kind": "Content",
              "text": "{\n    serverHeartbeatStarted(event: "
            },
            {
              "kind": "Reference",
              "text": "ServerHeartbeatStartedEvent",
              "canonicalReference": "mongodb!ServerHeartbeatStartedEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    serverHeartbeatSucceeded(event: "
            },
            {
              "kind": "Reference",
              "text": "ServerHeartbeatSucceededEvent",
              "canonicalReference": "mongodb!ServerHeartbeatSucceededEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    serverHeartbeatFailed(event: "
            },
            {
              "kind": "Reference",
              "text": "ServerHeartbeatFailedEvent",
              "canonicalReference": "mongodb!ServerHeartbeatFailedEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    connect(server: "
            },
            {
              "kind": "Reference",
              "text": "Server",
              "canonicalReference": "mongodb!Server:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    descriptionReceived(description: "
            },
            {
              "kind": "Reference",
              "text": "ServerDescription",
              "canonicalReference": "mongodb!ServerDescription:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    closed(): void;\n    ended(): void;\n} & "
            },
            {
              "kind": "Reference",
              "text": "ConnectionPoolEvents",
              "canonicalReference": "mongodb!ConnectionPoolEvents:type"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "EventEmitterWithState",
              "canonicalReference": "mongodb!EventEmitterWithState:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ServerEvents",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 15
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ServerHeartbeatFailedEvent:class",
          "docComment": "/**\n * Emitted when the server monitor’s hello fails, either with an “ok: 0” or a socket exception.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ServerHeartbeatFailedEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ServerHeartbeatFailedEvent "
            }
          ],
          "releaseTag": "Public",
          "name": "ServerHeartbeatFailedEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerHeartbeatFailedEvent#connectionId:member",
              "docComment": "/**\n * The connection id for the command\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connectionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerHeartbeatFailedEvent#duration:member",
              "docComment": "/**\n * The execution time of the event in ms\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "duration: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "duration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerHeartbeatFailedEvent#failure:member",
              "docComment": "/**\n * The command failure\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "failure: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "failure",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ServerHeartbeatStartedEvent:class",
          "docComment": "/**\n * Emitted when the server monitor’s hello command is started - immediately before the hello command is serialized into raw BSON and written to the socket.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ServerHeartbeatStartedEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ServerHeartbeatStartedEvent "
            }
          ],
          "releaseTag": "Public",
          "name": "ServerHeartbeatStartedEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerHeartbeatStartedEvent#connectionId:member",
              "docComment": "/**\n * The connection id for the command\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connectionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ServerHeartbeatSucceededEvent:class",
          "docComment": "/**\n * Emitted when the server monitor’s hello succeeds.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ServerHeartbeatSucceededEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ServerHeartbeatSucceededEvent "
            }
          ],
          "releaseTag": "Public",
          "name": "ServerHeartbeatSucceededEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerHeartbeatSucceededEvent#connectionId:member",
              "docComment": "/**\n * The connection id for the command\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connectionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerHeartbeatSucceededEvent#duration:member",
              "docComment": "/**\n * The execution time of the event in ms\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "duration: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "duration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerHeartbeatSucceededEvent#reply:member",
              "docComment": "/**\n * The command reply\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reply: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reply",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ServerOpeningEvent:class",
          "docComment": "/**\n * Emitted when server is initialized.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ServerOpeningEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ServerOpeningEvent "
            }
          ],
          "releaseTag": "Public",
          "name": "ServerOpeningEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerOpeningEvent#address:member",
              "docComment": "/**\n * The address (host/port pair) of the server\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "address: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerOpeningEvent#topologyId:member",
              "docComment": "/**\n * A unique identifier for the topology\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "topologyId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "topologyId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ServerOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ServerOptions = "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ConnectionPoolOptions",
              "canonicalReference": "mongodb!ConnectionPoolOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", 'id' | 'generation' | 'hostAddress'> & "
            },
            {
              "kind": "Reference",
              "text": "MonitorOptions",
              "canonicalReference": "mongodb!MonitorOptions:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ServerOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ServerSelector:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ServerSelector = "
            },
            {
              "kind": "Content",
              "text": "(topologyDescription: "
            },
            {
              "kind": "Reference",
              "text": "TopologyDescription",
              "canonicalReference": "mongodb!TopologyDescription:class"
            },
            {
              "kind": "Content",
              "text": ", servers: "
            },
            {
              "kind": "Reference",
              "text": "ServerDescription",
              "canonicalReference": "mongodb!ServerDescription:class"
            },
            {
              "kind": "Content",
              "text": "[]) => "
            },
            {
              "kind": "Reference",
              "text": "ServerDescription",
              "canonicalReference": "mongodb!ServerDescription:class"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ServerSelector",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!ServerSession:class",
          "docComment": "/**\n * Reflects the existence of a session on the server. Can be reused by the session pool. WARNING: not meant to be instantiated directly. For internal use only.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ServerSession` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ServerSession "
            }
          ],
          "releaseTag": "Public",
          "name": "ServerSession",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "mongodb!ServerSession#hasTimedOut:member(1)",
              "docComment": "/**\n * Determines if the server session has timed out.\n *\n * @param sessionTimeoutMinutes - The server's \"logicalSessionTimeoutMinutes\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasTimedOut(sessionTimeoutMinutes: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "sessionTimeoutMinutes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "hasTimedOut"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerSession#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Reference",
                  "text": "ServerSessionId",
                  "canonicalReference": "mongodb!ServerSessionId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerSession#isDirty:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isDirty: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isDirty",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerSession#lastUse:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lastUse: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lastUse",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!ServerSession#txnNumber:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnNumber: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "txnNumber",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ServerSessionId:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ServerSessionId = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: "
            },
            {
              "kind": "Reference",
              "text": "Binary",
              "canonicalReference": "bson!Binary:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ServerSessionId",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!ServerType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ServerType = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "ServerType",
              "canonicalReference": "mongodb!ServerType:var"
            },
            {
              "kind": "Content",
              "text": "[keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "ServerType",
              "canonicalReference": "mongodb!ServerType:var"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ServerType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!ServerType:var",
          "docComment": "/**\n * An enumeration of server types we know about\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ServerType: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    readonly Standalone: \"Standalone\";\n    readonly Mongos: \"Mongos\";\n    readonly PossiblePrimary: \"PossiblePrimary\";\n    readonly RSPrimary: \"RSPrimary\";\n    readonly RSSecondary: \"RSSecondary\";\n    readonly RSArbiter: \"RSArbiter\";\n    readonly RSOther: \"RSOther\";\n    readonly RSGhost: \"RSGhost\";\n    readonly Unknown: \"Unknown\";\n    readonly LoadBalancer: \"LoadBalancer\";\n}>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ServerType",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!SetFields:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SetFields<TSchema> = "
            },
            {
              "kind": "Content",
              "text": "({\n    readonly [key in "
            },
            {
              "kind": "Reference",
              "text": "KeysOfAType",
              "canonicalReference": "mongodb!KeysOfAType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<any> | undefined>]?: "
            },
            {
              "kind": "Reference",
              "text": "OptionalId",
              "canonicalReference": "mongodb!OptionalId:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Flatten",
              "canonicalReference": "mongodb!Flatten:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema[key]>> | "
            },
            {
              "kind": "Reference",
              "text": "AddToSetOperators",
              "canonicalReference": "mongodb!AddToSetOperators:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OptionalId",
              "canonicalReference": "mongodb!OptionalId:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Flatten",
              "canonicalReference": "mongodb!Flatten:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema[key]>>>>;\n} & "
            },
            {
              "kind": "Reference",
              "text": "NotAcceptedFields",
              "canonicalReference": "mongodb!NotAcceptedFields:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<any> | undefined>) & {\n    readonly [key: string]: "
            },
            {
              "kind": "Reference",
              "text": "AddToSetOperators",
              "canonicalReference": "mongodb!AddToSetOperators:type"
            },
            {
              "kind": "Content",
              "text": "<any> | any;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SetFields",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 24
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!SetProfilingLevelOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SetProfilingLevelOptions = "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SetProfilingLevelOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!Sort:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Sort = "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SortDirection",
              "canonicalReference": "mongodb!SortDirection:type"
            },
            {
              "kind": "Content",
              "text": ", {\n    $meta: string;\n}> | string[] | {\n    [key: string]: "
            },
            {
              "kind": "Reference",
              "text": "SortDirection",
              "canonicalReference": "mongodb!SortDirection:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "SortDirection",
              "canonicalReference": "mongodb!SortDirection:type"
            },
            {
              "kind": "Content",
              "text": "> | [string, "
            },
            {
              "kind": "Reference",
              "text": "SortDirection",
              "canonicalReference": "mongodb!SortDirection:type"
            },
            {
              "kind": "Content",
              "text": "][] | [string, "
            },
            {
              "kind": "Reference",
              "text": "SortDirection",
              "canonicalReference": "mongodb!SortDirection:type"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Sort",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 16
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!SortDirection:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SortDirection = "
            },
            {
              "kind": "Content",
              "text": "1 | -1 | 'asc' | 'desc' | 'ascending' | 'descending' | {\n    $meta: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SortDirection",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!Stream:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Stream = "
            },
            {
              "kind": "Reference",
              "text": "Socket",
              "canonicalReference": "!\"\\\"net\\\"\".Socket:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLSSocket",
              "canonicalReference": "!\"\\\"tls\\\"\".TLSSocket:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Stream",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!StreamDescription:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class StreamDescription "
            }
          ],
          "releaseTag": "Public",
          "name": "StreamDescription",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!StreamDescription#__nodejs_mock_server__:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "__nodejs_mock_server__?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "__nodejs_mock_server__",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!StreamDescription:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `StreamDescription` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(address: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "StreamDescriptionOptions",
                  "canonicalReference": "mongodb!StreamDescriptionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!StreamDescription#address:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "address: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!StreamDescription#compressor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compressor?: "
                },
                {
                  "kind": "Reference",
                  "text": "CompressorName",
                  "canonicalReference": "mongodb!CompressorName:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "compressor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!StreamDescription#compressors:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compressors: "
                },
                {
                  "kind": "Reference",
                  "text": "CompressorName",
                  "canonicalReference": "mongodb!CompressorName:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "compressors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!StreamDescription#loadBalanced:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadBalanced: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "loadBalanced",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!StreamDescription#logicalSessionTimeoutMinutes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logicalSessionTimeoutMinutes?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "logicalSessionTimeoutMinutes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!StreamDescription#maxBsonObjectSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxBsonObjectSize: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxBsonObjectSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!StreamDescription#maxMessageSizeBytes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxMessageSizeBytes: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxMessageSizeBytes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!StreamDescription#maxWireVersion:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxWireVersion?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxWireVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!StreamDescription#maxWriteBatchSize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxWriteBatchSize: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxWriteBatchSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!StreamDescription#minWireVersion:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minWireVersion?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "minWireVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!StreamDescription#receiveResponse:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "receiveResponse(response: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "response",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "receiveResponse"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!StreamDescription#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!StreamDescription#zlibCompressionLevel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "zlibCompressionLevel?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "zlibCompressionLevel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!StreamDescriptionOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StreamDescriptionOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "StreamDescriptionOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!StreamDescriptionOptions#compressors:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compressors?: "
                },
                {
                  "kind": "Reference",
                  "text": "CompressorName",
                  "canonicalReference": "mongodb!CompressorName:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "compressors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!StreamDescriptionOptions#loadBalanced:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadBalanced: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "loadBalanced",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!StreamDescriptionOptions#logicalSessionTimeoutMinutes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logicalSessionTimeoutMinutes?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "logicalSessionTimeoutMinutes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!SupportedNodeConnectionOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SupportedNodeConnectionOptions = "
            },
            {
              "kind": "Reference",
              "text": "SupportedTLSConnectionOptions",
              "canonicalReference": "mongodb!SupportedTLSConnectionOptions:type"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "SupportedTLSSocketOptions",
              "canonicalReference": "mongodb!SupportedTLSSocketOptions:type"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "SupportedSocketOptions",
              "canonicalReference": "mongodb!SupportedSocketOptions:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SupportedNodeConnectionOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!SupportedSocketOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SupportedSocketOptions = "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TcpNetConnectOpts",
              "canonicalReference": "!\"\\\"net\\\"\".TcpNetConnectOpts:interface"
            },
            {
              "kind": "Content",
              "text": ", typeof "
            },
            {
              "kind": "Reference",
              "text": "LEGAL_TCP_SOCKET_OPTIONS",
              "canonicalReference": "mongodb!LEGAL_TCP_SOCKET_OPTIONS:var"
            },
            {
              "kind": "Content",
              "text": "[number]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SupportedSocketOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!SupportedTLSConnectionOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SupportedTLSConnectionOptions = "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLSConnectionOptions",
              "canonicalReference": "!\"\\\"tls\\\"\".ConnectionOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Extract",
              "canonicalReference": "!Extract:type"
            },
            {
              "kind": "Content",
              "text": "<keyof "
            },
            {
              "kind": "Reference",
              "text": "TLSConnectionOptions",
              "canonicalReference": "!\"\\\"tls\\\"\".ConnectionOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", typeof "
            },
            {
              "kind": "Reference",
              "text": "LEGAL_TLS_SOCKET_OPTIONS",
              "canonicalReference": "mongodb!LEGAL_TLS_SOCKET_OPTIONS:var"
            },
            {
              "kind": "Content",
              "text": "[number]>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SupportedTLSConnectionOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!SupportedTLSSocketOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SupportedTLSSocketOptions = "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLSSocketOptions",
              "canonicalReference": "!\"\\\"tls\\\"\".TLSSocketOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Extract",
              "canonicalReference": "!Extract:type"
            },
            {
              "kind": "Content",
              "text": "<keyof "
            },
            {
              "kind": "Reference",
              "text": "TLSSocketOptions",
              "canonicalReference": "!\"\\\"tls\\\"\".TLSSocketOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", typeof "
            },
            {
              "kind": "Reference",
              "text": "LEGAL_TLS_SOCKET_OPTIONS",
              "canonicalReference": "mongodb!LEGAL_TLS_SOCKET_OPTIONS:var"
            },
            {
              "kind": "Content",
              "text": "[number]>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SupportedTLSSocketOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!TagSet:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type TagSet = "
            },
            {
              "kind": "Content",
              "text": "{\n    [key: string]: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "TagSet",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!TimeSeriesCollectionOptions:interface",
          "docComment": "/**\n * Configuration options for timeseries collections\n *\n * @see\n *\n * https://docs.mongodb.com/manual/core/timeseries-collections/\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TimeSeriesCollectionOptions extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "TimeSeriesCollectionOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TimeSeriesCollectionOptions#granularity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "granularity?: "
                },
                {
                  "kind": "Content",
                  "text": "'seconds' | 'minutes' | 'hours' | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "granularity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TimeSeriesCollectionOptions#metaField:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metaField?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metaField",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TimeSeriesCollectionOptions#timeField:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timeField: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "timeField",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!TopologyClosedEvent:class",
          "docComment": "/**\n * Emitted when topology is closed.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `TopologyClosedEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TopologyClosedEvent "
            }
          ],
          "releaseTag": "Public",
          "name": "TopologyClosedEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyClosedEvent#topologyId:member",
              "docComment": "/**\n * A unique identifier for the topology\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "topologyId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "topologyId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!TopologyDescription:class",
          "docComment": "/**\n * Representation of a deployment of servers\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TopologyDescription "
            }
          ],
          "releaseTag": "Public",
          "name": "TopologyDescription",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!TopologyDescription:constructor(1)",
              "docComment": "/**\n * Create a TopologyDescription\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(topologyType: "
                },
                {
                  "kind": "Reference",
                  "text": "TopologyType",
                  "canonicalReference": "mongodb!TopologyType:type"
                },
                {
                  "kind": "Content",
                  "text": ", serverDescriptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "ServerDescription",
                  "canonicalReference": "mongodb!ServerDescription:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", setName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", maxSetVersion?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", maxElectionId?: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ", commonWireVersion?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "TopologyDescriptionOptions",
                  "canonicalReference": "mongodb!TopologyDescriptionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "topologyType",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "serverDescriptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "setName",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "maxSetVersion",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "maxElectionId",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "commonWireVersion",
                  "parameterTypeTokenRange": {
                    "startIndex": 14,
                    "endIndex": 15
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 16,
                    "endIndex": 17
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyDescription#commonWireVersion:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "commonWireVersion?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "commonWireVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyDescription#compatibilityError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compatibilityError?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "compatibilityError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyDescription#compatible:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compatible: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "compatible",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyDescription#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get error(): "
                },
                {
                  "kind": "Reference",
                  "text": "MongoError",
                  "canonicalReference": "mongodb!MongoError:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyDescription#hasDataBearingServers:member",
              "docComment": "/**\n * Determines if this topology description has a data-bearing server available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hasDataBearingServers(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hasDataBearingServers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyDescription#hasKnownServers:member",
              "docComment": "/**\n * Determines if the topology description has any known servers\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hasKnownServers(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hasKnownServers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyDescription#heartbeatFrequencyMS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "heartbeatFrequencyMS: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "heartbeatFrequencyMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyDescription#localThresholdMS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "localThresholdMS: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "localThresholdMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyDescription#logicalSessionTimeoutMinutes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logicalSessionTimeoutMinutes?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "logicalSessionTimeoutMinutes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyDescription#maxElectionId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxElectionId?: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxElectionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyDescription#maxSetVersion:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxSetVersion?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxSetVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyDescription#servers:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "servers: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "ServerDescription",
                  "canonicalReference": "mongodb!ServerDescription:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "servers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyDescription#setName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "setName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyDescription#stale:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stale: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "stale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyDescription#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "TopologyType",
                  "canonicalReference": "mongodb!TopologyType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!TopologyDescriptionChangedEvent:class",
          "docComment": "/**\n * Emitted when topology description changes.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `TopologyDescriptionChangedEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TopologyDescriptionChangedEvent "
            }
          ],
          "releaseTag": "Public",
          "name": "TopologyDescriptionChangedEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyDescriptionChangedEvent#newDescription:member",
              "docComment": "/**\n * The new topology description\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "newDescription: "
                },
                {
                  "kind": "Reference",
                  "text": "TopologyDescription",
                  "canonicalReference": "mongodb!TopologyDescription:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "newDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyDescriptionChangedEvent#previousDescription:member",
              "docComment": "/**\n * The old topology description\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "previousDescription: "
                },
                {
                  "kind": "Reference",
                  "text": "TopologyDescription",
                  "canonicalReference": "mongodb!TopologyDescription:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "previousDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyDescriptionChangedEvent#topologyId:member",
              "docComment": "/**\n * A unique identifier for the topology\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "topologyId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "topologyId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!TopologyDescriptionOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TopologyDescriptionOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "TopologyDescriptionOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TopologyDescriptionOptions#heartbeatFrequencyMS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "heartbeatFrequencyMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "heartbeatFrequencyMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TopologyDescriptionOptions#localThresholdMS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "localThresholdMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "localThresholdMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!TopologyEvents:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type TopologyEvents = "
            },
            {
              "kind": "Content",
              "text": "{\n    connect(topology: "
            },
            {
              "kind": "Reference",
              "text": "Topology",
              "canonicalReference": "mongodb!Topology:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    serverOpening(event: "
            },
            {
              "kind": "Reference",
              "text": "ServerOpeningEvent",
              "canonicalReference": "mongodb!ServerOpeningEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    serverClosed(event: "
            },
            {
              "kind": "Reference",
              "text": "ServerClosedEvent",
              "canonicalReference": "mongodb!ServerClosedEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    serverDescriptionChanged(event: "
            },
            {
              "kind": "Reference",
              "text": "ServerDescriptionChangedEvent",
              "canonicalReference": "mongodb!ServerDescriptionChangedEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    topologyClosed(event: "
            },
            {
              "kind": "Reference",
              "text": "TopologyClosedEvent",
              "canonicalReference": "mongodb!TopologyClosedEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    topologyOpening(event: "
            },
            {
              "kind": "Reference",
              "text": "TopologyOpeningEvent",
              "canonicalReference": "mongodb!TopologyOpeningEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    topologyDescriptionChanged(event: "
            },
            {
              "kind": "Reference",
              "text": "TopologyDescriptionChangedEvent",
              "canonicalReference": "mongodb!TopologyDescriptionChangedEvent:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    error(error: "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": "): void;\n    open(topology: "
            },
            {
              "kind": "Reference",
              "text": "Topology",
              "canonicalReference": "mongodb!Topology:class"
            },
            {
              "kind": "Content",
              "text": "): void;\n    close(): void;\n    timeout(): void;\n} & "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ServerEvents",
              "canonicalReference": "mongodb!ServerEvents:type"
            },
            {
              "kind": "Content",
              "text": ", 'connect'> & "
            },
            {
              "kind": "Reference",
              "text": "ConnectionPoolEvents",
              "canonicalReference": "mongodb!ConnectionPoolEvents:type"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "ConnectionEvents",
              "canonicalReference": "mongodb!ConnectionEvents:type"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "EventEmitterWithState",
              "canonicalReference": "mongodb!EventEmitterWithState:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "TopologyEvents",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 29
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!TopologyOpeningEvent:class",
          "docComment": "/**\n * Emitted when topology is initialized.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `TopologyOpeningEvent` class.\n *\n * @category\n *\n * Event\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TopologyOpeningEvent "
            }
          ],
          "releaseTag": "Public",
          "name": "TopologyOpeningEvent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!TopologyOpeningEvent#topologyId:member",
              "docComment": "/**\n * A unique identifier for the topology\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "topologyId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "topologyId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!TopologyOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TopologyOptions extends "
            },
            {
              "kind": "Reference",
              "text": "BSONSerializeOptions",
              "canonicalReference": "mongodb!BSONSerializeOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ServerOptions",
              "canonicalReference": "mongodb!ServerOptions:type"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "TopologyOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TopologyOptions#directConnection:member",
              "docComment": "/**\n * Indicates that a client should directly connect to a node without attempting to discover its topology type\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "directConnection: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "directConnection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TopologyOptions#hosts:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hosts: "
                },
                {
                  "kind": "Reference",
                  "text": "HostAddress",
                  "canonicalReference": "mongodb!HostAddress:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hosts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TopologyOptions#loadBalanced:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadBalanced: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "loadBalanced",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TopologyOptions#metadata:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata: "
                },
                {
                  "kind": "Reference",
                  "text": "ClientMetadata",
                  "canonicalReference": "mongodb!ClientMetadata:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TopologyOptions#replicaSet:member",
              "docComment": "/**\n * The name of the replica set to connect to\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replicaSet?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "replicaSet",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TopologyOptions#retryReads:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retryReads: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "retryReads",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TopologyOptions#retryWrites:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retryWrites: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "retryWrites",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TopologyOptions#serverApi:member",
              "docComment": "/**\n * MongoDB server API version\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverApi?: "
                },
                {
                  "kind": "Reference",
                  "text": "ServerApi",
                  "canonicalReference": "mongodb!ServerApi:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "serverApi",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TopologyOptions#serverSelectionTimeoutMS:member",
              "docComment": "/**\n * How long to block for server selection before throwing an error\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverSelectionTimeoutMS: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "serverSelectionTimeoutMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TopologyOptions#srvHost:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "srvHost?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "srvHost",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TopologyOptions#srvMaxHosts:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "srvMaxHosts: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "srvMaxHosts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TopologyOptions#srvServiceName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "srvServiceName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "srvServiceName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!TopologyType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type TopologyType = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "TopologyType",
              "canonicalReference": "mongodb!TopologyType:var"
            },
            {
              "kind": "Content",
              "text": "[keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "TopologyType",
              "canonicalReference": "mongodb!TopologyType:var"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "TopologyType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mongodb!TopologyType:var",
          "docComment": "/**\n * An enumeration of topology types we know about\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "TopologyType: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    readonly Single: \"Single\";\n    readonly ReplicaSetNoPrimary: \"ReplicaSetNoPrimary\";\n    readonly ReplicaSetWithPrimary: \"ReplicaSetWithPrimary\";\n    readonly Sharded: \"Sharded\";\n    readonly Unknown: \"Unknown\";\n    readonly LoadBalanced: \"LoadBalanced\";\n}>"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "TopologyType",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!TopologyVersion:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TopologyVersion "
            }
          ],
          "releaseTag": "Public",
          "name": "TopologyVersion",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TopologyVersion#counter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "counter: "
                },
                {
                  "kind": "Reference",
                  "text": "Long",
                  "canonicalReference": "bson!Long:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "counter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TopologyVersion#processId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processId: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "processId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!Transaction:class",
          "docComment": "/**\n * A class maintaining state related to a server transaction. Internal Only\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `Transaction` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Transaction "
            }
          ],
          "releaseTag": "Public",
          "name": "Transaction",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Transaction#isActive:member",
              "docComment": "/**\n * @returns Whether this session is presently in a transaction\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isActive(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isActive",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Transaction#isCommitted:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isCommitted(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isCommitted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Transaction#isPinned:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isPinned(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isPinned",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Transaction#isStarting:member",
              "docComment": "/**\n * @returns Whether the transaction has started\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isStarting(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isStarting",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Transaction#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options: "
                },
                {
                  "kind": "Reference",
                  "text": "TransactionOptions",
                  "canonicalReference": "mongodb!TransactionOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!Transaction#recoveryToken:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get recoveryToken(): "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "recoveryToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!TransactionOptions:interface",
          "docComment": "/**\n * Configuration options for a transaction.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TransactionOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "TransactionOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TransactionOptions#maxCommitTimeMS:member",
              "docComment": "/**\n * Specifies the maximum amount of time to allow a commit action on a transaction to run in milliseconds\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxCommitTimeMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxCommitTimeMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TransactionOptions#readConcern:member",
              "docComment": "/**\n * A default read concern for commands in this transaction\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readConcern?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadConcernLike",
                  "canonicalReference": "mongodb!ReadConcernLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TransactionOptions#readPreference:member",
              "docComment": "/**\n * A default read preference for commands in this transaction\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readPreference?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadPreference",
                  "canonicalReference": "mongodb!ReadPreference:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "readPreference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!TransactionOptions#writeConcern:member",
              "docComment": "/**\n * A default writeConcern for commands in this transaction\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "writeConcern?: "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcern",
                  "canonicalReference": "mongodb!WriteConcern:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "writeConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!TypedEventEmitter:class",
          "docComment": "/**\n * Typescript type safe event emitter\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TypedEventEmitter<Events extends "
            },
            {
              "kind": "Reference",
              "text": "EventsDescription",
              "canonicalReference": "mongodb!EventsDescription:type"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "EventEmitter",
              "canonicalReference": "!EventEmitter:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "Events",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "TypedEventEmitter",
          "members": [],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!TypedEventEmitter:interface",
          "docComment": "/**\n * Typescript type safe event emitter\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface TypedEventEmitter<Events extends "
            },
            {
              "kind": "Reference",
              "text": "EventsDescription",
              "canonicalReference": "mongodb!EventsDescription:type"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "EventEmitter",
              "canonicalReference": "!EventEmitter:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "Events",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "TypedEventEmitter",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#addListener:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addListener<EventKey extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof Events"
                },
                {
                  "kind": "Content",
                  "text": ">(event: "
                },
                {
                  "kind": "Content",
                  "text": "EventKey"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "Events[EventKey]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "EventKey",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "addListener"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#addListener:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addListener(event: "
                },
                {
                  "kind": "Reference",
                  "text": "CommonEvents",
                  "canonicalReference": "mongodb!CommonEvents:type"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(eventName: string | symbol, listener: "
                },
                {
                  "kind": "Reference",
                  "text": "GenericListener",
                  "canonicalReference": "mongodb!GenericListener:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "name": "addListener"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#addListener:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addListener(event: "
                },
                {
                  "kind": "Content",
                  "text": "string | symbol"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Reference",
                  "text": "GenericListener",
                  "canonicalReference": "mongodb!GenericListener:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "addListener"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#emit:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "emit<EventKey extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof Events"
                },
                {
                  "kind": "Content",
                  "text": ">(event: "
                },
                {
                  "kind": "Content",
                  "text": "EventKey | symbol"
                },
                {
                  "kind": "Content",
                  "text": ", ...args: "
                },
                {
                  "kind": "Reference",
                  "text": "Parameters",
                  "canonicalReference": "!Parameters:type"
                },
                {
                  "kind": "Content",
                  "text": "<Events[EventKey]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "EventKey",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "emit"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#eventNames:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eventNames(): "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "eventNames"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#getMaxListeners:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMaxListeners(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getMaxListeners"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#listenerCount:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listenerCount<EventKey extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof Events"
                },
                {
                  "kind": "Content",
                  "text": ">(type: "
                },
                {
                  "kind": "Content",
                  "text": "EventKey | "
                },
                {
                  "kind": "Reference",
                  "text": "CommonEvents",
                  "canonicalReference": "mongodb!CommonEvents:type"
                },
                {
                  "kind": "Content",
                  "text": " | symbol | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "EventKey",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "listenerCount"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#listeners:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listeners<EventKey extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof Events"
                },
                {
                  "kind": "Content",
                  "text": ">(event: "
                },
                {
                  "kind": "Content",
                  "text": "EventKey | "
                },
                {
                  "kind": "Reference",
                  "text": "CommonEvents",
                  "canonicalReference": "mongodb!CommonEvents:type"
                },
                {
                  "kind": "Content",
                  "text": " | symbol | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "Events[EventKey][]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "EventKey",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "listeners"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#off:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "off<EventKey extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof Events"
                },
                {
                  "kind": "Content",
                  "text": ">(event: "
                },
                {
                  "kind": "Content",
                  "text": "EventKey"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "Events[EventKey]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "EventKey",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "off"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#off:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "off(event: "
                },
                {
                  "kind": "Reference",
                  "text": "CommonEvents",
                  "canonicalReference": "mongodb!CommonEvents:type"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(eventName: string | symbol, listener: "
                },
                {
                  "kind": "Reference",
                  "text": "GenericListener",
                  "canonicalReference": "mongodb!GenericListener:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "name": "off"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#off:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "off(event: "
                },
                {
                  "kind": "Content",
                  "text": "string | symbol"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Reference",
                  "text": "GenericListener",
                  "canonicalReference": "mongodb!GenericListener:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "off"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#on:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "on<EventKey extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof Events"
                },
                {
                  "kind": "Content",
                  "text": ">(event: "
                },
                {
                  "kind": "Content",
                  "text": "EventKey"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "Events[EventKey]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "EventKey",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "on"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#on:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "on(event: "
                },
                {
                  "kind": "Reference",
                  "text": "CommonEvents",
                  "canonicalReference": "mongodb!CommonEvents:type"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(eventName: string | symbol, listener: "
                },
                {
                  "kind": "Reference",
                  "text": "GenericListener",
                  "canonicalReference": "mongodb!GenericListener:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "name": "on"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#on:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "on(event: "
                },
                {
                  "kind": "Content",
                  "text": "string | symbol"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Reference",
                  "text": "GenericListener",
                  "canonicalReference": "mongodb!GenericListener:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "on"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#once:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "once<EventKey extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof Events"
                },
                {
                  "kind": "Content",
                  "text": ">(event: "
                },
                {
                  "kind": "Content",
                  "text": "EventKey"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "Events[EventKey]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "EventKey",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "once"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#once:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "once(event: "
                },
                {
                  "kind": "Reference",
                  "text": "CommonEvents",
                  "canonicalReference": "mongodb!CommonEvents:type"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(eventName: string | symbol, listener: "
                },
                {
                  "kind": "Reference",
                  "text": "GenericListener",
                  "canonicalReference": "mongodb!GenericListener:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "name": "once"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#once:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "once(event: "
                },
                {
                  "kind": "Content",
                  "text": "string | symbol"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Reference",
                  "text": "GenericListener",
                  "canonicalReference": "mongodb!GenericListener:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "once"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#prependListener:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prependListener<EventKey extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof Events"
                },
                {
                  "kind": "Content",
                  "text": ">(event: "
                },
                {
                  "kind": "Content",
                  "text": "EventKey"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "Events[EventKey]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "EventKey",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "prependListener"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#prependListener:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prependListener(event: "
                },
                {
                  "kind": "Reference",
                  "text": "CommonEvents",
                  "canonicalReference": "mongodb!CommonEvents:type"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(eventName: string | symbol, listener: "
                },
                {
                  "kind": "Reference",
                  "text": "GenericListener",
                  "canonicalReference": "mongodb!GenericListener:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "name": "prependListener"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#prependListener:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prependListener(event: "
                },
                {
                  "kind": "Content",
                  "text": "string | symbol"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Reference",
                  "text": "GenericListener",
                  "canonicalReference": "mongodb!GenericListener:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "prependListener"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#prependOnceListener:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prependOnceListener<EventKey extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof Events"
                },
                {
                  "kind": "Content",
                  "text": ">(event: "
                },
                {
                  "kind": "Content",
                  "text": "EventKey"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "Events[EventKey]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "EventKey",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "prependOnceListener"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#prependOnceListener:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prependOnceListener(event: "
                },
                {
                  "kind": "Reference",
                  "text": "CommonEvents",
                  "canonicalReference": "mongodb!CommonEvents:type"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(eventName: string | symbol, listener: "
                },
                {
                  "kind": "Reference",
                  "text": "GenericListener",
                  "canonicalReference": "mongodb!GenericListener:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "name": "prependOnceListener"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#prependOnceListener:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prependOnceListener(event: "
                },
                {
                  "kind": "Content",
                  "text": "string | symbol"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Reference",
                  "text": "GenericListener",
                  "canonicalReference": "mongodb!GenericListener:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "prependOnceListener"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#rawListeners:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rawListeners<EventKey extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof Events"
                },
                {
                  "kind": "Content",
                  "text": ">(event: "
                },
                {
                  "kind": "Content",
                  "text": "EventKey | "
                },
                {
                  "kind": "Reference",
                  "text": "CommonEvents",
                  "canonicalReference": "mongodb!CommonEvents:type"
                },
                {
                  "kind": "Content",
                  "text": " | symbol | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "Events[EventKey][]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "EventKey",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "rawListeners"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#removeAllListeners:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeAllListeners<EventKey extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof Events"
                },
                {
                  "kind": "Content",
                  "text": ">(event?: "
                },
                {
                  "kind": "Content",
                  "text": "EventKey | "
                },
                {
                  "kind": "Reference",
                  "text": "CommonEvents",
                  "canonicalReference": "mongodb!CommonEvents:type"
                },
                {
                  "kind": "Content",
                  "text": " | symbol | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "EventKey",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "removeAllListeners"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#removeListener:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeListener<EventKey extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof Events"
                },
                {
                  "kind": "Content",
                  "text": ">(event: "
                },
                {
                  "kind": "Content",
                  "text": "EventKey"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "Events[EventKey]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "EventKey",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "removeListener"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#removeListener:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeListener(event: "
                },
                {
                  "kind": "Reference",
                  "text": "CommonEvents",
                  "canonicalReference": "mongodb!CommonEvents:type"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(eventName: string | symbol, listener: "
                },
                {
                  "kind": "Reference",
                  "text": "GenericListener",
                  "canonicalReference": "mongodb!GenericListener:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "name": "removeListener"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#removeListener:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeListener(event: "
                },
                {
                  "kind": "Content",
                  "text": "string | symbol"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Reference",
                  "text": "GenericListener",
                  "canonicalReference": "mongodb!GenericListener:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "removeListener"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "mongodb!TypedEventEmitter#setMaxListeners:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setMaxListeners(n: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "n",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "setMaxListeners"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!UnorderedBulkOperation:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class UnorderedBulkOperation extends "
            },
            {
              "kind": "Reference",
              "text": "BulkOperationBase",
              "canonicalReference": "mongodb!BulkOperationBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "UnorderedBulkOperation",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!UnorderedBulkOperation:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `UnorderedBulkOperation` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(collection: "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "mongodb!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteOptions",
                  "canonicalReference": "mongodb!BulkWriteOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collection",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!UnorderedBulkOperation#addToOperationsList:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addToOperationsList(batchType: "
                },
                {
                  "kind": "Reference",
                  "text": "BatchType",
                  "canonicalReference": "mongodb!BatchType:type"
                },
                {
                  "kind": "Content",
                  "text": ", document: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateStatement",
                  "canonicalReference": "mongodb!UpdateStatement:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "DeleteStatement",
                  "canonicalReference": "mongodb!DeleteStatement:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "batchType",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "document",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "addToOperationsList"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!UnorderedBulkOperation#handleWriteError:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handleWriteError(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "Callback",
                  "canonicalReference": "mongodb!Callback:type"
                },
                {
                  "kind": "Content",
                  "text": ", writeResult: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteResult",
                  "canonicalReference": "mongodb!BulkWriteResult:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "writeResult",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "handleWriteError"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!UpdateDescription:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UpdateDescription<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "UpdateDescription",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateDescription#removedFields:member",
              "docComment": "/**\n * An array of field names that were removed from the document.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removedFields?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "removedFields",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateDescription#truncatedArrays:member",
              "docComment": "/**\n * An array of documents which record array truncations performed with pipeline-based updates using one or more of the following stages: - $addFields - $set - $replaceRoot - $replaceWith\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "truncatedArrays?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        field: string;\n        newSize: number;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "truncatedArrays",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateDescription#updatedFields:member",
              "docComment": "/**\n * A document containing key:value pairs of names of the fields that were changed, and the new value for those fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatedFields?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "updatedFields",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!UpdateFilter:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type UpdateFilter<TSchema> = "
            },
            {
              "kind": "Content",
              "text": "{\n    $currentDate?: "
            },
            {
              "kind": "Reference",
              "text": "OnlyFieldsOfType",
              "canonicalReference": "mongodb!OnlyFieldsOfType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Timestamp",
              "canonicalReference": "bson!Timestamp:class"
            },
            {
              "kind": "Content",
              "text": ", true | {\n        $type: 'date' | 'timestamp';\n    }>;\n    $inc?: "
            },
            {
              "kind": "Reference",
              "text": "OnlyFieldsOfType",
              "canonicalReference": "mongodb!OnlyFieldsOfType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, "
            },
            {
              "kind": "Reference",
              "text": "NumericType",
              "canonicalReference": "mongodb!NumericType:type"
            },
            {
              "kind": "Content",
              "text": " | undefined>;\n    $min?: "
            },
            {
              "kind": "Reference",
              "text": "MatchKeysAndValues",
              "canonicalReference": "mongodb!MatchKeysAndValues:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema>;\n    $max?: "
            },
            {
              "kind": "Reference",
              "text": "MatchKeysAndValues",
              "canonicalReference": "mongodb!MatchKeysAndValues:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema>;\n    $mul?: "
            },
            {
              "kind": "Reference",
              "text": "OnlyFieldsOfType",
              "canonicalReference": "mongodb!OnlyFieldsOfType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, "
            },
            {
              "kind": "Reference",
              "text": "NumericType",
              "canonicalReference": "mongodb!NumericType:type"
            },
            {
              "kind": "Content",
              "text": " | undefined>;\n    $rename?: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string>;\n    $set?: "
            },
            {
              "kind": "Reference",
              "text": "MatchKeysAndValues",
              "canonicalReference": "mongodb!MatchKeysAndValues:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema>;\n    $setOnInsert?: "
            },
            {
              "kind": "Reference",
              "text": "MatchKeysAndValues",
              "canonicalReference": "mongodb!MatchKeysAndValues:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema>;\n    $unset?: "
            },
            {
              "kind": "Reference",
              "text": "OnlyFieldsOfType",
              "canonicalReference": "mongodb!OnlyFieldsOfType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, any, '' | true | 1>;\n    $addToSet?: "
            },
            {
              "kind": "Reference",
              "text": "SetFields",
              "canonicalReference": "mongodb!SetFields:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema>;\n    $pop?: "
            },
            {
              "kind": "Reference",
              "text": "OnlyFieldsOfType",
              "canonicalReference": "mongodb!OnlyFieldsOfType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<any>, 1 | -1>;\n    $pull?: "
            },
            {
              "kind": "Reference",
              "text": "PullOperator",
              "canonicalReference": "mongodb!PullOperator:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema>;\n    $push?: "
            },
            {
              "kind": "Reference",
              "text": "PushOperator",
              "canonicalReference": "mongodb!PushOperator:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema>;\n    $pullAll?: "
            },
            {
              "kind": "Reference",
              "text": "PullAllOperator",
              "canonicalReference": "mongodb!PullAllOperator:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema>;\n    $bit?: "
            },
            {
              "kind": "Reference",
              "text": "OnlyFieldsOfType",
              "canonicalReference": "mongodb!OnlyFieldsOfType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, "
            },
            {
              "kind": "Reference",
              "text": "NumericType",
              "canonicalReference": "mongodb!NumericType:type"
            },
            {
              "kind": "Content",
              "text": " | undefined, {\n        and: "
            },
            {
              "kind": "Reference",
              "text": "IntegerType",
              "canonicalReference": "mongodb!IntegerType:type"
            },
            {
              "kind": "Content",
              "text": ";\n    } | {\n        or: "
            },
            {
              "kind": "Reference",
              "text": "IntegerType",
              "canonicalReference": "mongodb!IntegerType:type"
            },
            {
              "kind": "Content",
              "text": ";\n    } | {\n        xor: "
            },
            {
              "kind": "Reference",
              "text": "IntegerType",
              "canonicalReference": "mongodb!IntegerType:type"
            },
            {
              "kind": "Content",
              "text": ";\n    }>;\n} & "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "UpdateFilter",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 51
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!UpdateManyModel:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UpdateManyModel<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "UpdateManyModel",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateManyModel#arrayFilters:member",
              "docComment": "/**\n * A set of filters specifying to which array elements an update should apply.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arrayFilters?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "arrayFilters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateManyModel#collation:member",
              "docComment": "/**\n * Specifies a collation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collation?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollationOptions",
                  "canonicalReference": "mongodb!CollationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateManyModel#filter:member",
              "docComment": "/**\n * The filter to limit the updated documents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "filter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateManyModel#hint:member",
              "docComment": "/**\n * The index to use. If specified, then the query system will only consider plans using the hinted index.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hint?: "
                },
                {
                  "kind": "Reference",
                  "text": "Hint",
                  "canonicalReference": "mongodb!Hint:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateManyModel#update:member",
              "docComment": "/**\n * A document or pipeline containing update operators.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "update: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateFilter",
                  "canonicalReference": "mongodb!UpdateFilter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema> | "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateFilter",
                  "canonicalReference": "mongodb!UpdateFilter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "update",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateManyModel#upsert:member",
              "docComment": "/**\n * When true, creates a new document if no document matches the query.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "upsert?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "upsert",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!UpdateOneModel:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UpdateOneModel<TSchema extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "UpdateOneModel",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateOneModel#arrayFilters:member",
              "docComment": "/**\n * A set of filters specifying to which array elements an update should apply.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arrayFilters?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "arrayFilters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateOneModel#collation:member",
              "docComment": "/**\n * Specifies a collation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collation?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollationOptions",
                  "canonicalReference": "mongodb!CollationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateOneModel#filter:member",
              "docComment": "/**\n * The filter to limit the updated documents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filter: "
                },
                {
                  "kind": "Reference",
                  "text": "Filter",
                  "canonicalReference": "mongodb!Filter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "filter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateOneModel#hint:member",
              "docComment": "/**\n * The index to use. If specified, then the query system will only consider plans using the hinted index.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hint?: "
                },
                {
                  "kind": "Reference",
                  "text": "Hint",
                  "canonicalReference": "mongodb!Hint:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateOneModel#update:member",
              "docComment": "/**\n * A document or pipeline containing update operators.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "update: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateFilter",
                  "canonicalReference": "mongodb!UpdateFilter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema> | "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateFilter",
                  "canonicalReference": "mongodb!UpdateFilter:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSchema>[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "update",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateOneModel#upsert:member",
              "docComment": "/**\n * When true, creates a new document if no document matches the query.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "upsert?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "upsert",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!UpdateOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UpdateOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "UpdateOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateOptions#arrayFilters:member",
              "docComment": "/**\n * A set of filters specifying to which array elements an update should apply\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arrayFilters?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "arrayFilters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateOptions#bypassDocumentValidation:member",
              "docComment": "/**\n * If true, allows the write to opt-out of document level validation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bypassDocumentValidation?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bypassDocumentValidation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateOptions#collation:member",
              "docComment": "/**\n * Specifies a collation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collation?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollationOptions",
                  "canonicalReference": "mongodb!CollationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateOptions#hint:member",
              "docComment": "/**\n * Specify that the update query should only consider plans using the hinted index\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hint?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateOptions#let:member",
              "docComment": "/**\n * Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "let?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "let",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateOptions#upsert:member",
              "docComment": "/**\n * When true, creates a new document if no document matches the query\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "upsert?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "upsert",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!UpdateResult:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UpdateResult "
            }
          ],
          "releaseTag": "Public",
          "name": "UpdateResult",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateResult#acknowledged:member",
              "docComment": "/**\n * Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "acknowledged: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "acknowledged",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateResult#matchedCount:member",
              "docComment": "/**\n * The number of documents that matched the filter\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "matchedCount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "matchedCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateResult#modifiedCount:member",
              "docComment": "/**\n * The number of documents that were modified\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "modifiedCount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "modifiedCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateResult#upsertedCount:member",
              "docComment": "/**\n * The number of documents that were upserted\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "upsertedCount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "upsertedCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateResult#upsertedId:member",
              "docComment": "/**\n * The identifier of the inserted document if an upsert took place\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "upsertedId: "
                },
                {
                  "kind": "Reference",
                  "text": "ObjectId",
                  "canonicalReference": "bson!~ObjectId:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "upsertedId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!UpdateStatement:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UpdateStatement "
            }
          ],
          "releaseTag": "Public",
          "name": "UpdateStatement",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateStatement#arrayFilters:member",
              "docComment": "/**\n * An array of filter documents that determines which array elements to modify for an update operation on an array field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arrayFilters?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "arrayFilters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateStatement#collation:member",
              "docComment": "/**\n * Specifies the collation to use for the operation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collation?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollationOptions",
                  "canonicalReference": "mongodb!CollationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateStatement#hint:member",
              "docComment": "/**\n * A document or string that specifies the index to use to support the query predicate.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hint?: "
                },
                {
                  "kind": "Reference",
                  "text": "Hint",
                  "canonicalReference": "mongodb!Hint:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateStatement#multi:member",
              "docComment": "/**\n * If true, updates all documents that meet the query criteria.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "multi?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "multi",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateStatement#q:member",
              "docComment": "/**\n * The query that matches documents to update.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "q: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "q",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateStatement#u:member",
              "docComment": "/**\n * The modifications to apply.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "u: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "u",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!UpdateStatement#upsert:member",
              "docComment": "/**\n * If true, perform an insert if no documents match the query.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "upsert?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "upsert",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!ValidateCollectionOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ValidateCollectionOptions extends "
            },
            {
              "kind": "Reference",
              "text": "CommandOperationOptions",
              "canonicalReference": "mongodb!CommandOperationOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ValidateCollectionOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!ValidateCollectionOptions#background:member",
              "docComment": "/**\n * Validates a collection in the background, without interrupting read or write traffic (only in MongoDB 4.4+)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "background?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "background",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!W:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type W = "
            },
            {
              "kind": "Content",
              "text": "number | 'majority'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "W",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!WiredTigerData:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface WiredTigerData extends "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "bson!Document:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "WiredTigerData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!WiredTigerData#\"block-manager\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "'block-manager': "
                },
                {
                  "kind": "Content",
                  "text": "{\n        'allocations requiring file extension': number;\n        'blocks allocated': number;\n        'blocks freed': number;\n        'checkpoint size': number;\n        'file allocation unit size': number;\n        'file bytes available for reuse': number;\n        'file magic number': number;\n        'file major version number': number;\n        'file size in bytes': number;\n        'minor version number': number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"block-manager\"",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!WiredTigerData#btree:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "btree: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        'btree checkpoint generation': number;\n        'column-store fixed-size leaf pages': number;\n        'column-store internal pages': number;\n        'column-store variable-size RLE encoded values': number;\n        'column-store variable-size deleted values': number;\n        'column-store variable-size leaf pages': number;\n        'fixed-record size': number;\n        'maximum internal page key size': number;\n        'maximum internal page size': number;\n        'maximum leaf page key size': number;\n        'maximum leaf page size': number;\n        'maximum leaf page value size': number;\n        'maximum tree depth': number;\n        'number of key/value pairs': number;\n        'overflow pages': number;\n        'pages rewritten by compaction': number;\n        'row-store internal pages': number;\n        'row-store leaf pages': number;\n    } & "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "btree",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!WiredTigerData#cache_walk:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cache_walk: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        'Average difference between current eviction generation when the page was last considered': number;\n        'Average on-disk page image size seen': number;\n        'Clean pages currently in cache': number;\n        'Current eviction generation': number;\n        'Dirty pages currently in cache': number;\n        'Entries in the root page': number;\n        'Internal pages currently in cache': number;\n        'Leaf pages currently in cache': number;\n        'Maximum difference between current eviction generation when the page was last considered': number;\n        'Maximum page size seen': number;\n        'Minimum on-disk page image size seen': number;\n        'On-disk page image sizes smaller than a single allocation unit': number;\n        'Pages created in memory and never written': number;\n        'Pages currently queued for eviction': number;\n        'Pages that could not be queued for eviction': number;\n        'Refs skipped during cache traversal': number;\n        'Size of the root page': number;\n        'Total number of pages currently in cache': number;\n    } & "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cache_walk",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!WiredTigerData#cache:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cache: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        'bytes currently in the cache': number;\n        'bytes read into cache': number;\n        'bytes written from cache': number;\n        'checkpoint blocked page eviction': number;\n        'data source pages selected for eviction unable to be evicted': number;\n        'hazard pointer blocked page eviction': number;\n        'in-memory page passed criteria to be split': number;\n        'in-memory page splits': number;\n        'internal pages evicted': number;\n        'internal pages split during eviction': number;\n        'leaf pages split during eviction': number;\n        'modified pages evicted': number;\n        'overflow pages read into cache': number;\n        'overflow values cached in memory': number;\n        'page split during eviction deepened the tree': number;\n        'page written requiring lookaside records': number;\n        'pages read into cache': number;\n        'pages read into cache requiring lookaside entries': number;\n        'pages requested from the cache': number;\n        'pages written from cache': number;\n        'pages written requiring in-memory restoration': number;\n        'tracked dirty bytes in the cache': number;\n        'unmodified pages evicted': number;\n    } & "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cache",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!WiredTigerData#compression:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compression: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        'compressed pages read': number;\n        'compressed pages written': number;\n        'page written failed to compress': number;\n        'page written was too small to compress': number;\n        'raw compression call failed, additional data available': number;\n        'raw compression call failed, no additional data available': number;\n        'raw compression call succeeded': number;\n    } & "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "compression",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!WiredTigerData#cursor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cursor: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        'bulk-loaded cursor-insert calls': number;\n        'create calls': number;\n        'cursor-insert key and value bytes inserted': number;\n        'cursor-remove key bytes removed': number;\n        'cursor-update value bytes updated': number;\n        'insert calls': number;\n        'next calls': number;\n        'prev calls': number;\n        'remove calls': number;\n        'reset calls': number;\n        'restarted searches': number;\n        'search calls': number;\n        'search near calls': number;\n        'truncate calls': number;\n        'update calls': number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cursor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!WiredTigerData#LSM:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "LSM: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        'bloom filter false positives': number;\n        'bloom filter hits': number;\n        'bloom filter misses': number;\n        'bloom filter pages evicted from cache': number;\n        'bloom filter pages read into cache': number;\n        'bloom filters in the LSM tree': number;\n        'chunks in the LSM tree': number;\n        'highest merge generation in the LSM tree': number;\n        'queries that could have benefited from a Bloom filter that did not exist': number;\n        'sleep for LSM checkpoint throttle': number;\n        'sleep for LSM merge throttle': number;\n        'total size of bloom filters': number;\n    } & "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "LSM",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!WiredTigerData#reconciliation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reconciliation: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        'dictionary matches': number;\n        'fast-path pages deleted': number;\n        'internal page key bytes discarded using suffix compression': number;\n        'internal page multi-block writes': number;\n        'internal-page overflow keys': number;\n        'leaf page key bytes discarded using prefix compression': number;\n        'leaf page multi-block writes': number;\n        'leaf-page overflow keys': number;\n        'maximum blocks required for a page': number;\n        'overflow values written': number;\n        'page checksum matches': number;\n        'page reconciliation calls': number;\n        'page reconciliation calls for eviction': number;\n        'pages deleted': number;\n    } & "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reconciliation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!WithId:type",
          "docComment": "/**\n * Add an _id field to an object shaped type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type WithId<TSchema> = "
            },
            {
              "kind": "Reference",
              "text": "EnhancedOmit",
              "canonicalReference": "mongodb!EnhancedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, '_id'> & {\n    _id: "
            },
            {
              "kind": "Reference",
              "text": "InferIdType",
              "canonicalReference": "mongodb!InferIdType:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "WithId",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!WithoutId:type",
          "docComment": "/**\n * Remove the _id field from an object shaped type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type WithoutId<TSchema> = "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<TSchema, '_id'>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "WithoutId",
          "typeParameters": [
            {
              "typeParameterName": "TSchema",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!WithSessionCallback:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type WithSessionCallback = "
            },
            {
              "kind": "Content",
              "text": "(session: "
            },
            {
              "kind": "Reference",
              "text": "ClientSession",
              "canonicalReference": "mongodb!ClientSession:class"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "WithSessionCallback",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mongodb!WithTransactionCallback:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type WithTransactionCallback<T = "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(session: "
            },
            {
              "kind": "Reference",
              "text": "ClientSession",
              "canonicalReference": "mongodb!ClientSession:class"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "WithTransactionCallback",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 8
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!WriteConcern:class",
          "docComment": "/**\n * A MongoDB WriteConcern, which describes the level of acknowledgement requested from MongoDB for write operations.\n *\n * @see\n *\n * https://docs.mongodb.com/manual/reference/write-concern/\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class WriteConcern "
            }
          ],
          "releaseTag": "Public",
          "name": "WriteConcern",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!WriteConcern:constructor(1)",
              "docComment": "/**\n * Constructs a WriteConcern from the write concern properties.\n *\n * @param w - request acknowledgment that the write operation has propagated to a specified number of mongod instances or to mongod instances with specified tags.\n *\n * @param wtimeout - specify a time limit to prevent write operations from blocking indefinitely\n *\n * @param j - request acknowledgment that the write operation has been written to the on-disk journal\n *\n * @param fsync - equivalent to the j option\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(w?: "
                },
                {
                  "kind": "Reference",
                  "text": "W",
                  "canonicalReference": "mongodb!W:type"
                },
                {
                  "kind": "Content",
                  "text": ", wtimeout?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", j?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", fsync?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | 1"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "w",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "wtimeout",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "j",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "fsync",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!WriteConcern.fromOptions:member(1)",
              "docComment": "/**\n * Construct a WriteConcern given an options object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromOptions(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcernOptions",
                  "canonicalReference": "mongodb!WriteConcernOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcern",
                  "canonicalReference": "mongodb!WriteConcern:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "W",
                  "canonicalReference": "mongodb!W:type"
                },
                {
                  "kind": "Content",
                  "text": ", inherit?: "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcernOptions",
                  "canonicalReference": "mongodb!WriteConcernOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcern",
                  "canonicalReference": "mongodb!WriteConcern:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcern",
                  "canonicalReference": "mongodb!WriteConcern:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "inherit",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "fromOptions"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!WriteConcern#fsync:member",
              "docComment": "/**\n * equivalent to the j option\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fsync?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | 1"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fsync",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!WriteConcern#j:member",
              "docComment": "/**\n * request acknowledgment that the write operation has been written to the on-disk journal\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "j?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "j",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!WriteConcern#w:member",
              "docComment": "/**\n * request acknowledgment that the write operation has propagated to a specified number of mongod instances or to mongod instances with specified tags.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "w?: "
                },
                {
                  "kind": "Reference",
                  "text": "W",
                  "canonicalReference": "mongodb!W:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "w",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!WriteConcern#wtimeout:member",
              "docComment": "/**\n * specify a time limit to prevent write operations from blocking indefinitely\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wtimeout?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "wtimeout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!WriteConcernError:class",
          "docComment": "/**\n * An error representing a failure by the server to apply the requested write concern to the bulk operation.\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class WriteConcernError "
            }
          ],
          "releaseTag": "Public",
          "name": "WriteConcernError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!WriteConcernError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `WriteConcernError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(error: "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcernErrorData",
                  "canonicalReference": "mongodb!WriteConcernErrorData:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!WriteConcernError#code:member",
              "docComment": "/**\n * Write concern error code.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get code(): "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "code",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!WriteConcernError#err:member",
              "docComment": "/**\n * @deprecated\n *\n * The `err` prop that contained a MongoServerError has been deprecated.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get err(): "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcernErrorData",
                  "canonicalReference": "mongodb!WriteConcernErrorData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "err",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!WriteConcernError#errInfo:member",
              "docComment": "/**\n * Write concern error info.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get errInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!WriteConcernError#errmsg:member",
              "docComment": "/**\n * Write concern error message.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get errmsg(): "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errmsg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!WriteConcernError#toJSON:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSON(): "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcernErrorData",
                  "canonicalReference": "mongodb!WriteConcernErrorData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "toJSON"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!WriteConcernError#toString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "toString"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!WriteConcernErrorData:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface WriteConcernErrorData "
            }
          ],
          "releaseTag": "Public",
          "name": "WriteConcernErrorData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!WriteConcernErrorData#code:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "code: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "code",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!WriteConcernErrorData#errInfo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errInfo?: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "errInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!WriteConcernErrorData#errmsg:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errmsg: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errmsg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!WriteConcernOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface WriteConcernOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "WriteConcernOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!WriteConcernOptions#writeConcern:member",
              "docComment": "/**\n * Write Concern as an object\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "writeConcern?: "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcern",
                  "canonicalReference": "mongodb!WriteConcern:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "WriteConcernSettings",
                  "canonicalReference": "mongodb!WriteConcernSettings:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "writeConcern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "mongodb!WriteConcernSettings:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface WriteConcernSettings "
            }
          ],
          "releaseTag": "Public",
          "name": "WriteConcernSettings",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!WriteConcernSettings#fsync:member",
              "docComment": "/**\n * The file sync write concern\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fsync?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | 1"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fsync",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!WriteConcernSettings#j:member",
              "docComment": "/**\n * The journal write concern\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "j?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "j",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!WriteConcernSettings#journal:member",
              "docComment": "/**\n * The journal write concern\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "journal?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "journal",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!WriteConcernSettings#w:member",
              "docComment": "/**\n * The write concern\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "w?: "
                },
                {
                  "kind": "Reference",
                  "text": "W",
                  "canonicalReference": "mongodb!W:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "w",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!WriteConcernSettings#wtimeout:member",
              "docComment": "/**\n * The write concern timeout\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wtimeout?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "wtimeout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mongodb!WriteConcernSettings#wtimeoutMS:member",
              "docComment": "/**\n * The write concern timeout\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wtimeoutMS?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "wtimeoutMS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "mongodb!WriteError:class",
          "docComment": "/**\n * An error that occurred during a BulkWrite on the server.\n *\n * @category\n *\n * Error\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class WriteError "
            }
          ],
          "releaseTag": "Public",
          "name": "WriteError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "mongodb!WriteError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `WriteError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(err: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteOperationError",
                  "canonicalReference": "mongodb!BulkWriteOperationError:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "err",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!WriteError#code:member",
              "docComment": "/**\n * WriteError code.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get code(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "code",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!WriteError#err:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "err: "
                },
                {
                  "kind": "Reference",
                  "text": "BulkWriteOperationError",
                  "canonicalReference": "mongodb!BulkWriteOperationError:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "err",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!WriteError#errInfo:member",
              "docComment": "/**\n * WriteError details.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get errInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!WriteError#errmsg:member",
              "docComment": "/**\n * WriteError message.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get errmsg(): "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errmsg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!WriteError#getOperation:member(1)",
              "docComment": "/**\n * Returns the underlying operation that caused the error\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getOperation(): "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "getOperation"
            },
            {
              "kind": "Property",
              "canonicalReference": "mongodb!WriteError#index:member",
              "docComment": "/**\n * WriteError original bulk operation index.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get index(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "index",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!WriteError#toJSON:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSON(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        code: number;\n        index: number;\n        errmsg?: string;\n        op: "
                },
                {
                  "kind": "Reference",
                  "text": "Document",
                  "canonicalReference": "bson!Document:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "toJSON"
            },
            {
              "kind": "Method",
              "canonicalReference": "mongodb!WriteError#toString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "toString"
            }
          ],
          "implementsTokenRanges": []
        }
      ]
    }
  ]
}
